{"id":"6f9239d7d9a79ea2cdb4b8d3cf25b774","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/DAOContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DAOContract is Ownable {\n    constructor() Ownable(msg.sender) {}\n    // Proposal lifecycle, staking, treasury logic here\n}\n"},"contracts/KofiCoin.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract KofiCoin is ERC20Upgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    function initialize(address admin) public initializer {\n        __ERC20_init(\"Kofi Coin\", \"KOFI\");\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(MINTER_ROLE, admin);\n        _grantRole(UPGRADER_ROLE, admin);\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n}\n"},"contracts/LearningModuleNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract LearningModuleNFT is ERC721URIStorage, Ownable {\n    uint256 public nextTokenId;\n    mapping(address => bool) public hasMinted;\n\n    constructor() ERC721(\"Learning Module NFT\", \"LMNFT\") Ownable(msg.sender) {}\n\n    function mint(address to, string memory uri) external onlyOwner {\n        require(!hasMinted[to], \"Already minted\");\n        _safeMint(to, nextTokenId);\n        _setTokenURI(nextTokenId, uri);\n        hasMinted[to] = true;\n        nextTokenId++;\n    }\n}\n"},"contracts/Marketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Marketplace is Ownable {\n    constructor() Ownable(msg.sender) {}\n    // Vendor registration, escrow, dispute logic here\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[1475],"ERC165Upgradeable":[1515],"IAccessControl":[1598],"Initializable":[630]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1599,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1476,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1516,"src":"284:79:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"292:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":631,"src":"364:63:0","symbolAliases":[{"foreign":{"id":8,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"372:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"Initializable","nameLocations":["2136:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2136:13:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2136:13:0"},{"baseName":{"id":13,"name":"ContextUpgradeable","nameLocations":["2151:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1475,"src":"2151:18:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2151:18:0"},{"baseName":{"id":15,"name":"IAccessControl","nameLocations":["2171:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":1598,"src":"2171:14:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2171:14:0"},{"baseName":{"id":17,"name":"ERC165Upgradeable","nameLocations":["2187:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":1515,"src":"2187:17:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2187:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"429:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1515,5603,1598,1475,630],"name":"AccessControlUpgradeable","nameLocation":"2108:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":25,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"hasRole","nameLocation":"2270:7:0","nodeType":"VariableDeclaration","scope":25,"src":"2237:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":21,"keyName":"account","keyNameLocation":"2253:7:0","keyType":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2237:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"adminRole","nameLocation":"2295:9:0","nodeType":"VariableDeclaration","scope":25,"src":"2287:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2218:8:0","nodeType":"StructDefinition","scope":362,"src":"2211:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":28,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2341:18:0","nodeType":"VariableDeclaration","scope":362,"src":"2317:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2362:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2374:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":35,"members":[{"constant":false,"id":34,"mutability":"mutable","name":"_roles","nameLocation":"2522:6:0","nodeType":"VariableDeclaration","scope":35,"src":"2488:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":33,"keyName":"role","keyNameLocation":"2504:4:0","keyType":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2488:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"RoleData","nameLocations":["2512:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":25,"src":"2512:8:0"},"referencedDeclaration":25,"src":"2512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2457:20:0","nodeType":"StructDefinition","scope":362,"src":"2450:85:0","visibility":"public"},{"constant":true,"id":38,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2683:28:0","nodeType":"VariableDeclaration","scope":362,"src":"2658:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"2877:87:0","statements":[{"AST":{"nativeSrc":"2896:62:0","nodeType":"YulBlock","src":"2896:62:0","statements":[{"nativeSrc":"2910:38:0","nodeType":"YulAssignment","src":"2910:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"2920:28:0","nodeType":"YulIdentifier","src":"2920:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2910:6:0","nodeType":"YulIdentifier","src":"2910:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":42,"isOffset":false,"isSlot":true,"src":"2910:6:0","suffix":"slot","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2920:28:0","valueSize":1}],"id":44,"nodeType":"InlineAssembly","src":"2887:71:0"}]},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2796:24:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"2820:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"$","nameLocation":"2874:1:0","nodeType":"VariableDeclaration","scope":46,"src":"2845:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":41,"nodeType":"UserDefinedTypeName","pathNode":{"id":40,"name":"AccessControlStorage","nameLocations":["2845:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"2845:20:0"},"referencedDeclaration":35,"src":"2845:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2844:32:0"},"scope":362,"src":"2787:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"3181:44:0","statements":[{"expression":{"arguments":[{"id":52,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"3202:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":51,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":129,"src":"3191:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"3191:16:0"},{"id":55,"nodeType":"PlaceholderStatement","src":"3217:1:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2970:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":57,"name":"onlyRole","nameLocation":"3158:8:0","nodeType":"ModifierDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"role","nameLocation":"3175:4:0","nodeType":"VariableDeclaration","scope":57,"src":"3167:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3167:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3166:14:0"},"src":"3149:76:0","virtual":false,"visibility":"internal"},{"body":{"id":62,"nodeType":"Block","src":"3289:7:0","statements":[]},"id":63,"implemented":true,"kind":"function","modifiers":[{"id":60,"kind":"modifierInvocation","modifierName":{"id":59,"name":"onlyInitializing","nameLocations":["3272:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3272:16:0"},"nodeType":"ModifierInvocation","src":"3272:16:0"}],"name":"__AccessControl_init","nameLocation":"3240:20:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3260:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"3289:0:0"},"scope":362,"src":"3231:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":68,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":69,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3311:30:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":362,"src":"3302:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1514],"body":{"id":90,"nodeType":"Block","src":"3534:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3551:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":80,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3571:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1598_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1598_$","typeString":"type(contract IAccessControl)"}],"id":79,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3566:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1598","typeString":"type(contract IAccessControl)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3587:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3566:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3551:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":86,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"3626:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":84,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3602:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$362_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3608:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1514,"src":"3602:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3551:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":77,"id":89,"nodeType":"Return","src":"3544:94:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"3382:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3452:17:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"3510:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"interfaceId","nameLocation":"3477:11:0","nodeType":"VariableDeclaration","scope":91,"src":"3470:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3470:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3469:20:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3528:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":75,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3527:6:0"},"scope":362,"src":"3443:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1565],"body":{"id":115,"nodeType":"Block","src":"3815:124:0","statements":[{"assignments":[103],"declarations":[{"constant":false,"id":103,"mutability":"mutable","name":"$","nameLocation":"3854:1:0","nodeType":"VariableDeclaration","scope":115,"src":"3825:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":102,"nodeType":"UserDefinedTypeName","pathNode":{"id":101,"name":"AccessControlStorage","nameLocations":["3825:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"3825:20:0"},"referencedDeclaration":35,"src":"3825:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":106,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":104,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3858:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3825:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":107,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3901:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3903:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3901:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":110,"indexExpression":{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3910:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":113,"indexExpression":{"id":112,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3924:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":100,"id":114,"nodeType":"Return","src":"3894:38:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3651:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3741:7:0","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"role","nameLocation":"3757:4:0","nodeType":"VariableDeclaration","scope":116,"src":"3749:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":93,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3749:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"account","nameLocation":"3771:7:0","nodeType":"VariableDeclaration","scope":116,"src":"3763:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"3809:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"3809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3808:6:0"},"scope":362,"src":"3732:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":128,"nodeType":"Block","src":"4204:47:0","statements":[{"expression":{"arguments":[{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4225:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":124,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4231:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":122,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[129,150],"referencedDeclaration":150,"src":"4214:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4214:30:0"}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"3945:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":129,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4157:10:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"role","nameLocation":"4176:4:0","nodeType":"VariableDeclaration","scope":129,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"4204:0:0"},"scope":362,"src":"4148:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"4454:124:0","statements":[{"condition":{"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4468:23:0","subExpression":{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4477:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":139,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4483:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"IfStatement","src":"4464:108:0","trueBody":{"id":147,"nodeType":"Block","src":"4493:79:0","statements":[{"errorCall":{"arguments":[{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4547:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":144,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4556:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"4514:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"RevertStatement","src":"4507:54:0"}]}}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4257:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4390:10:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4409:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4401:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4401:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4423:7:0","nodeType":"VariableDeclaration","scope":150,"src":"4415:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4400:31:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4454:0:0"},"scope":362,"src":"4381:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1573],"body":{"id":170,"nodeType":"Block","src":"4833:117:0","statements":[{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"$","nameLocation":"4872:1:0","nodeType":"VariableDeclaration","scope":170,"src":"4843:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"AccessControlStorage","nameLocations":["4843:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"4843:20:0"},"referencedDeclaration":35,"src":"4843:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4876:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4843:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":164,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"4919:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"4919:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":167,"indexExpression":{"id":166,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4928:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4919:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4934:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"4919:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":157,"id":169,"nodeType":"Return","src":"4912:31:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4584:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":171,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4768:12:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4789:4:0","nodeType":"VariableDeclaration","scope":171,"src":"4781:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4780:14:0"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":171,"src":"4824:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4823:9:0"},"scope":362,"src":"4759:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1581],"body":{"id":189,"nodeType":"Block","src":"5340:42:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5361:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5367:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5350:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5350:25:0"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"4956:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"5333:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5320:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nameLocations":["5311:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5311:8:0"},"nodeType":"ModifierInvocation","src":"5311:28:0"}],"name":"grantRole","nameLocation":"5255:9:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"role","nameLocation":"5273:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5265:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5265:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"5287:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5279:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"5279:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5264:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5340:0:0"},"scope":362,"src":"5246:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1589],"body":{"id":208,"nodeType":"Block","src":"5757:43:0","statements":[{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5779:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5785:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5767:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":207,"nodeType":"ExpressionStatement","src":"5767:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5388:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":209,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":199,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5750:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":198,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5737:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":197,"name":"onlyRole","nameLocations":["5728:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5728:8:0"},"nodeType":"ModifierInvocation","src":"5728:28:0"}],"name":"revokeRole","nameLocation":"5671:10:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5690:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5682:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5704:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5696:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:31:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"5757:0:0"},"scope":362,"src":"5662:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1597],"body":{"id":231,"nodeType":"Block","src":"6427:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6441:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"6463:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6441:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"IfStatement","src":"6437:102:0","trueBody":{"id":224,"nodeType":"Block","src":"6477:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"6498:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"RevertStatement","src":"6491:37:0"}]}},{"expression":{"arguments":[{"id":227,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":228,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6567:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":226,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"6549:37:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"5806:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":232,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6357:12:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6378:4:0","nodeType":"VariableDeclaration","scope":232,"src":"6370:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6392:18:0","nodeType":"VariableDeclaration","scope":232,"src":"6384:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6369:42:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6427:0:0"},"scope":362,"src":"6348:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":267,"nodeType":"Block","src":"6791:245:0","statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"$","nameLocation":"6830:1:0","nodeType":"VariableDeclaration","scope":267,"src":"6801:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":241,"nodeType":"UserDefinedTypeName","pathNode":{"id":240,"name":"AccessControlStorage","nameLocations":["6801:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"6801:20:0"},"referencedDeclaration":35,"src":"6801:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":245,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"6834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6801:59:0"},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6878:17:0","nodeType":"VariableDeclaration","scope":267,"src":"6870:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6911:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"6898:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6870:46:0"},{"expression":{"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":252,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"6926:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6928:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6926:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":256,"indexExpression":{"id":254,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6935:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6926:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6941:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"6926:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":258,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6953:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6926:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":260,"nodeType":"ExpressionStatement","src":"6926:36:0"},{"eventCall":{"arguments":[{"id":262,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6994:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":263,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7000:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":264,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7019:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":261,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"6977:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"6972:57:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"6599:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6727:13:0","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"role","nameLocation":"6749:4:0","nodeType":"VariableDeclaration","scope":268,"src":"6741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6741:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"adminRole","nameLocation":"6763:9:0","nodeType":"VariableDeclaration","scope":268,"src":"6755:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6755:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6740:33:0"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"6791:0:0"},"scope":362,"src":"6718:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"7353:304:0","statements":[{"assignments":[280],"declarations":[{"constant":false,"id":280,"mutability":"mutable","name":"$","nameLocation":"7392:1:0","nodeType":"VariableDeclaration","scope":314,"src":"7363:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":279,"nodeType":"UserDefinedTypeName","pathNode":{"id":278,"name":"AccessControlStorage","nameLocations":["7363:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7363:20:0"},"referencedDeclaration":35,"src":"7363:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":283,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":281,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7396:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7363:59:0"},{"condition":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7436:23:0","subExpression":{"arguments":[{"id":285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":286,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7451:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":284,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7437:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":312,"nodeType":"Block","src":"7614:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7635:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":277,"id":311,"nodeType":"Return","src":"7628:12:0"}]},"id":313,"nodeType":"IfStatement","src":"7432:219:0","trueBody":{"id":309,"nodeType":"Block","src":"7461:147:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"7475:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7477:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7475:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":293,"indexExpression":{"id":291,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7475:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7490:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"7475:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":296,"indexExpression":{"id":295,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7498:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7509:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7475:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":299,"nodeType":"ExpressionStatement","src":"7475:38:0"},{"eventCall":{"arguments":[{"id":301,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7544:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":302,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7550:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"7559:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"7532:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":306,"nodeType":"EmitStatement","src":"7527:45:0"},{"expression":{"hexValue":"74727565","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":277,"id":308,"nodeType":"Return","src":"7586:11:0"}]}}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7042:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":315,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7279:10:0","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"role","nameLocation":"7298:4:0","nodeType":"VariableDeclaration","scope":315,"src":"7290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"7312:7:0","nodeType":"VariableDeclaration","scope":315,"src":"7304:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7289:31:0"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"7347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"7347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7346:6:0"},"scope":362,"src":"7270:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":360,"nodeType":"Block","src":"7978:304:0","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"$","nameLocation":"8017:1:0","nodeType":"VariableDeclaration","scope":360,"src":"7988:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"AccessControlStorage","nameLocations":["7988:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":35,"src":"7988:20:0"},"referencedDeclaration":35,"src":"7988:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":330,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":328,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"8021:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7988:59:0"},{"condition":{"arguments":[{"id":332,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8069:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":333,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8075:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":331,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8061:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8061:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":358,"nodeType":"Block","src":"8239:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8260:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":324,"id":357,"nodeType":"Return","src":"8253:12:0"}]},"id":359,"nodeType":"IfStatement","src":"8057:219:0","trueBody":{"id":355,"nodeType":"Block","src":"8085:148:0","statements":[{"expression":{"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":335,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8099:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$35_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8101:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":34,"src":"8099:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":339,"indexExpression":{"id":337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8108:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8099:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$25_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8114:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":22,"src":"8099:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":342,"indexExpression":{"id":341,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8099:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8133:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8099:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":345,"nodeType":"ExpressionStatement","src":"8099:39:0"},{"eventCall":{"arguments":[{"id":347,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8169:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8175:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8184:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"8157:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8157:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"EmitStatement","src":"8152:45:0"},{"expression":{"hexValue":"74727565","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8218:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":324,"id":354,"nodeType":"Return","src":"8211:11:0"}]}}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"7663:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7903:11:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"role","nameLocation":"7923:4:0","nodeType":"VariableDeclaration","scope":361,"src":"7915:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7915:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"account","nameLocation":"7937:7:0","nodeType":"VariableDeclaration","scope":361,"src":"7929:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"7929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7914:31:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"7972:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"7972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7971:6:0"},"scope":362,"src":"7894:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":363,"src":"2090:6194:0","usedErrors":[379,382,1525,1528],"usedEvents":[387,1537,1546,1555]}],"src":"108:8177:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":630,"linearizedBaseContracts":[630],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":373,"members":[{"constant":false,"id":369,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":373,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":373,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":630,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":376,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":630,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":379,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":382,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":387,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":387,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":384,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":469,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":469,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"4158:20:1"},"referencedDeclaration":373,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":393,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":469,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"initialValue":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":398,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":469,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":406,"initialValue":{"expression":{"id":404,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":407,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[416],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":469,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":415,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$630","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$630","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":430,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":432,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":438,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":445,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":453,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":447,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":452,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":455,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":456,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":467,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":457,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":470,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":516,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":516,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"6355:20:1"},"referencedDeclaration":373,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":485,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":491,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":488,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":493,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":496,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":498,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":499,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":505,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":506,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":513,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":512,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":517,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":517,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":472,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":524,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":523,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":525,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":529,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":535,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":630,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":583,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"7824:20:1"},"referencedDeclaration":373,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":545,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":548,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":553,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":555,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":558,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":582,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":581,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":563,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":567,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":572,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":575,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":573,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":630,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":587,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":630,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":601,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":372,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":600,"id":604,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":598,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":630,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":612,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":611,"id":613,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":630,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[623],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":628,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":626,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":624,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":620,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":623,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":627,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":629,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"9129:20:1"},"referencedDeclaration":373,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$373_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":630,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":631,"src":"2349:6929:1","usedErrors":[379,382],"usedEvents":[387]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2240],"IERC1822Proxiable":[1809],"Initializable":[630],"UUPSUpgradeable":[812]},"id":813,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":813,"sourceUnit":1810,"src":"141:88:2","symbolAliases":[{"foreign":{"id":633,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":813,"sourceUnit":2241,"src":"230:84:2","symbolAliases":[{"foreign":{"id":635,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":813,"sourceUnit":631,"src":"315:50:2","symbolAliases":[{"foreign":{"id":637,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":640,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1023:13:2"},"id":641,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":642,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1809,"src":"1038:17:2"},"id":643,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":812,"linearizedBaseContracts":[812,1809,630],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":650,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":812,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":648,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$812","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$812","typeString":"contract UUPSUpgradeable"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":654,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":812,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":652,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":657,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":662,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":662,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":669,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":668,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":670,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":677,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":673,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":676,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":678,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":683,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":684,"implemented":true,"kind":"function","modifiers":[{"id":681,"kind":"modifierInvocation","modifierName":{"id":680,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":812,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":690,"implemented":true,"kind":"function","modifiers":[{"id":687,"kind":"modifierInvocation","modifierName":{"id":686,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":812,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1808],"body":{"id":701,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":698,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2240_$","typeString":"type(library ERC1967Utils)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1961,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":697,"id":700,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":702,"implemented":true,"kind":"function","modifiers":[{"id":694,"kind":"modifierInvocation","modifierName":{"id":693,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":678,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":812,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":721,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":713,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":712,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":717,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":716,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":722,"implemented":true,"kind":"function","modifiers":[{"id":710,"kind":"modifierInvocation","modifierName":{"id":709,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":670,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":722,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":722,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":812,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":743,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":728,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$812","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$812","typeString":"contract UUPSUpgradeable"}],"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":730,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":732,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2240_$","typeString":"type(library ERC1967Utils)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":735,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":741,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":738,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":744,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":812,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":750,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$812","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$812","typeString":"contract UUPSUpgradeable"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":752,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":758,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":757,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":754,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":812,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":766,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":766,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":812,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":799,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":783,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2240_$","typeString":"type(library ERC1967Utils)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1961,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":791,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":790,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":787,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":786,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":795,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":792,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2240_$","typeString":"type(library ERC1967Utils)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2055,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":798,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":800,"nodeType":"TryCatchClause","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":800,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":807,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":804,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":801,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2240_$","typeString":"type(library ERC1967Utils)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1966,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":808,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":775,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":774,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1809_$","typeString":"type(contract IERC1822Proxiable)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1809","typeString":"contract IERC1822Proxiable"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":809,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":811,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":811,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":770,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":812,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":813,"src":"986:5586:2","usedErrors":[379,382,657,662,1966,1979,3687,3980],"usedEvents":[387,1758]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1475],"ERC20Upgradeable":[1429],"IERC20":[2328],"IERC20Errors":[1851],"IERC20Metadata":[2354],"Initializable":[630]},"id":1430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":814,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":2329,"src":"131:70:3","symbolAliases":[{"foreign":{"id":815,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":2355,"src":"202:97:3","symbolAliases":[{"foreign":{"id":817,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":1476,"src":"300:70:3","symbolAliases":[{"foreign":{"id":819,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":1947,"src":"371:83:3","symbolAliases":[{"foreign":{"id":821,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":631,"src":"455:66:3","symbolAliases":[{"foreign":{"id":823,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":826,"name":"Initializable","nameLocations":["1319:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1319:13:3"},"id":827,"nodeType":"InheritanceSpecifier","src":"1319:13:3"},{"baseName":{"id":828,"name":"ContextUpgradeable","nameLocations":["1334:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1475,"src":"1334:18:3"},"id":829,"nodeType":"InheritanceSpecifier","src":"1334:18:3"},{"baseName":{"id":830,"name":"IERC20","nameLocations":["1354:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"1354:6:3"},"id":831,"nodeType":"InheritanceSpecifier","src":"1354:6:3"},{"baseName":{"id":832,"name":"IERC20Metadata","nameLocations":["1362:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2354,"src":"1362:14:3"},"id":833,"nodeType":"InheritanceSpecifier","src":"1362:14:3"},{"baseName":{"id":834,"name":"IERC20Errors","nameLocations":["1378:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1851,"src":"1378:12:3"},"id":835,"nodeType":"InheritanceSpecifier","src":"1378:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"523:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1429,"linearizedBaseContracts":[1429,1851,2354,2328,1475,630],"name":"ERC20Upgradeable","nameLocation":"1299:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"1397:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":853,"members":[{"constant":false,"id":840,"mutability":"mutable","name":"_balances","nameLocation":"1531:9:3","nodeType":"VariableDeclaration","scope":853,"src":"1495:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":839,"keyName":"account","keyNameLocation":"1511:7:3","keyType":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1495:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"_allowances","nameLocation":"1615:11:3","nodeType":"VariableDeclaration","scope":853,"src":"1551:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":845,"keyName":"account","keyNameLocation":"1567:7:3","keyType":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1551:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":844,"keyName":"spender","keyNameLocation":"1594:7:3","keyType":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"_totalSupply","nameLocation":"1645:12:3","nodeType":"VariableDeclaration","scope":853,"src":"1637:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"_name","nameLocation":"1675:5:3","nodeType":"VariableDeclaration","scope":853,"src":"1668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":849,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"_symbol","nameLocation":"1697:7:3","nodeType":"VariableDeclaration","scope":853,"src":"1690:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1472:12:3","nodeType":"StructDefinition","scope":1429,"src":"1465:246:3","visibility":"public"},{"constant":true,"id":856,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"1851:20:3","nodeType":"VariableDeclaration","scope":1429,"src":"1826:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":863,"nodeType":"Block","src":"2021:79:3","statements":[{"AST":{"nativeSrc":"2040:54:3","nodeType":"YulBlock","src":"2040:54:3","statements":[{"nativeSrc":"2054:30:3","nodeType":"YulAssignment","src":"2054:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2064:20:3","nodeType":"YulIdentifier","src":"2064:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2054:6:3","nodeType":"YulIdentifier","src":"2054:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":860,"isOffset":false,"isSlot":true,"src":"2054:6:3","suffix":"slot","valueSize":1},{"declaration":856,"isOffset":false,"isSlot":false,"src":"2064:20:3","valueSize":1}],"id":862,"nodeType":"InlineAssembly","src":"2031:63:3"}]},"id":864,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"1956:16:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"1972:2:3"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"$","nameLocation":"2018:1:3","nodeType":"VariableDeclaration","scope":864,"src":"1997:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":859,"nodeType":"UserDefinedTypeName","pathNode":{"id":858,"name":"ERC20Storage","nameLocations":["1997:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"1997:12:3"},"referencedDeclaration":853,"src":"1997:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"1996:24:3"},"scope":1429,"src":"1947:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":879,"nodeType":"Block","src":"2355:55:3","statements":[{"expression":{"arguments":[{"id":875,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2388:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":876,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2395:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":874,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"2365:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"2365:38:3"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2106:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":880,"implemented":true,"kind":"function","modifiers":[{"id":872,"kind":"modifierInvocation","modifierName":{"id":871,"name":"onlyInitializing","nameLocations":["2338:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"2338:16:3"},"nodeType":"ModifierInvocation","src":"2338:16:3"}],"name":"__ERC20_init","nameLocation":"2272:12:3","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"name_","nameLocation":"2299:5:3","nodeType":"VariableDeclaration","scope":880,"src":"2285:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":866,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"symbol_","nameLocation":"2320:7:3","nodeType":"VariableDeclaration","scope":880,"src":"2306:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":868,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2284:44:3"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"2355:0:3"},"scope":1429,"src":"2263:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":907,"nodeType":"Block","src":"2518:114:3","statements":[{"assignments":[891],"declarations":[{"constant":false,"id":891,"mutability":"mutable","name":"$","nameLocation":"2549:1:3","nodeType":"VariableDeclaration","scope":907,"src":"2528:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":890,"nodeType":"UserDefinedTypeName","pathNode":{"id":889,"name":"ERC20Storage","nameLocations":["2528:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"2528:12:3"},"referencedDeclaration":853,"src":"2528:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":894,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":892,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2553:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2528:43:3"},{"expression":{"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":895,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2581:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2583:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":850,"src":"2581:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":898,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2591:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2581:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":900,"nodeType":"ExpressionStatement","src":"2581:15:3"},{"expression":{"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":901,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2606:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2608:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":852,"src":"2606:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":904,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2618:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2606:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":906,"nodeType":"ExpressionStatement","src":"2606:19:3"}]},"id":908,"implemented":true,"kind":"function","modifiers":[{"id":887,"kind":"modifierInvocation","modifierName":{"id":886,"name":"onlyInitializing","nameLocations":["2501:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"2501:16:3"},"nodeType":"ModifierInvocation","src":"2501:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2425:22:3","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"name_","nameLocation":"2462:5:3","nodeType":"VariableDeclaration","scope":908,"src":"2448:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":881,"name":"string","nodeType":"ElementaryTypeName","src":"2448:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"symbol_","nameLocation":"2483:7:3","nodeType":"VariableDeclaration","scope":908,"src":"2469:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"2469:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:44:3"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"2518:0:3"},"scope":1429,"src":"2416:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2341],"body":{"id":923,"nodeType":"Block","src":"2757:84:3","statements":[{"assignments":[916],"declarations":[{"constant":false,"id":916,"mutability":"mutable","name":"$","nameLocation":"2788:1:3","nodeType":"VariableDeclaration","scope":923,"src":"2767:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":915,"nodeType":"UserDefinedTypeName","pathNode":{"id":914,"name":"ERC20Storage","nameLocations":["2767:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"2767:12:3"},"referencedDeclaration":853,"src":"2767:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":919,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":917,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2792:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2767:43:3"},{"expression":{"expression":{"id":920,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2827:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2829:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":850,"src":"2827:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":913,"id":922,"nodeType":"Return","src":"2820:14:3"}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"2638:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":924,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2706:4:3","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"2710:2:3"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"2742:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":911,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2741:15:3"},"scope":1429,"src":"2697:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2347],"body":{"id":939,"nodeType":"Block","src":"3016:86:3","statements":[{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"$","nameLocation":"3047:1:3","nodeType":"VariableDeclaration","scope":939,"src":"3026:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":931,"nodeType":"UserDefinedTypeName","pathNode":{"id":930,"name":"ERC20Storage","nameLocations":["3026:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"3026:12:3"},"referencedDeclaration":853,"src":"3026:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":935,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":933,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"3051:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3026:43:3"},{"expression":{"expression":{"id":936,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3086:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":852,"src":"3086:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":929,"id":938,"nodeType":"Return","src":"3079:16:3"}]},"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"2847:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":940,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2963:6:3","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"2969:2:3"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"3001:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":927,"name":"string","nodeType":"ElementaryTypeName","src":"3001:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3000:15:3"},"scope":1429,"src":"2954:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2353],"body":{"id":948,"nodeType":"Block","src":"3791:26:3","statements":[{"expression":{"hexValue":"3138","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3808:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":945,"id":947,"nodeType":"Return","src":"3801:9:3"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"3108:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":949,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3744:8:3","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"3752:2:3"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"3784:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":943,"name":"uint8","nodeType":"ElementaryTypeName","src":"3784:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3783:7:3"},"scope":1429,"src":"3735:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2277],"body":{"id":964,"nodeType":"Block","src":"3938:91:3","statements":[{"assignments":[957],"declarations":[{"constant":false,"id":957,"mutability":"mutable","name":"$","nameLocation":"3969:1:3","nodeType":"VariableDeclaration","scope":964,"src":"3948:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":956,"nodeType":"UserDefinedTypeName","pathNode":{"id":955,"name":"ERC20Storage","nameLocations":["3948:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"3948:12:3"},"referencedDeclaration":853,"src":"3948:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":960,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":958,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"3973:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3948:43:3"},{"expression":{"expression":{"id":961,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"4008:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4010:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":848,"src":"4008:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":954,"id":963,"nodeType":"Return","src":"4001:21:3"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3823:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":965,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3886:11:3","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3897:2:3"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":965,"src":"3929:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3928:9:3"},"scope":1429,"src":"3877:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2285],"body":{"id":984,"nodeType":"Block","src":"4161:97:3","statements":[{"assignments":[975],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"$","nameLocation":"4192:1:3","nodeType":"VariableDeclaration","scope":984,"src":"4171:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":974,"nodeType":"UserDefinedTypeName","pathNode":{"id":973,"name":"ERC20Storage","nameLocations":["4171:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"4171:12:3"},"referencedDeclaration":853,"src":"4171:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":978,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":976,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"4196:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4196:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4171:43:3"},{"expression":{"baseExpression":{"expression":{"id":979,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"4231:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4233:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":840,"src":"4231:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":982,"indexExpression":{"id":981,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4231:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":972,"id":983,"nodeType":"Return","src":"4224:27:3"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"4035:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":985,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4096:9:3","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"account","nameLocation":"4114:7:3","nodeType":"VariableDeclaration","scope":985,"src":"4106:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"4106:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4105:17:3"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"4152:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4152:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4151:9:3"},"scope":1429,"src":"4087:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2295],"body":{"id":1008,"nodeType":"Block","src":"4528:103:3","statements":[{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"owner","nameLocation":"4546:5:3","nodeType":"VariableDeclaration","scope":1008,"src":"4538:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":999,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":997,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4554:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:28:3"},{"expression":{"arguments":[{"id":1001,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4586:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4593:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"4597:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1000,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"4576:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"ExpressionStatement","src":"4576:27:3"},{"expression":{"hexValue":"74727565","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4620:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":994,"id":1007,"nodeType":"Return","src":"4613:11:3"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"4264:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1009,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4462:8:3","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"to","nameLocation":"4479:2:3","nodeType":"VariableDeclaration","scope":1009,"src":"4471:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"4471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"value","nameLocation":"4491:5:3","nodeType":"VariableDeclaration","scope":1009,"src":"4483:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4470:27:3"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"4522:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":992,"name":"bool","nodeType":"ElementaryTypeName","src":"4522:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4521:6:3"},"scope":1429,"src":"4453:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2305],"body":{"id":1032,"nodeType":"Block","src":"4778:106:3","statements":[{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"$","nameLocation":"4809:1:3","nodeType":"VariableDeclaration","scope":1032,"src":"4788:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"ERC20Storage","nameLocations":["4788:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"4788:12:3"},"referencedDeclaration":853,"src":"4788:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1024,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1022,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"4813:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4813:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4788:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1025,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4848:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4850:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":846,"src":"4848:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1028,"indexExpression":{"id":1027,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"4862:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4848:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1030,"indexExpression":{"id":1029,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4869:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4848:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1018,"id":1031,"nodeType":"Return","src":"4841:36:3"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"4637:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4698:9:3","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"owner","nameLocation":"4716:5:3","nodeType":"VariableDeclaration","scope":1033,"src":"4708:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"spender","nameLocation":"4731:7:3","nodeType":"VariableDeclaration","scope":1033,"src":"4723:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"4723:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4707:32:3"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1033,"src":"4769:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"4769:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4768:9:3"},"scope":1429,"src":"4689:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2315],"body":{"id":1056,"nodeType":"Block","src":"5270:107:3","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"owner","nameLocation":"5288:5:3","nodeType":"VariableDeclaration","scope":1056,"src":"5280:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"5280:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1047,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1045,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"5296:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5280:28:3"},{"expression":{"arguments":[{"id":1049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"5327:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"5334:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5343:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1048,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1312,1380],"referencedDeclaration":1312,"src":"5318:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"5318:31:3"},{"expression":{"hexValue":"74727565","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1042,"id":1055,"nodeType":"Return","src":"5359:11:3"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"4890:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5200:7:3","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"spender","nameLocation":"5216:7:3","nodeType":"VariableDeclaration","scope":1057,"src":"5208:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"5208:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"value","nameLocation":"5233:5:3","nodeType":"VariableDeclaration","scope":1057,"src":"5225:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5207:32:3"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1057,"src":"5264:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1040,"name":"bool","nodeType":"ElementaryTypeName","src":"5264:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5263:6:3"},"scope":1429,"src":"5191:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2327],"body":{"id":1088,"nodeType":"Block","src":"6062:151:3","statements":[{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"spender","nameLocation":"6080:7:3","nodeType":"VariableDeclaration","scope":1088,"src":"6072:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"6072:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1073,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1071,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"6090:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6090:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6072:30:3"},{"expression":{"arguments":[{"id":1075,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6128:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1076,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"6134:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6143:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1074,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6112:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6112:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"6112:37:3"},{"expression":{"arguments":[{"id":1081,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6169:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6175:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6179:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1080,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6159:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6159:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"6159:26:3"},{"expression":{"hexValue":"74727565","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6202:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1068,"id":1087,"nodeType":"Return","src":"6195:11:3"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"5383:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5978:12:3","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"from","nameLocation":"5999:4:3","nodeType":"VariableDeclaration","scope":1089,"src":"5991:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"5991:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"to","nameLocation":"6013:2:3","nodeType":"VariableDeclaration","scope":1089,"src":"6005:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"6005:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"value","nameLocation":"6025:5:3","nodeType":"VariableDeclaration","scope":1089,"src":"6017:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"6017:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:41:3"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"6056:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1066,"name":"bool","nodeType":"ElementaryTypeName","src":"6056:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6055:6:3"},"scope":1429,"src":"5969:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1135,"nodeType":"Block","src":"6655:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6669:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6685:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6677:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"6677:7:3","typeDescriptions":{}}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6677:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6669:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"IfStatement","src":"6665:86:3","trueBody":{"id":1112,"nodeType":"Block","src":"6689:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6737:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6729:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"6729:7:3","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6729:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1105,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"6710:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6710:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"RevertStatement","src":"6703:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6764:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6778:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6770:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"6770:7:3","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6770:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6764:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1128,"nodeType":"IfStatement","src":"6760:86:3","trueBody":{"id":1127,"nodeType":"Block","src":"6782:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6832:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6824:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"6824:7:3","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6824:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1120,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6803:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"RevertStatement","src":"6796:39:3"}]}},{"expression":{"arguments":[{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6863:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6869:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6873:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1129,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6855:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6855:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"ExpressionStatement","src":"6855:24:3"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"6219:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6595:9:3","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"from","nameLocation":"6613:4:3","nodeType":"VariableDeclaration","scope":1136,"src":"6605:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"6605:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"to","nameLocation":"6627:2:3","nodeType":"VariableDeclaration","scope":1136,"src":"6619:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"value","nameLocation":"6639:5:3","nodeType":"VariableDeclaration","scope":1136,"src":"6631:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"6631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6604:41:3"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"6655:0:3"},"scope":1429,"src":"6586:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"7276:1095:3","statements":[{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"$","nameLocation":"7307:1:3","nodeType":"VariableDeclaration","scope":1227,"src":"7286:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1147,"nodeType":"UserDefinedTypeName","pathNode":{"id":1146,"name":"ERC20Storage","nameLocations":["7286:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"7286:12:3"},"referencedDeclaration":853,"src":"7286:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1151,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1149,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"7311:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7286:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7343:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7359:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7351:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"7351:7:3","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7343:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1194,"nodeType":"Block","src":"7519:366:3","statements":[{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"fromBalance","nameLocation":"7541:11:3","nodeType":"VariableDeclaration","scope":1194,"src":"7533:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"7533:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1171,"initialValue":{"baseExpression":{"expression":{"id":1167,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"7555:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7557:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":840,"src":"7555:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1170,"indexExpression":{"id":1169,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7567:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7555:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7533:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7590:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7604:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7590:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1182,"nodeType":"IfStatement","src":"7586:115:3","trueBody":{"id":1181,"nodeType":"Block","src":"7611:90:3","statements":[{"errorCall":{"arguments":[{"id":1176,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7661:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7667:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1175,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"7636:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"RevertStatement","src":"7629:57:3"}]}},{"id":1193,"nodeType":"UncheckedBlock","src":"7714:161:3","statements":[{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1183,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"7821:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7823:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":840,"src":"7821:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1187,"indexExpression":{"id":1185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7833:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7821:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7841:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7855:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7821:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ExpressionStatement","src":"7821:39:3"}]}]},"id":1195,"nodeType":"IfStatement","src":"7339:546:3","trueBody":{"id":1164,"nodeType":"Block","src":"7363:150:3","statements":[{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1158,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"7479:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7481:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":848,"src":"7479:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7497:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7479:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1163,"nodeType":"ExpressionStatement","src":"7479:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7899:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7913:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7905:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"7905:7:3","typeDescriptions":{}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7905:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7899:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1219,"nodeType":"Block","src":"8116:208:3","statements":[{"id":1218,"nodeType":"UncheckedBlock","src":"8130:184:3","statements":[{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1210,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8275:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8277:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":840,"src":"8275:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1214,"indexExpression":{"id":1212,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"8287:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8275:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8294:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8275:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"8275:24:3"}]}]},"id":1220,"nodeType":"IfStatement","src":"7895:429:3","trueBody":{"id":1209,"nodeType":"Block","src":"7917:193:3","statements":[{"id":1208,"nodeType":"UncheckedBlock","src":"7931:169:3","statements":[{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1202,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8062:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8064:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":848,"src":"8062:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8080:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8062:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"nodeType":"ExpressionStatement","src":"8062:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1222,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8348:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"8354:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"8339:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8339:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"EmitStatement","src":"8334:30:3"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"6892:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7210:7:3","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"from","nameLocation":"7226:4:3","nodeType":"VariableDeclaration","scope":1228,"src":"7218:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"7218:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"to","nameLocation":"7240:2:3","nodeType":"VariableDeclaration","scope":1228,"src":"7232:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"7232:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"value","nameLocation":"7252:5:3","nodeType":"VariableDeclaration","scope":1228,"src":"7244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"7244:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7217:41:3"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"7276:0:3"},"scope":1429,"src":"7201:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1260,"nodeType":"Block","src":"8770:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"8784:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8803:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8795:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"8795:7:3","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8795:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8784:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"IfStatement","src":"8780:91:3","trueBody":{"id":1249,"nodeType":"Block","src":"8807:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8849:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"8849:7:3","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8828:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8828:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"RevertStatement","src":"8821:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8896:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8888:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"8888:7:3","typeDescriptions":{}}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8888:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1256,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"8900:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8909:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"8880:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8880:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"ExpressionStatement","src":"8880:35:3"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"8377:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8723:5:3","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"account","nameLocation":"8737:7:3","nodeType":"VariableDeclaration","scope":1261,"src":"8729:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"8729:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"value","nameLocation":"8754:5:3","nodeType":"VariableDeclaration","scope":1261,"src":"8746:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"8746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8728:32:3"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"8770:0:3"},"scope":1429,"src":"8714:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1293,"nodeType":"Block","src":"9296:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"9310:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:3","typeDescriptions":{}}},"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9310:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1283,"nodeType":"IfStatement","src":"9306:89:3","trueBody":{"id":1282,"nodeType":"Block","src":"9333:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9381:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9373:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"9373:7:3","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9373:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1275,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"9354:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"RevertStatement","src":"9347:37:3"}]}},{"expression":{"arguments":[{"id":1285,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"9412:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9421:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"9421:7:3","typeDescriptions":{}}},"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9421:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9433:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"9404:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9404:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"ExpressionStatement","src":"9404:35:3"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"8928:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9249:5:3","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"account","nameLocation":"9263:7:3","nodeType":"VariableDeclaration","scope":1294,"src":"9255:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"9255:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"value","nameLocation":"9280:5:3","nodeType":"VariableDeclaration","scope":1294,"src":"9272:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"9272:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9254:32:3"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"9296:0:3"},"scope":1429,"src":"9240:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1311,"nodeType":"Block","src":"10056:54:3","statements":[{"expression":{"arguments":[{"id":1305,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"10075:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"10082:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10091:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10098:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1304,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1312,1380],"referencedDeclaration":1380,"src":"10066:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"10066:37:3"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"9452:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1312,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9991:8:3","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"owner","nameLocation":"10008:5:3","nodeType":"VariableDeclaration","scope":1312,"src":"10000:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"10000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"spender","nameLocation":"10023:7:3","nodeType":"VariableDeclaration","scope":1312,"src":"10015:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"value","nameLocation":"10040:5:3","nodeType":"VariableDeclaration","scope":1312,"src":"10032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"10032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9999:47:3"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"10056:0:3"},"scope":1429,"src":"9982:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1379,"nodeType":"Block","src":"11055:389:3","statements":[{"assignments":[1326],"declarations":[{"constant":false,"id":1326,"mutability":"mutable","name":"$","nameLocation":"11086:1:3","nodeType":"VariableDeclaration","scope":1379,"src":"11065:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1325,"nodeType":"UserDefinedTypeName","pathNode":{"id":1324,"name":"ERC20Storage","nameLocations":["11065:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":853,"src":"11065:12:3"},"referencedDeclaration":853,"src":"11065:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1329,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1327,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"11090:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$853_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11090:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11065:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"11122:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"11131:7:3","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11122:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1344,"nodeType":"IfStatement","src":"11118:89:3","trueBody":{"id":1343,"nodeType":"Block","src":"11143:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11193:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11185:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"11185:7:3","typeDescriptions":{}}},"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11185:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1336,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"11164:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11164:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"RevertStatement","src":"11157:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1345,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11220:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11239:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11231:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"11231:7:3","typeDescriptions":{}}},"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11220:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1359,"nodeType":"IfStatement","src":"11216:90:3","trueBody":{"id":1358,"nodeType":"Block","src":"11243:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11292:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11284:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"11284:7:3","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11284:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1351,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"11264:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1357,"nodeType":"RevertStatement","src":"11257:38:3"}]}},{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1360,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"11315:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$853_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11317:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":846,"src":"11315:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1365,"indexExpression":{"id":1362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"11329:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11315:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1366,"indexExpression":{"id":1363,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11336:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11315:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11347:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11315:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1369,"nodeType":"ExpressionStatement","src":"11315:37:3"},{"condition":{"id":1370,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"11366:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"11362:76:3","trueBody":{"id":1377,"nodeType":"Block","src":"11377:61:3","statements":[{"eventCall":{"arguments":[{"id":1372,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"11405:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1373,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11412:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11421:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1371,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"11396:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"EmitStatement","src":"11391:36:3"}]}}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"10116:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1380,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10966:8:3","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"owner","nameLocation":"10983:5:3","nodeType":"VariableDeclaration","scope":1380,"src":"10975:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"10975:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"spender","nameLocation":"10998:7:3","nodeType":"VariableDeclaration","scope":1380,"src":"10990:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"10990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"value","nameLocation":"11015:5:3","nodeType":"VariableDeclaration","scope":1380,"src":"11007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"11007:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"emitEvent","nameLocation":"11027:9:3","nodeType":"VariableDeclaration","scope":1380,"src":"11022:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1320,"name":"bool","nodeType":"ElementaryTypeName","src":"11022:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10974:63:3"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"11055:0:3"},"scope":1429,"src":"10957:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"11815:387:3","statements":[{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"currentAllowance","nameLocation":"11833:16:3","nodeType":"VariableDeclaration","scope":1427,"src":"11825:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"11825:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1396,"initialValue":{"arguments":[{"id":1393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"11862:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1394,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"11869:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1392,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11852:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11852:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11825:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"11891:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11915:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"11915:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11910:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11910:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11924:3:3","memberName":"max","nodeType":"MemberAccess","src":"11910:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11891:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1426,"nodeType":"IfStatement","src":"11887:309:3","trueBody":{"id":1425,"nodeType":"Block","src":"11929:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"11947:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11966:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11947:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1414,"nodeType":"IfStatement","src":"11943:130:3","trueBody":{"id":1413,"nodeType":"Block","src":"11973:100:3","statements":[{"errorCall":{"arguments":[{"id":1408,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12025:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1409,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"12034:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"12052:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1407,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"11998:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"RevertStatement","src":"11991:67:3"}]}},{"id":1424,"nodeType":"UncheckedBlock","src":"12086:100:3","statements":[{"expression":{"arguments":[{"id":1416,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"12123:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1417,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12130:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1418,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"12139:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"12158:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12139:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12165:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1415,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1312,1380],"referencedDeclaration":1380,"src":"12114:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12114:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"12114:57:3"}]}]}}]},"documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"11450:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11735:15:3","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"owner","nameLocation":"11759:5:3","nodeType":"VariableDeclaration","scope":1428,"src":"11751:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"11751:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"spender","nameLocation":"11774:7:3","nodeType":"VariableDeclaration","scope":1428,"src":"11766:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"11766:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"value","nameLocation":"11791:5:3","nodeType":"VariableDeclaration","scope":1428,"src":"11783:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11783:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11750:47:3"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"11815:0:3"},"scope":1429,"src":"11726:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1430,"src":"1281:10923:3","usedErrors":[379,382,1821,1826,1831,1840,1845,1850],"usedEvents":[387,2262,2271]}],"src":"105:12100:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1475],"Initializable":[630]},"id":1476,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1431,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1476,"sourceUnit":631,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1432,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1435,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"728:13:4"},"id":1436,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1475,"linearizedBaseContracts":[1475,630],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1441,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1442,"implemented":true,"kind":"function","modifiers":[{"id":1439,"kind":"modifierInvocation","modifierName":{"id":1438,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1475,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1448,"implemented":true,"kind":"function","modifiers":[{"id":1445,"kind":"modifierInvocation","modifierName":{"id":1444,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1475,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1456,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1452,"id":1455,"nodeType":"Return","src":"959:17:4"}]},"id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1475,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1461,"id":1464,"nodeType":"Return","src":"1066:15:4"}]},"id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1459,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1475,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1470,"id":1472,"nodeType":"Return","src":"1176:8:4"}]},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1474,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1475,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1476,"src":"688:505:4","usedErrors":[379,382],"usedEvents":[387]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[1515],"IERC165":[5603],"Initializable":[630]},"id":1516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1477,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1516,"sourceUnit":5604,"src":"140:80:5","symbolAliases":[{"foreign":{"id":1478,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1481,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1516,"sourceUnit":631,"src":"221:66:5","symbolAliases":[{"foreign":{"id":1480,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"229:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1483,"name":"Initializable","nameLocations":["808:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"808:13:5"},"id":1484,"nodeType":"InheritanceSpecifier","src":"808:13:5"},{"baseName":{"id":1485,"name":"IERC165","nameLocations":["823:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":5603,"src":"823:7:5"},"id":1486,"nodeType":"InheritanceSpecifier","src":"823:7:5"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"289:479:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":1515,"linearizedBaseContracts":[1515,5603,630],"name":"ERC165Upgradeable","nameLocation":"787:17:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1491,"nodeType":"Block","src":"888:7:5","statements":[]},"id":1492,"implemented":true,"kind":"function","modifiers":[{"id":1489,"kind":"modifierInvocation","modifierName":{"id":1488,"name":"onlyInitializing","nameLocations":["871:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"871:16:5"},"nodeType":"ModifierInvocation","src":"871:16:5"}],"name":"__ERC165_init","nameLocation":"846:13:5","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"859:2:5"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"888:0:5"},"scope":1515,"src":"837:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"962:7:5","statements":[]},"id":1498,"implemented":true,"kind":"function","modifiers":[{"id":1495,"kind":"modifierInvocation","modifierName":{"id":1494,"name":"onlyInitializing","nameLocations":["945:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":525,"src":"945:16:5"},"nodeType":"ModifierInvocation","src":"945:16:5"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:5","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"933:2:5"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"962:0:5"},"scope":1515,"src":"901:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5602],"body":{"id":1513,"nodeType":"Block","src":"1117:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"1134:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1508,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"1154:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5603_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5603_$","typeString":"type(contract IERC165)"}],"id":1507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1149:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5603","typeString":"type(contract IERC165)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1163:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1149:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1134:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1505,"id":1512,"nodeType":"Return","src":"1127:47:5"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"974:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1044:17:5","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"interfaceId","nameLocation":"1069:11:5","nodeType":"VariableDeclaration","scope":1514,"src":"1062:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1500,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1062:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1061:20:5"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"1111:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1503,"name":"bool","nodeType":"ElementaryTypeName","src":"1111:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1110:6:5"},"scope":1515,"src":"1035:146:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1516,"src":"769:414:5","usedErrors":[379,382],"usedEvents":[387]}],"src":"114:1070:5"},"id":5},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1598]},"id":1599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1517,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"135:90:6","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":1598,"linearizedBaseContracts":[1598],"name":"IAccessControl","nameLocation":"236:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"257:56:6","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":1525,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:6","nodeType":"ErrorDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"account","nameLocation":"365:7:6","nodeType":"VariableDeclaration","scope":1525,"src":"357:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:6","nodeType":"VariableDeclaration","scope":1525,"src":"374:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:6"},"src":"318:76:6"},{"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"400:148:6","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":1528,"name":"AccessControlBadConfirmation","nameLocation":"559:28:6","nodeType":"ErrorDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"587:2:6"},"src":"553:37:6"},{"anonymous":false,"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"596:254:6","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":1537,"name":"RoleAdminChanged","nameLocation":"861:16:6","nodeType":"EventDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:6","nodeType":"VariableDeclaration","scope":1537,"src":"878:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1533,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:6","nodeType":"VariableDeclaration","scope":1537,"src":"900:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1535,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:6","nodeType":"VariableDeclaration","scope":1537,"src":"935:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:6"},"src":"855:110:6"},{"anonymous":false,"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"971:295:6","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":1546,"name":"RoleGranted","nameLocation":"1277:11:6","nodeType":"EventDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:6","nodeType":"VariableDeclaration","scope":1546,"src":"1289:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1542,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:6","nodeType":"VariableDeclaration","scope":1546,"src":"1311:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:6","nodeType":"VariableDeclaration","scope":1546,"src":"1336:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:6"},"src":"1271:89:6"},{"anonymous":false,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1366:275:6","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":1555,"name":"RoleRevoked","nameLocation":"1652:11:6","nodeType":"EventDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:6","nodeType":"VariableDeclaration","scope":1555,"src":"1664:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1551,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:6","nodeType":"VariableDeclaration","scope":1555,"src":"1686:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1553,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:6","nodeType":"VariableDeclaration","scope":1555,"src":"1711:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:6"},"src":"1646:89:6"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1741:76:6","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1565,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:6","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"role","nameLocation":"1847:4:6","nodeType":"VariableDeclaration","scope":1565,"src":"1839:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"account","nameLocation":"1861:7:6","nodeType":"VariableDeclaration","scope":1565,"src":"1853:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"1893:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1562,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:6"},"scope":1598,"src":"1822:77:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"1905:184:6","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1573,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:6","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"role","nameLocation":"2124:4:6","nodeType":"VariableDeclaration","scope":1573,"src":"2116:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:6"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"2153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:6"},"scope":1598,"src":"2094:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"2168:239:6","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1581,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:6","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"role","nameLocation":"2439:4:6","nodeType":"VariableDeclaration","scope":1581,"src":"2431:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"account","nameLocation":"2453:7:6","nodeType":"VariableDeclaration","scope":1581,"src":"2445:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:6"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"2470:0:6"},"scope":1598,"src":"2412:59:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"2477:223:6","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1589,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:6","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"role","nameLocation":"2733:4:6","nodeType":"VariableDeclaration","scope":1589,"src":"2725:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"account","nameLocation":"2747:7:6","nodeType":"VariableDeclaration","scope":1589,"src":"2739:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:6"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[],"src":"2764:0:6"},"scope":1598,"src":"2705:60:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"2771:491:6","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":1597,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:6","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"role","nameLocation":"3297:4:6","nodeType":"VariableDeclaration","scope":1597,"src":"3289:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:6","nodeType":"VariableDeclaration","scope":1597,"src":"3303:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:6"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"3339:0:6"},"scope":1598,"src":"3267:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1599,"src":"226:3116:6","usedErrors":[1525,1528],"usedEvents":[1537,1546,1555]}],"src":"109:3234:6"},"id":6},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3967],"Ownable":[1746]},"id":1747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":3968,"src":"128:45:7","symbolAliases":[{"foreign":{"id":1601,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"136:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1604,"name":"Context","nameLocations":["692:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3967,"src":"692:7:7"},"id":1605,"nodeType":"InheritanceSpecifier","src":"692:7:7"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"175:487:7","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1746,"linearizedBaseContracts":[1746,3967],"name":"Ownable","nameLocation":"681:7:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1607,"mutability":"mutable","name":"_owner","nameLocation":"722:6:7","nodeType":"VariableDeclaration","scope":1746,"src":"706:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"735:85:7","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1612,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:7","nodeType":"ErrorDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"account","nameLocation":"866:7:7","nodeType":"VariableDeclaration","scope":1612,"src":"858:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:7"},"src":"825:50:7"},{"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"881:82:7","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1617,"name":"OwnableInvalidOwner","nameLocation":"974:19:7","nodeType":"ErrorDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"owner","nameLocation":"1002:5:7","nodeType":"VariableDeclaration","scope":1617,"src":"994:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:7"},"src":"968:41:7"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1623,"name":"OwnershipTransferred","nameLocation":"1021:20:7","nodeType":"EventDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:7","nodeType":"VariableDeclaration","scope":1623,"src":"1042:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:7","nodeType":"VariableDeclaration","scope":1623,"src":"1073:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:7"},"src":"1015:84:7"},{"body":{"id":1648,"nodeType":"Block","src":"1259:153:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1273:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{}}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1643,"nodeType":"IfStatement","src":"1269:95:7","trueBody":{"id":1642,"nodeType":"Block","src":"1301:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:7","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1635,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"1322:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"RevertStatement","src":"1315:38:7"}]}},{"expression":{"arguments":[{"id":1645,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1392:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1644,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1373:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"1373:32:7"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"1105:115:7","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1649,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:7","nodeType":"VariableDeclaration","scope":1649,"src":"1237:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:7"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"1259:0:7"},"scope":1746,"src":"1225:187:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1521:41:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1652,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"1531:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1654,"nodeType":"ExpressionStatement","src":"1531:13:7"},{"id":1655,"nodeType":"PlaceholderStatement","src":"1554:1:7"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"1418:77:7","text":" @dev Throws if called by any account other than the owner."},"id":1657,"name":"onlyOwner","nameLocation":"1509:9:7","nodeType":"ModifierDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"1518:2:7"},"src":"1500:62:7","virtual":false,"visibility":"internal"},{"body":{"id":1665,"nodeType":"Block","src":"1693:30:7","statements":[{"expression":{"id":1663,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1710:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1662,"id":1664,"nodeType":"Return","src":"1703:13:7"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1568:65:7","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:7","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"1652:2:7"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"1684:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:7"},"scope":1746,"src":"1638:85:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1682,"nodeType":"Block","src":"1841:117:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1670,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1855:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1672,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"1866:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"nodeType":"IfStatement","src":"1851:101:7","trueBody":{"id":1680,"nodeType":"Block","src":"1880:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1676,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"1928:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1675,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1901:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"RevertStatement","src":"1894:47:7"}]}}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"1729:62:7","text":" @dev Throws if the sender is not the owner."},"id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:7","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"1816:2:7"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"1841:0:7"},"scope":1746,"src":"1796:162:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"2347:47:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:7","typeDescriptions":{}}},"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1689,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2357:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1695,"nodeType":"ExpressionStatement","src":"2357:30:7"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"1964:324:7","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1697,"implemented":true,"kind":"function","modifiers":[{"id":1687,"kind":"modifierInvocation","modifierName":{"id":1686,"name":"onlyOwner","nameLocations":["2337:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"2337:9:7"},"nodeType":"ModifierInvocation","src":"2337:9:7"}],"name":"renounceOwnership","nameLocation":"2302:17:7","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"2319:2:7"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[],"src":"2347:0:7"},"scope":1746,"src":"2293:101:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1724,"nodeType":"Block","src":"2613:145:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2627:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:7","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1719,"nodeType":"IfStatement","src":"2623:91:7","trueBody":{"id":1718,"nodeType":"Block","src":"2651:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:7","typeDescriptions":{}}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1711,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"2672:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"RevertStatement","src":"2665:38:7"}]}},{"expression":{"arguments":[{"id":1721,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2742:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2723:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"2723:28:7"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"2400:138:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1725,"implemented":true,"kind":"function","modifiers":[{"id":1703,"kind":"modifierInvocation","modifierName":{"id":1702,"name":"onlyOwner","nameLocations":["2603:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"2603:9:7"},"nodeType":"ModifierInvocation","src":"2603:9:7"}],"name":"transferOwnership","nameLocation":"2552:17:7","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:7","nodeType":"VariableDeclaration","scope":1725,"src":"2570:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:7"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"2613:0:7"},"scope":1746,"src":"2543:215:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1744,"nodeType":"Block","src":"2975:124:7","statements":[{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:7","nodeType":"VariableDeclaration","scope":1744,"src":"2985:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1734,"initialValue":{"id":1733,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3004:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:7"},{"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1735,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3020:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1736,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3029:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1738,"nodeType":"ExpressionStatement","src":"3020:17:7"},{"eventCall":{"arguments":[{"id":1740,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3073:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1741,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3083:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1739,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3052:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1743,"nodeType":"EmitStatement","src":"3047:45:7"}]},"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"2764:143:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:7","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:7","nodeType":"VariableDeclaration","scope":1745,"src":"2940:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:7"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"2975:0:7"},"scope":1746,"src":"2912:187:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1747,"src":"663:2438:7","usedErrors":[1612,1617],"usedEvents":[1623]}],"src":"102:3000:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[5603]},"id":1751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1748,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1751,"sourceUnit":5604,"src":"132:59:8","symbolAliases":[{"foreign":{"id":1749,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"140:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[1771]},"id":1772,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1752,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"133:101:9","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":1771,"linearizedBaseContracts":[1771],"name":"IERC1967","nameLocation":"245:8:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"260:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1758,"name":"Upgraded","nameLocation":"339:8:9","nodeType":"EventDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:9","nodeType":"VariableDeclaration","scope":1758,"src":"348:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:9"},"src":"333:47:9"},{"anonymous":false,"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"386:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1765,"name":"AdminChanged","nameLocation":"464:12:9","nodeType":"EventDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:9","nodeType":"VariableDeclaration","scope":1765,"src":"477:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:9","nodeType":"VariableDeclaration","scope":1765,"src":"500:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:9"},"src":"458:60:9"},{"anonymous":false,"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"524:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1770,"name":"BeaconUpgraded","nameLocation":"594:14:9","nodeType":"EventDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:9","nodeType":"VariableDeclaration","scope":1770,"src":"609:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:9"},"src":"588:45:9"}],"scope":1772,"src":"235:400:9","usedErrors":[],"usedEvents":[1758,1765,1770]}],"src":"107:529:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[5603],"IERC4906":[1795],"IERC721":[3428]},"id":1796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1773,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1796,"sourceUnit":1751,"src":"133:38:10","symbolAliases":[{"foreign":{"id":1774,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":1777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1796,"sourceUnit":1800,"src":"172:38:10","symbolAliases":[{"foreign":{"id":1776,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"180:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1779,"name":"IERC165","nameLocations":["279:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":5603,"src":"279:7:10"},"id":1780,"nodeType":"InheritanceSpecifier","src":"279:7:10"},{"baseName":{"id":1781,"name":"IERC721","nameLocations":["288:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"288:7:10"},"id":1782,"nodeType":"InheritanceSpecifier","src":"288:7:10"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"212:45:10","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":1795,"linearizedBaseContracts":[1795,3428,5603],"name":"IERC4906","nameLocation":"267:8:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"302:201:10","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":1787,"name":"MetadataUpdate","nameLocation":"514:14:10","nodeType":"EventDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:10","nodeType":"VariableDeclaration","scope":1787,"src":"529:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:10"},"src":"508:39:10"},{"anonymous":false,"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"553:212:10","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":1794,"name":"BatchMetadataUpdate","nameLocation":"776:19:10","nodeType":"EventDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:10","nodeType":"VariableDeclaration","scope":1794,"src":"796:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:10","nodeType":"VariableDeclaration","scope":1794,"src":"818:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:10"},"src":"770:68:10"}],"scope":1796,"src":"257:583:10","usedErrors":[],"usedEvents":[1787,1794,3327,3336,3345]}],"src":"107:734:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[3428]},"id":1800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1797,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":1799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1800,"sourceUnit":3429,"src":"132:52:11","symbolAliases":[{"foreign":{"id":1798,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"140:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:11"},"id":11},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1809]},"id":1810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"139:204:12","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1809,"linearizedBaseContracts":[1809],"name":"IERC1822Proxiable","nameLocation":"354:17:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"378:438:12","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1808,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:12","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"843:2:12"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"869:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:12"},"scope":1809,"src":"821:57:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1810,"src":"344:536:12","usedErrors":[],"usedEvents":[]}],"src":"113:768:12"},"id":12},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1946],"IERC20Errors":[1851],"IERC721Errors":[1899]},"id":1947,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"138:141:13","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1851,"linearizedBaseContracts":[1851],"name":"IERC20Errors","nameLocation":"290:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"309:309:13","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1821,"name":"ERC20InsufficientBalance","nameLocation":"629:24:13","nodeType":"ErrorDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"sender","nameLocation":"662:6:13","nodeType":"VariableDeclaration","scope":1821,"src":"654:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"balance","nameLocation":"678:7:13","nodeType":"VariableDeclaration","scope":1821,"src":"670:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"needed","nameLocation":"695:6:13","nodeType":"VariableDeclaration","scope":1821,"src":"687:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:13"},"src":"623:80:13"},{"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"709:152:13","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1826,"name":"ERC20InvalidSender","nameLocation":"872:18:13","nodeType":"ErrorDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"sender","nameLocation":"899:6:13","nodeType":"VariableDeclaration","scope":1826,"src":"891:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:13"},"src":"866:41:13"},{"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"913:159:13","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1831,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:13","nodeType":"ErrorDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:13","nodeType":"VariableDeclaration","scope":1831,"src":"1104:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:13"},"src":"1077:45:13"},{"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"1128:345:13","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1840,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:13","nodeType":"ErrorDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"spender","nameLocation":"1519:7:13","nodeType":"VariableDeclaration","scope":1840,"src":"1511:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:13","nodeType":"VariableDeclaration","scope":1840,"src":"1528:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"needed","nameLocation":"1555:6:13","nodeType":"VariableDeclaration","scope":1840,"src":"1547:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:13"},"src":"1478:85:13"},{"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"1569:174:13","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1845,"name":"ERC20InvalidApprover","nameLocation":"1754:20:13","nodeType":"ErrorDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"approver","nameLocation":"1783:8:13","nodeType":"VariableDeclaration","scope":1845,"src":"1775:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:13"},"src":"1748:45:13"},{"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"1799:195:13","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1850,"name":"ERC20InvalidSpender","nameLocation":"2005:19:13","nodeType":"ErrorDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"spender","nameLocation":"2033:7:13","nodeType":"VariableDeclaration","scope":1850,"src":"2025:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:13"},"src":"1999:43:13"}],"scope":1947,"src":"280:1764:13","usedErrors":[1821,1826,1831,1840,1845,1850],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"2046:143:13","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1899,"linearizedBaseContracts":[1899],"name":"IERC721Errors","nameLocation":"2200:13:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"2220:219:13","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1857,"name":"ERC721InvalidOwner","nameLocation":"2450:18:13","nodeType":"ErrorDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"owner","nameLocation":"2477:5:13","nodeType":"VariableDeclaration","scope":1857,"src":"2469:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:13"},"src":"2444:40:13"},{"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"2490:132:13","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1862,"name":"ERC721NonexistentToken","nameLocation":"2633:22:13","nodeType":"ErrorDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:13","nodeType":"VariableDeclaration","scope":1862,"src":"2656:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:13"},"src":"2627:46:13"},{"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"2679:289:13","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1871,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:13","nodeType":"ErrorDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"sender","nameLocation":"3008:6:13","nodeType":"VariableDeclaration","scope":1871,"src":"3000:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:13","nodeType":"VariableDeclaration","scope":1871,"src":"3016:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"owner","nameLocation":"3041:5:13","nodeType":"VariableDeclaration","scope":1871,"src":"3033:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:13"},"src":"2973:75:13"},{"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"3054:152:13","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1876,"name":"ERC721InvalidSender","nameLocation":"3217:19:13","nodeType":"ErrorDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"sender","nameLocation":"3245:6:13","nodeType":"VariableDeclaration","scope":1876,"src":"3237:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:13"},"src":"3211:42:13"},{"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"3259:159:13","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1881,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:13","nodeType":"ErrorDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:13","nodeType":"VariableDeclaration","scope":1881,"src":"3451:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:13"},"src":"3423:46:13"},{"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"3475:247:13","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1888,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:13","nodeType":"ErrorDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"operator","nameLocation":"3768:8:13","nodeType":"VariableDeclaration","scope":1888,"src":"3760:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:13","nodeType":"VariableDeclaration","scope":1888,"src":"3778:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:13"},"src":"3727:68:13"},{"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"3801:174:13","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1893,"name":"ERC721InvalidApprover","nameLocation":"3986:21:13","nodeType":"ErrorDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"approver","nameLocation":"4016:8:13","nodeType":"VariableDeclaration","scope":1893,"src":"4008:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:13"},"src":"3980:46:13"},{"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"4032:197:13","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1898,"name":"ERC721InvalidOperator","nameLocation":"4240:21:13","nodeType":"ErrorDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"operator","nameLocation":"4270:8:13","nodeType":"VariableDeclaration","scope":1898,"src":"4262:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:13"},"src":"4234:46:13"}],"scope":1947,"src":"2190:2092:13","usedErrors":[1857,1862,1871,1876,1881,1888,1893,1898],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"4284:145:13","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1946,"linearizedBaseContracts":[1946],"name":"IERC1155Errors","nameLocation":"4440:14:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"4461:361:13","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1911,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:13","nodeType":"ErrorDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"sender","nameLocation":"4868:6:13","nodeType":"VariableDeclaration","scope":1911,"src":"4860:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"balance","nameLocation":"4884:7:13","nodeType":"VariableDeclaration","scope":1911,"src":"4876:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"needed","nameLocation":"4901:6:13","nodeType":"VariableDeclaration","scope":1911,"src":"4893:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:13","nodeType":"VariableDeclaration","scope":1911,"src":"4909:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:13"},"src":"4827:99:13"},{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"4932:152:13","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1916,"name":"ERC1155InvalidSender","nameLocation":"5095:20:13","nodeType":"ErrorDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"sender","nameLocation":"5124:6:13","nodeType":"VariableDeclaration","scope":1916,"src":"5116:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:13"},"src":"5089:43:13"},{"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"5138:159:13","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1921,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:13","nodeType":"ErrorDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:13","nodeType":"VariableDeclaration","scope":1921,"src":"5331:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:13"},"src":"5302:47:13"},{"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"5355:256:13","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1928,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:13","nodeType":"ErrorDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"operator","nameLocation":"5659:8:13","nodeType":"VariableDeclaration","scope":1928,"src":"5651:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"owner","nameLocation":"5677:5:13","nodeType":"VariableDeclaration","scope":1928,"src":"5669:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:13"},"src":"5616:68:13"},{"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"5690:174:13","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1933,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:13","nodeType":"ErrorDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"approver","nameLocation":"5906:8:13","nodeType":"VariableDeclaration","scope":1933,"src":"5898:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1930,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:13"},"src":"5869:47:13"},{"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"5922:197:13","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1938,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:13","nodeType":"ErrorDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"operator","nameLocation":"6161:8:13","nodeType":"VariableDeclaration","scope":1938,"src":"6153:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:13"},"src":"6124:47:13"},{"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"6177:280:13","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1945,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:13","nodeType":"ErrorDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:13","nodeType":"VariableDeclaration","scope":1945,"src":"6494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:13","nodeType":"VariableDeclaration","scope":1945,"src":"6513:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:13"},"src":"6462:73:13"}],"scope":1947,"src":"4430:2107:13","usedErrors":[1911,1916,1921,1928,1933,1938,1945],"usedEvents":[]}],"src":"112:6426:13"},"id":13},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3937],"ERC1967Utils":[2240],"IBeacon":[2250],"IERC1967":[1771],"StorageSlot":[4165]},"id":2241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1948,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"114:24:14"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2241,"sourceUnit":2251,"src":"140:46:14","symbolAliases":[{"foreign":{"id":1949,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"148:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":1952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2241,"sourceUnit":1772,"src":"187:55:14","symbolAliases":[{"foreign":{"id":1951,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"195:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2241,"sourceUnit":3938,"src":"243:48:14","symbolAliases":[{"foreign":{"id":1953,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"251:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2241,"sourceUnit":4166,"src":"292:56:14","symbolAliases":[{"foreign":{"id":1955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"300:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"350:145:14","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2240,"linearizedBaseContracts":[2240],"name":"ERC1967Utils","nameLocation":"504:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"523:170:14","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1961,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:14","nodeType":"VariableDeclaration","scope":2240,"src":"763:114:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:14","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"884:69:14","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1966,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:14","nodeType":"ErrorDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:14","nodeType":"VariableDeclaration","scope":1966,"src":"993:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:14"},"src":"958:59:14"},{"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"1023:60:14","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1971,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:14","nodeType":"ErrorDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"admin","nameLocation":"1122:5:14","nodeType":"VariableDeclaration","scope":1971,"src":"1114:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:14"},"src":"1088:41:14"},{"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"1135:61:14","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1976,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:14","nodeType":"ErrorDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:14","nodeType":"VariableDeclaration","scope":1976,"src":"1228:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:14"},"src":"1201:43:14"},{"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"1250:82:14","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1979,"name":"ERC1967NonPayable","nameLocation":"1343:17:14","nodeType":"ErrorDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"1360:2:14"},"src":"1337:26:14"},{"body":{"id":1991,"nodeType":"Block","src":"1502:77:14","statements":[{"expression":{"expression":{"arguments":[{"id":1987,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1546:19:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1985,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"1519:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4165_$","typeString":"type(library StorageSlot)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"1519:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"1519:53:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1984,"id":1990,"nodeType":"Return","src":"1512:60:14"}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"1369:67:14","text":" @dev Returns the current implementation address."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:14","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"1467:2:14"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"1493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:14"},"scope":2240,"src":"1441:138:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2018,"nodeType":"Block","src":"1734:218:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1998,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1748:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:14","memberName":"code","nodeType":"MemberAccess","src":"1748:22:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:14","memberName":"length","nodeType":"MemberAccess","src":"1748:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"1744:119:14","trueBody":{"id":2007,"nodeType":"Block","src":"1784:79:14","statements":[{"errorCall":{"arguments":[{"id":2004,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1834:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1805:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2006,"nodeType":"RevertStatement","src":"1798:54:14"}]}},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2012,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1899:19:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2009,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"1872:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4165_$","typeString":"type(library StorageSlot)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"1872:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"1872:53:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2015,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"1928:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2017,"nodeType":"ExpressionStatement","src":"1872:73:14"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"1585:81:14","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:14","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:14","nodeType":"VariableDeclaration","scope":2019,"src":"1699:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1994,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:14"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"1734:0:14"},"scope":2240,"src":"1671:281:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2054,"nodeType":"Block","src":"2345:263:14","statements":[{"expression":{"arguments":[{"id":2028,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"2374:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2027,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"2355:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2030,"nodeType":"ExpressionStatement","src":"2355:37:14"},{"eventCall":{"arguments":[{"id":2034,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"2425:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2031,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2407:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1771_$","typeString":"type(contract IERC1967)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:14","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"2407:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2036,"nodeType":"EmitStatement","src":"2402:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2037,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"2458:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:14","memberName":"length","nodeType":"MemberAccess","src":"2458:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2052,"nodeType":"Block","src":"2559:43:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2049,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2573:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"ExpressionStatement","src":"2573:18:14"}]},"id":2053,"nodeType":"IfStatement","src":"2454:148:14","trueBody":{"id":2048,"nodeType":"Block","src":"2475:78:14","statements":[{"expression":{"arguments":[{"id":2044,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"2518:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2045,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"2537:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2041,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3937_$","typeString":"type(library Address)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:14","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"2489:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2047,"nodeType":"ExpressionStatement","src":"2489:53:14"}]}}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"1958:301:14","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:14","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:14","nodeType":"VariableDeclaration","scope":2055,"src":"2290:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"data","nameLocation":"2330:4:14","nodeType":"VariableDeclaration","scope":2055,"src":"2317:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2023,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:14"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[],"src":"2345:0:14"},"scope":2240,"src":"2264:344:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"2614:145:14","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2059,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:14","nodeType":"VariableDeclaration","scope":2240,"src":"2829:105:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:14","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"3339:68:14","statements":[{"expression":{"expression":{"arguments":[{"id":2067,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3383:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2065,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3356:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4165_$","typeString":"type(library StorageSlot)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"3356:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"3356:44:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2064,"id":2070,"nodeType":"Return","src":"3349:51:14"}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"2941:341:14","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:14","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"3304:2:14"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"3330:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2062,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:14"},"scope":2240,"src":"3287:120:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2102,"nodeType":"Block","src":"3535:172:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3549:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:14","typeDescriptions":{}}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"IfStatement","src":"3545:91:14","trueBody":{"id":2091,"nodeType":"Block","src":"3573:63:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:14","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2084,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3594:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"RevertStatement","src":"3587:38:14"}]}},{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2096,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3672:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2093,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3645:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4165_$","typeString":"type(library StorageSlot)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"3645:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"3645:44:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2099,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3692:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2101,"nodeType":"ExpressionStatement","src":"3645:55:14"}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"3413:72:14","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2103,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:14","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:14","nodeType":"VariableDeclaration","scope":2103,"src":"3509:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:14"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[],"src":"3535:0:14"},"scope":2240,"src":"3490:217:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2121,"nodeType":"Block","src":"3875:94:14","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2112,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3912:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2114,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"3924:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2109,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3890:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1771_$","typeString":"type(contract IERC1967)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:14","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":1765,"src":"3890:21:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2116,"nodeType":"EmitStatement","src":"3885:48:14"},{"expression":{"arguments":[{"id":2118,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"3953:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2117,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"3943:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2120,"nodeType":"ExpressionStatement","src":"3943:19:14"}]},"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"3713:109:14","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:14","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:14","nodeType":"VariableDeclaration","scope":2122,"src":"3848:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:14"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[],"src":"3875:0:14"},"scope":2240,"src":"3827:142:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"3975:201:14","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2126,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:14","nodeType":"VariableDeclaration","scope":2240,"src":"4246:106:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:14","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2138,"nodeType":"Block","src":"4468:69:14","statements":[{"expression":{"expression":{"arguments":[{"id":2134,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4512:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2132,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"4485:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4165_$","typeString":"type(library StorageSlot)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"4485:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"4485:45:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2131,"id":2137,"nodeType":"Return","src":"4478:52:14"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"4359:51:14","text":" @dev Returns the current beacon."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:14","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"4433:2:14"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"4459:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:14"},"scope":2240,"src":"4415:122:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"4667:390:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2145,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"4681:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:14","memberName":"code","nodeType":"MemberAccess","src":"4681:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:14","memberName":"length","nodeType":"MemberAccess","src":"4681:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"nodeType":"IfStatement","src":"4677:95:14","trueBody":{"id":2154,"nodeType":"Block","src":"4709:63:14","statements":[{"errorCall":{"arguments":[{"id":2151,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"4751:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2150,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"4730:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"RevertStatement","src":"4723:38:14"}]}},{"expression":{"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2159,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4809:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2156,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"4782:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$4165_$","typeString":"type(library StorageSlot)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4076,"src":"4782:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4047_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"4782:45:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2162,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"4830:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2164,"nodeType":"ExpressionStatement","src":"4782:57:14"},{"assignments":[2166],"declarations":[{"constant":false,"id":2166,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:14","nodeType":"VariableDeclaration","scope":2184,"src":"4850:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2172,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2168,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"4889:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2167,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4881:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2250_$","typeString":"type(contract IBeacon)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2250","typeString":"contract IBeacon"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:14","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"4881:33:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2173,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"4930:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:14","memberName":"code","nodeType":"MemberAccess","src":"4930:25:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:14","memberName":"length","nodeType":"MemberAccess","src":"4930:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"4926:125:14","trueBody":{"id":2182,"nodeType":"Block","src":"4969:82:14","statements":[{"errorCall":{"arguments":[{"id":2179,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5019:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2178,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4990:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2181,"nodeType":"RevertStatement","src":"4983:57:14"}]}}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"4543:72:14","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:14","nodeType":"VariableDeclaration","scope":2185,"src":"4640:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:14"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"4667:0:14"},"scope":2240,"src":"4620:437:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2224,"nodeType":"Block","src":"5661:263:14","statements":[{"expression":{"arguments":[{"id":2194,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5682:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2193,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"5671:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"5671:21:14"},{"eventCall":{"arguments":[{"id":2200,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5731:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2197,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"5707:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1771_$","typeString":"type(contract IERC1967)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:14","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":1770,"src":"5707:23:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2202,"nodeType":"EmitStatement","src":"5702:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2203,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5756:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:14","memberName":"length","nodeType":"MemberAccess","src":"5756:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2222,"nodeType":"Block","src":"5875:43:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2219,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"5889:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2221,"nodeType":"ExpressionStatement","src":"5889:18:14"}]},"id":2223,"nodeType":"IfStatement","src":"5752:166:14","trueBody":{"id":2218,"nodeType":"Block","src":"5773:96:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2211,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5824:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2210,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"5816:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2250_$","typeString":"type(contract IBeacon)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2250","typeString":"contract IBeacon"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:14","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"5816:33:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5853:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2207,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5787:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3937_$","typeString":"type(library Address)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:14","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"5787:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2217,"nodeType":"ExpressionStatement","src":"5787:71:14"}]}}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"5063:514:14","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2225,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:14","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:14","nodeType":"VariableDeclaration","scope":2225,"src":"5614:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"data","nameLocation":"5646:4:14","nodeType":"VariableDeclaration","scope":2225,"src":"5633:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2189,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:14"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[],"src":"5661:0:14"},"scope":2240,"src":"5582:342:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"6149:86:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:14","memberName":"value","nodeType":"MemberAccess","src":"6163:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"6159:70:14","trueBody":{"id":2236,"nodeType":"Block","src":"6178:51:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2233,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6199:17:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"RevertStatement","src":"6192:26:14"}]}}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"5930:178:14","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:14","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[],"src":"6138:2:14"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[],"src":"6149:0:14"},"scope":2240,"src":"6113:122:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2241,"src":"496:5741:14","usedErrors":[1966,1971,1976,1979],"usedEvents":[]}],"src":"114:6124:14"},"id":14},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2250]},"id":2251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2242,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"134:79:15","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2250,"linearizedBaseContracts":[2250],"name":"IBeacon","nameLocation":"224:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"238:168:15","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2249,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:15","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[],"src":"434:2:15"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"460:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:15"},"scope":2250,"src":"411:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2251,"src":"214:257:15","usedErrors":[],"usedEvents":[]}],"src":"108:364:15"},"id":15},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2328]},"id":2329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"132:71:16","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2328,"linearizedBaseContracts":[2328],"name":"IERC20","nameLocation":"214:6:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"227:158:16","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2262,"name":"Transfer","nameLocation":"396:8:16","nodeType":"EventDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:16","nodeType":"VariableDeclaration","scope":2262,"src":"405:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:16","nodeType":"VariableDeclaration","scope":2262,"src":"427:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:16","nodeType":"VariableDeclaration","scope":2262,"src":"447:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:16"},"src":"390:72:16"},{"anonymous":false,"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"468:148:16","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2271,"name":"Approval","nameLocation":"627:8:16","nodeType":"EventDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:16","nodeType":"VariableDeclaration","scope":2271,"src":"636:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2267,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:16","nodeType":"VariableDeclaration","scope":2271,"src":"659:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:16","nodeType":"VariableDeclaration","scope":2271,"src":"684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:16"},"src":"621:78:16"},{"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"705:65:16","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2277,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:16","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"795:2:16"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"821:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:16"},"scope":2328,"src":"775:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"836:71:16","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2285,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:16","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"account","nameLocation":"939:7:16","nodeType":"VariableDeclaration","scope":2285,"src":"931:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:16"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"971:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:16"},"scope":2328,"src":"912:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"986:213:16","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2295,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:16","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"to","nameLocation":"1230:2:16","nodeType":"VariableDeclaration","scope":2295,"src":"1222:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"value","nameLocation":"1242:5:16","nodeType":"VariableDeclaration","scope":2295,"src":"1234:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:16"},"returnParameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"1267:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2292,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:16"},"scope":2328,"src":"1204:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"1279:264:16","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2305,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:16","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"owner","nameLocation":"1575:5:16","nodeType":"VariableDeclaration","scope":2305,"src":"1567:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"spender","nameLocation":"1590:7:16","nodeType":"VariableDeclaration","scope":2305,"src":"1582:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2299,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:16"},"returnParameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"1622:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:16"},"scope":2328,"src":"1548:83:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"1637:667:16","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2315,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:16","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"spender","nameLocation":"2334:7:16","nodeType":"VariableDeclaration","scope":2315,"src":"2326:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"value","nameLocation":"2351:5:16","nodeType":"VariableDeclaration","scope":2315,"src":"2343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:16"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"2376:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2312,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:16"},"scope":2328,"src":"2309:73:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"2388:297:16","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2327,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:16","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"from","nameLocation":"2720:4:16","nodeType":"VariableDeclaration","scope":2327,"src":"2712:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"to","nameLocation":"2734:2:16","nodeType":"VariableDeclaration","scope":2327,"src":"2726:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"value","nameLocation":"2746:5:16","nodeType":"VariableDeclaration","scope":2327,"src":"2738:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:16"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"2771:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2324,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:16"},"scope":2328,"src":"2690:87:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2329,"src":"204:2575:16","usedErrors":[],"usedEvents":[2262,2271]}],"src":"106:2674:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2328],"IERC20Metadata":[2354]},"id":2355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2330,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2355,"sourceUnit":2329,"src":"151:37:17","symbolAliases":[{"foreign":{"id":2331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"159:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2334,"name":"IERC20","nameLocations":["306:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":2328,"src":"306:6:17"},"id":2335,"nodeType":"InheritanceSpecifier","src":"306:6:17"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"190:87:17","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2354,"linearizedBaseContracts":[2354,2328],"name":"IERC20Metadata","nameLocation":"288:14:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"319:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2341,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:17","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"391:2:17"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"417:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:17"},"scope":2354,"src":"378:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"438:56:17","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2347,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:17","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[],"src":"514:2:17"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2347,"src":"540:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2344,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:17"},"scope":2354,"src":"499:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"561:65:17","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2353,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:17","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"648:2:17"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"674:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2350,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:17"},"scope":2354,"src":"631:50:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2355,"src":"278:405:17","usedErrors":[],"usedEvents":[2262,2271]}],"src":"125:559:17"},"id":17},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[3967],"ERC165":[5591],"ERC721":[3311],"ERC721Utils":[3677],"IERC165":[5603],"IERC721":[3428],"IERC721Errors":[1899],"IERC721Metadata":[3600],"Strings":[5567]},"id":3312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2356,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":2358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":3429,"src":"133:38:18","symbolAliases":[{"foreign":{"id":2357,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"141:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":2360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":3601,"src":"172:65:18","symbolAliases":[{"foreign":{"id":2359,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"180:15:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":2362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":3678,"src":"238:52:18","symbolAliases":[{"foreign":{"id":2361,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"246:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":3968,"src":"291:48:18","symbolAliases":[{"foreign":{"id":2363,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"299:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":2366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":5568,"src":"340:48:18","symbolAliases":[{"foreign":{"id":2365,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"348:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":5592,"src":"389:69:18","symbolAliases":[{"foreign":{"id":2367,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"397:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2368,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"406:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":2371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3312,"sourceUnit":1947,"src":"459:66:18","symbolAliases":[{"foreign":{"id":2370,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"467:13:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2373,"name":"Context","nameLocations":["803:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3967,"src":"803:7:18"},"id":2374,"nodeType":"InheritanceSpecifier","src":"803:7:18"},{"baseName":{"id":2375,"name":"ERC165","nameLocations":["812:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":5591,"src":"812:6:18"},"id":2376,"nodeType":"InheritanceSpecifier","src":"812:6:18"},{"baseName":{"id":2377,"name":"IERC721","nameLocations":["820:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"820:7:18"},"id":2378,"nodeType":"InheritanceSpecifier","src":"820:7:18"},{"baseName":{"id":2379,"name":"IERC721Metadata","nameLocations":["829:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"829:15:18"},"id":2380,"nodeType":"InheritanceSpecifier","src":"829:15:18"},{"baseName":{"id":2381,"name":"IERC721Errors","nameLocations":["846:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":1899,"src":"846:13:18"},"id":2382,"nodeType":"InheritanceSpecifier","src":"846:13:18"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"527:247:18","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":3311,"linearizedBaseContracts":[3311,1899,3600,3428,5591,5603,3967],"name":"ERC721","nameLocation":"793:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2385,"libraryName":{"id":2383,"name":"Strings","nameLocations":["872:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"872:7:18"},"nodeType":"UsingForDirective","src":"866:26:18","typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2387,"mutability":"mutable","name":"_name","nameLocation":"931:5:18","nodeType":"VariableDeclaration","scope":3311,"src":"916:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2386,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2389,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:18","nodeType":"VariableDeclaration","scope":3311,"src":"963:22:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2388,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2393,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:18","nodeType":"VariableDeclaration","scope":3311,"src":"992:51:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2392,"keyName":"tokenId","keyNameLocation":"1008:7:18","keyType":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2391,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2397,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:18","nodeType":"VariableDeclaration","scope":3311,"src":"1050:51:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2396,"keyName":"owner","keyNameLocation":"1066:5:18","keyType":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2401,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:18","nodeType":"VariableDeclaration","scope":3311,"src":"1108:59:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2400,"keyName":"tokenId","keyNameLocation":"1124:7:18","keyType":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2407,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:18","nodeType":"VariableDeclaration","scope":3311,"src":"1174:86:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2406,"keyName":"owner","keyNameLocation":"1190:5:18","keyType":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2405,"keyName":"operator","keyNameLocation":"1215:8:18","keyType":{"id":2403,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2404,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2423,"nodeType":"Block","src":"1436:57:18","statements":[{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"1446:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2416,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"1454:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2418,"nodeType":"ExpressionStatement","src":"1446:13:18"},{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"1469:7:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2420,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1479:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2422,"nodeType":"ExpressionStatement","src":"1469:17:18"}]},"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"1267:108:18","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2424,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"name_","nameLocation":"1406:5:18","nodeType":"VariableDeclaration","scope":2424,"src":"1392:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2409,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:18","nodeType":"VariableDeclaration","scope":2424,"src":"1413:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:18"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[],"src":"1436:0:18"},"scope":3311,"src":"1380:113:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5590,5602],"body":{"id":2454,"nodeType":"Block","src":"1668:192:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1697:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2437,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"1717:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3428_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3428_$","typeString":"type(contract IERC721)"}],"id":2436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3428","typeString":"type(contract IERC721)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1753:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2443,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"1773:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3600_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3600_$","typeString":"type(contract IERC721Metadata)"}],"id":2442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3600","typeString":"type(contract IERC721Metadata)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2450,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1841:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2448,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3311_$","typeString":"type(contract super ERC721)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:18","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5590,"src":"1817:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2434,"id":2453,"nodeType":"Return","src":"1678:175:18"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"1499:56:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2455,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:18","nodeType":"FunctionDefinition","overrides":{"id":2431,"nodeType":"OverrideSpecifier","overrides":[{"id":2429,"name":"ERC165","nameLocations":["1636:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":5591,"src":"1636:6:18"},{"id":2430,"name":"IERC165","nameLocations":["1644:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":5603,"src":"1644:7:18"}],"src":"1627:25:18"},"parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:18","nodeType":"VariableDeclaration","scope":2455,"src":"1587:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2426,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:18"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"1662:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:18"},"scope":3311,"src":"1560:300:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3353],"body":{"id":2482,"nodeType":"Block","src":"1991:136:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"2005:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:18","typeDescriptions":{}}},"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2477,"nodeType":"IfStatement","src":"2001:87:18","trueBody":{"id":2476,"nodeType":"Block","src":"2026:62:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:18","typeDescriptions":{}}},"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2469,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"2047:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2475,"nodeType":"RevertStatement","src":"2040:37:18"}]}},{"expression":{"baseExpression":{"id":2478,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"2104:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2480,"indexExpression":{"id":2479,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"2114:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2462,"id":2481,"nodeType":"Return","src":"2097:23:18"}]},"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"1866:48:18","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2483,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:18","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"owner","nameLocation":"1946:5:18","nodeType":"VariableDeclaration","scope":2483,"src":"1938:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:18"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2483,"src":"1982:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:18"},"scope":3311,"src":"1919:208:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3361],"body":{"id":2495,"nodeType":"Block","src":"2256:46:18","statements":[{"expression":{"arguments":[{"id":2492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"2287:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2491,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2273:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2490,"id":2494,"nodeType":"Return","src":"2266:29:18"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"2133:46:18","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2496,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:18","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:18","nodeType":"VariableDeclaration","scope":2496,"src":"2201:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:18"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2496,"src":"2247:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:18"},"scope":3311,"src":"2184:118:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3585],"body":{"id":2504,"nodeType":"Block","src":"2424:29:18","statements":[{"expression":{"id":2502,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"2441:5:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2501,"id":2503,"nodeType":"Return","src":"2434:12:18"}]},"documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"2308:51:18","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:18","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[],"src":"2377:2:18"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"2409:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2499,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:18"},"scope":3311,"src":"2364:89:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3591],"body":{"id":2513,"nodeType":"Block","src":"2579:31:18","statements":[{"expression":{"id":2511,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"2596:7:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2510,"id":2512,"nodeType":"Return","src":"2589:14:18"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"2459:53:18","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:18","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[],"src":"2532:2:18"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2514,"src":"2564:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2508,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:18"},"scope":3311,"src":"2517:93:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3599],"body":{"id":2549,"nodeType":"Block","src":"2755:176:18","statements":[{"expression":{"arguments":[{"id":2523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2779:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2522,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2765:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2525,"nodeType":"ExpressionStatement","src":"2765:22:18"},{"assignments":[2527],"declarations":[{"constant":false,"id":2527,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:18","nodeType":"VariableDeclaration","scope":2549,"src":"2798:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2528,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"2822:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:18"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2533,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2855:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2531,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:18","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"length","nodeType":"MemberAccess","src":"2849:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:18","trueExpression":{"arguments":[{"id":2541,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2891:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"2900:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4279,"src":"2900:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2538,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:18","typeDescriptions":{}}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2521,"id":2548,"nodeType":"Return","src":"2842:82:18"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"2616:55:18","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:18","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:18","nodeType":"VariableDeclaration","scope":2550,"src":"2694:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:18"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"2740:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2519,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:18"},"scope":3311,"src":"2676:255:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2558,"nodeType":"Block","src":"3239:26:18","statements":[{"expression":{"hexValue":"","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2555,"id":2557,"nodeType":"Return","src":"3249:9:18"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"2937:231:18","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2559,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:18","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[],"src":"3190:2:18"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2559,"src":"3224:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2553,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:18"},"scope":3311,"src":"3173:92:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3401],"body":{"id":2574,"nodeType":"Block","src":"3383:52:18","statements":[{"expression":{"arguments":[{"id":2568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"3402:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2569,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"3406:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2570,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3415:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2567,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[3178,3244],"referencedDeclaration":3178,"src":"3393:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2573,"nodeType":"ExpressionStatement","src":"3393:35:18"}]},"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"3271:46:18","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2575,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:18","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"to","nameLocation":"3347:2:18","nodeType":"VariableDeclaration","scope":2575,"src":"3339:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:18","nodeType":"VariableDeclaration","scope":2575,"src":"3351:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:18"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[],"src":"3383:0:18"},"scope":3311,"src":"3322:113:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3417],"body":{"id":2591,"nodeType":"Block","src":"3572:78:18","statements":[{"expression":{"arguments":[{"id":2584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3596:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2583,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3582:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2586,"nodeType":"ExpressionStatement","src":"3582:22:18"},{"expression":{"arguments":[{"id":2588,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"3635:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2587,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"3622:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2582,"id":2590,"nodeType":"Return","src":"3615:28:18"}]},"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"3441:50:18","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:18","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:18","nodeType":"VariableDeclaration","scope":2592,"src":"3517:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:18"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2592,"src":"3563:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:18"},"scope":3311,"src":"3496:154:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3409],"body":{"id":2607,"nodeType":"Block","src":"3792:69:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2601,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3821:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2603,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"3835:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2604,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"3845:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2600,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"3802:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2606,"nodeType":"ExpressionStatement","src":"3802:52:18"}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"3656:56:18","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:18","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"operator","nameLocation":"3752:8:18","nodeType":"VariableDeclaration","scope":2608,"src":"3744:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"approved","nameLocation":"3767:8:18","nodeType":"VariableDeclaration","scope":2608,"src":"3762:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2596,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:18"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[],"src":"3792:0:18"},"scope":3311,"src":"3717:144:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3427],"body":{"id":2624,"nodeType":"Block","src":"4021:59:18","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2618,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4038:18:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2620,"indexExpression":{"id":2619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"4057:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2622,"indexExpression":{"id":2621,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"4064:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2617,"id":2623,"nodeType":"Return","src":"4031:42:18"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"3867:55:18","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:18","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"owner","nameLocation":"3961:5:18","nodeType":"VariableDeclaration","scope":2625,"src":"3953:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"operator","nameLocation":"3976:8:18","nodeType":"VariableDeclaration","scope":2625,"src":"3968:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:18"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"4015:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2615,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:18"},"scope":3311,"src":"3927:153:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3393],"body":{"id":2670,"nodeType":"Block","src":"4222:498:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"4236:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:18","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2649,"nodeType":"IfStatement","src":"4232:87:18","trueBody":{"id":2648,"nodeType":"Block","src":"4254:65:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:18","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2641,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4275:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"RevertStatement","src":"4268:40:18"}]}},{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:18","nodeType":"VariableDeclaration","scope":2670,"src":"4537:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2658,"initialValue":{"arguments":[{"id":2653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"4569:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"4573:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2655,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"4582:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2652,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"4561:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2659,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"4609:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2660,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4626:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"4605:109:18","trueBody":{"id":2668,"nodeType":"Block","src":"4632:82:18","statements":[{"errorCall":{"arguments":[{"id":2663,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"4674:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"4680:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2665,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"4689:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2662,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4653:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"RevertStatement","src":"4646:57:18"}]}}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"4086:51:18","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2671,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:18","nodeType":"FunctionDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"from","nameLocation":"4172:4:18","nodeType":"VariableDeclaration","scope":2671,"src":"4164:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"to","nameLocation":"4186:2:18","nodeType":"VariableDeclaration","scope":2671,"src":"4178:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:18","nodeType":"VariableDeclaration","scope":2671,"src":"4190:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:18"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"4222:0:18"},"scope":3311,"src":"4142:578:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3383],"body":{"id":2688,"nodeType":"Block","src":"4862:56:18","statements":[{"expression":{"arguments":[{"id":2682,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"4889:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2683,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"4895:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"4899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2681,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2689,2719],"referencedDeclaration":2719,"src":"4872:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"ExpressionStatement","src":"4872:39:18"}]},"documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"4726:55:18","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2689,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:18","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"from","nameLocation":"4820:4:18","nodeType":"VariableDeclaration","scope":2689,"src":"4812:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"to","nameLocation":"4834:2:18","nodeType":"VariableDeclaration","scope":2689,"src":"4826:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:18","nodeType":"VariableDeclaration","scope":2689,"src":"4838:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:18"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[],"src":"4862:0:18"},"scope":3311,"src":"4786:132:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3373],"body":{"id":2718,"nodeType":"Block","src":"5087:130:18","statements":[{"expression":{"arguments":[{"id":2702,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"5110:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2703,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"5116:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5120:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2701,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"5097:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"5097:31:18"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2710,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"5172:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2712,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"5186:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"5192:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5196:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2715,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"5205:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2707,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"5138:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3677_$","typeString":"type(library ERC721Utils)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:18","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3676,"src":"5138:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2717,"nodeType":"ExpressionStatement","src":"5138:72:18"}]},"documentation":{"id":2690,"nodeType":"StructuredDocumentation","src":"4924:55:18","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:18","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"from","nameLocation":"5018:4:18","nodeType":"VariableDeclaration","scope":2719,"src":"5010:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"to","nameLocation":"5032:2:18","nodeType":"VariableDeclaration","scope":2719,"src":"5024:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:18","nodeType":"VariableDeclaration","scope":2719,"src":"5036:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"data","nameLocation":"5066:4:18","nodeType":"VariableDeclaration","scope":2719,"src":"5053:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2697,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:18"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[],"src":"5087:0:18"},"scope":3311,"src":"4984:233:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2731,"nodeType":"Block","src":"5807:40:18","statements":[{"expression":{"baseExpression":{"id":2727,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"5824:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2729,"indexExpression":{"id":2728,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5832:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2726,"id":2730,"nodeType":"Return","src":"5817:23:18"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"5223:504:18","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:18","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:18","nodeType":"VariableDeclaration","scope":2732,"src":"5750:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:18"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2732,"src":"5798:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:18"},"scope":3311,"src":"5732:115:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2744,"nodeType":"Block","src":"6042:48:18","statements":[{"expression":{"baseExpression":{"id":2740,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"6059:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2742,"indexExpression":{"id":2741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6075:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2739,"id":2743,"nodeType":"Return","src":"6052:31:18"}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"5853:105:18","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":2745,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:18","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:18","nodeType":"VariableDeclaration","scope":2745,"src":"5985:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:18"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2745,"src":"6033:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:18"},"scope":3311,"src":"5963:127:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"6510:163:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6539:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2758,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:18","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"6577:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6586:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"6614:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6621:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2766,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"6597:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"6646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2771,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6633:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6658:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2756,"id":2779,"nodeType":"Return","src":"6520:146:18"}]},"documentation":{"id":2746,"nodeType":"StructuredDocumentation","src":"6096:300:18","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:18","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"owner","nameLocation":"6432:5:18","nodeType":"VariableDeclaration","scope":2781,"src":"6424:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"spender","nameLocation":"6447:7:18","nodeType":"VariableDeclaration","scope":2781,"src":"6439:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:18","nodeType":"VariableDeclaration","scope":2781,"src":"6456:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:18"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"6504:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2754,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:18"},"scope":3311,"src":"6401:272:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2817,"nodeType":"Block","src":"7202:271:18","statements":[{"condition":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:18","subExpression":{"arguments":[{"id":2792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"7231:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7238:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2794,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2791,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"7217:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2816,"nodeType":"IfStatement","src":"7212:255:18","trueBody":{"id":2815,"nodeType":"Block","src":"7257:210:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"7275:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:18","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2813,"nodeType":"Block","src":"7373:84:18","statements":[{"errorCall":{"arguments":[{"id":2809,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2810,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"7434:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"7398:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2812,"nodeType":"RevertStatement","src":"7391:51:18"}]},"id":2814,"nodeType":"IfStatement","src":"7271:186:18","trueBody":{"id":2807,"nodeType":"Block","src":"7296:71:18","statements":[{"errorCall":{"arguments":[{"id":2804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"7344:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"7321:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2806,"nodeType":"RevertStatement","src":"7314:38:18"}]}}]}}]},"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"6679:421:18","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:18","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"owner","nameLocation":"7139:5:18","nodeType":"VariableDeclaration","scope":2818,"src":"7131:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"spender","nameLocation":"7154:7:18","nodeType":"VariableDeclaration","scope":2818,"src":"7146:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:18","nodeType":"VariableDeclaration","scope":2818,"src":"7163:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:18"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[],"src":"7202:0:18"},"scope":3311,"src":"7105:368:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"8190:78:18","statements":[{"id":2832,"nodeType":"UncheckedBlock","src":"8200:62:18","statements":[{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2826,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"8224:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2828,"indexExpression":{"id":2827,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"8234:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"8246:5:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"8224:27:18"}]}]},"documentation":{"id":2819,"nodeType":"StructuredDocumentation","src":"7479:631:18","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:18","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"account","nameLocation":"8149:7:18","nodeType":"VariableDeclaration","scope":2834,"src":"8141:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2823,"mutability":"mutable","name":"value","nameLocation":"8166:5:18","nodeType":"VariableDeclaration","scope":2834,"src":"8158:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2822,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:18"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"8190:0:18"},"scope":3311,"src":"8115:153:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"8956:700:18","statements":[{"assignments":[2847],"declarations":[{"constant":false,"id":2847,"mutability":"mutable","name":"from","nameLocation":"8974:4:18","nodeType":"VariableDeclaration","scope":2923,"src":"8966:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2851,"initialValue":{"arguments":[{"id":2849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"8990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2848,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"8981:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"9058:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:18","typeDescriptions":{}}},"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2865,"nodeType":"IfStatement","src":"9054:86:18","trueBody":{"id":2864,"nodeType":"Block","src":"9078:62:18","statements":[{"expression":{"arguments":[{"id":2859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9109:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2860,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"9115:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2861,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9121:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2858,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"9092:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2863,"nodeType":"ExpressionStatement","src":"9092:37:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9184:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:18","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"9180:256:18","trueBody":{"id":2892,"nodeType":"Block","src":"9204:232:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:18","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:18","typeDescriptions":{}}},"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2872,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[3178,3244],"referencedDeclaration":3244,"src":"9300:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2884,"nodeType":"ExpressionStatement","src":"9300:48:18"},{"id":2891,"nodeType":"UncheckedBlock","src":"9363:63:18","statements":[{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2885,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"9391:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2887,"indexExpression":{"id":2886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9401:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ExpressionStatement","src":"9391:20:18"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"9450:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:18","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"nodeType":"IfStatement","src":"9446:107:18","trueBody":{"id":2907,"nodeType":"Block","src":"9468:85:18","statements":[{"id":2906,"nodeType":"UncheckedBlock","src":"9482:61:18","statements":[{"expression":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2900,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"9510:9:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2902,"indexExpression":{"id":2901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"9520:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ExpressionStatement","src":"9510:18:18"}]}]}},{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2909,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9563:7:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2911,"indexExpression":{"id":2910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9571:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"9582:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2914,"nodeType":"ExpressionStatement","src":"9563:21:18"},{"eventCall":{"arguments":[{"id":2916,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9609:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"9615:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9619:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2915,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"9600:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2920,"nodeType":"EmitStatement","src":"9595:32:18"},{"expression":{"id":2921,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"9645:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2845,"id":2922,"nodeType":"Return","src":"9638:11:18"}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"8274:582:18","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:18","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"to","nameLocation":"8886:2:18","nodeType":"VariableDeclaration","scope":2924,"src":"8878:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:18","nodeType":"VariableDeclaration","scope":2924,"src":"8890:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"auth","nameLocation":"8915:4:18","nodeType":"VariableDeclaration","scope":2924,"src":"8907:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:18"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"8947:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:18"},"scope":3311,"src":"8861:795:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2973,"nodeType":"Block","src":"10031:274:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"10045:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:18","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"IfStatement","src":"10041:87:18","trueBody":{"id":2945,"nodeType":"Block","src":"10063:65:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:18","typeDescriptions":{}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2938,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"10084:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2944,"nodeType":"RevertStatement","src":"10077:40:18"}]}},{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:18","nodeType":"VariableDeclaration","scope":2973,"src":"10137:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2957,"initialValue":{"arguments":[{"id":2950,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"10169:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2951,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"10173:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2952,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:18","typeDescriptions":{}}},"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2949,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"10161:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"10207:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2959,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:18","typeDescriptions":{}}},"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"10203:96:18","trueBody":{"id":2971,"nodeType":"Block","src":"10236:63:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:18","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2964,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"10257:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"RevertStatement","src":"10250:38:18"}]}}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"9662:311:18","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:18","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"to","nameLocation":"10001:2:18","nodeType":"VariableDeclaration","scope":2974,"src":"9993:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:18","nodeType":"VariableDeclaration","scope":2974,"src":"10005:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:18"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"10031:0:18"},"scope":3311,"src":"9978:327:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2988,"nodeType":"Block","src":"10713:43:18","statements":[{"expression":{"arguments":[{"id":2983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"10733:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2984,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"10737:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2982,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2989,3019],"referencedDeclaration":3019,"src":"10723:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"ExpressionStatement","src":"10723:26:18"}]},"documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"10311:340:18","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2989,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:18","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"to","nameLocation":"10683:2:18","nodeType":"VariableDeclaration","scope":2989,"src":"10675:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2979,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:18","nodeType":"VariableDeclaration","scope":2989,"src":"10687:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:18"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[],"src":"10713:0:18"},"scope":3311,"src":"10656:100:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3018,"nodeType":"Block","src":"11061:123:18","statements":[{"expression":{"arguments":[{"id":3000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11077:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3001,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2999,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"11071:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3003,"nodeType":"ExpressionStatement","src":"11071:18:18"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3007,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"11133:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:18","typeDescriptions":{}}},"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3013,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11159:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"11163:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3015,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"11172:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3004,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"11099:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3677_$","typeString":"type(library ERC721Utils)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:18","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3676,"src":"11099:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3017,"nodeType":"ExpressionStatement","src":"11099:78:18"}]},"documentation":{"id":2990,"nodeType":"StructuredDocumentation","src":"10762:210:18","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":3019,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:18","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"to","nameLocation":"11004:2:18","nodeType":"VariableDeclaration","scope":3019,"src":"10996:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2994,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:18","nodeType":"VariableDeclaration","scope":3019,"src":"11008:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"data","nameLocation":"11038:4:18","nodeType":"VariableDeclaration","scope":3019,"src":"11025:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2995,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:18"},"returnParameters":{"id":2998,"nodeType":"ParameterList","parameters":[],"src":"11061:0:18"},"scope":3311,"src":"10977:207:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3051,"nodeType":"Block","src":"11551:186:18","statements":[{"assignments":[3026],"declarations":[{"constant":false,"id":3026,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:18","nodeType":"VariableDeclaration","scope":3051,"src":"11561:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3025,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3038,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:18","typeDescriptions":{}}},"id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3032,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11605:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:18","typeDescriptions":{}}},"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3027,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"11585:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"11639:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:18","typeDescriptions":{}}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"nodeType":"IfStatement","src":"11635:96:18","trueBody":{"id":3049,"nodeType":"Block","src":"11668:63:18","statements":[{"errorCall":{"arguments":[{"id":3046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11712:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"11689:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3048,"nodeType":"RevertStatement","src":"11682:38:18"}]}}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"11190:315:18","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":3052,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:18","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:18","nodeType":"VariableDeclaration","scope":3052,"src":"11525:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:18"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[],"src":"11551:0:18"},"scope":3311,"src":"11510:227:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"12132:389:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12146:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:18","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3076,"nodeType":"IfStatement","src":"12142:87:18","trueBody":{"id":3075,"nodeType":"Block","src":"12164:65:18","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:18","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3068,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"12185:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3074,"nodeType":"RevertStatement","src":"12178:40:18"}]}},{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:18","nodeType":"VariableDeclaration","scope":3111,"src":"12238:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3087,"initialValue":{"arguments":[{"id":3080,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"12270:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3081,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"12274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:18","typeDescriptions":{}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3079,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"12262:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3088,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"12308:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:18","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"12410:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3100,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12427:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3109,"nodeType":"IfStatement","src":"12406:109:18","trueBody":{"id":3108,"nodeType":"Block","src":"12433:82:18","statements":[{"errorCall":{"arguments":[{"id":3103,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12475:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"12481:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3105,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"12490:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3102,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"12454:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3107,"nodeType":"RevertStatement","src":"12447:57:18"}]}},"id":3110,"nodeType":"IfStatement","src":"12304:211:18","trueBody":{"id":3098,"nodeType":"Block","src":"12337:63:18","statements":[{"errorCall":{"arguments":[{"id":3095,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"12381:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"12358:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3097,"nodeType":"RevertStatement","src":"12351:38:18"}]}}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"11743:313:18","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:18","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"from","nameLocation":"12088:4:18","nodeType":"VariableDeclaration","scope":3112,"src":"12080:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"to","nameLocation":"12102:2:18","nodeType":"VariableDeclaration","scope":3112,"src":"12094:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:18","nodeType":"VariableDeclaration","scope":3112,"src":"12106:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:18"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[],"src":"12132:0:18"},"scope":3311,"src":"12061:460:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3129,"nodeType":"Block","src":"13530:53:18","statements":[{"expression":{"arguments":[{"id":3123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"13554:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3124,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"13560:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3125,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"13564:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3122,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[3130,3160],"referencedDeclaration":3160,"src":"13540:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"ExpressionStatement","src":"13540:36:18"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"12527:923:18","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:18","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"from","nameLocation":"13486:4:18","nodeType":"VariableDeclaration","scope":3130,"src":"13478:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"to","nameLocation":"13500:2:18","nodeType":"VariableDeclaration","scope":3130,"src":"13492:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:18","nodeType":"VariableDeclaration","scope":3130,"src":"13504:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:18"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[],"src":"13530:0:18"},"scope":3311,"src":"13455:128:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"13922:127:18","statements":[{"expression":{"arguments":[{"id":3143,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"13942:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3144,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"13948:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3145,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13952:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3142,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"13932:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"13932:28:18"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3151,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"14004:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3153,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"14018:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3154,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"14024:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3155,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"14028:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"14037:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3148,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"13970:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3677_$","typeString":"type(library ERC721Utils)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:18","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3676,"src":"13970:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3158,"nodeType":"ExpressionStatement","src":"13970:72:18"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"13589:226:18","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:18","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"from","nameLocation":"13851:4:18","nodeType":"VariableDeclaration","scope":3160,"src":"13843:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"to","nameLocation":"13865:2:18","nodeType":"VariableDeclaration","scope":3160,"src":"13857:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3134,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:18","nodeType":"VariableDeclaration","scope":3160,"src":"13869:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"data","nameLocation":"13899:4:18","nodeType":"VariableDeclaration","scope":3160,"src":"13886:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:18"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"13922:0:18"},"scope":3311,"src":"13820:229:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"14562:50:18","statements":[{"expression":{"arguments":[{"id":3171,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"14581:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3172,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"14585:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3173,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"14594:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3170,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[3178,3244],"referencedDeclaration":3244,"src":"14572:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3176,"nodeType":"ExpressionStatement","src":"14572:33:18"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"14055:432:18","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:18","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"to","nameLocation":"14518:2:18","nodeType":"VariableDeclaration","scope":3178,"src":"14510:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:18","nodeType":"VariableDeclaration","scope":3178,"src":"14522:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"auth","nameLocation":"14547:4:18","nodeType":"VariableDeclaration","scope":3178,"src":"14539:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:18"},"returnParameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"14562:0:18"},"scope":3311,"src":"14492:120:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3243,"nodeType":"Block","src":"14888:568:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"14954:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"14967:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:18","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"14950:460:18","trueBody":{"id":3235,"nodeType":"Block","src":"14987:423:18","statements":[{"assignments":[3199],"declarations":[{"constant":false,"id":3199,"mutability":"mutable","name":"owner","nameLocation":"15009:5:18","nodeType":"VariableDeclaration","scope":3235,"src":"15001:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3203,"initialValue":{"arguments":[{"id":3201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"15031:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"15017:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"15167:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:18","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"15189:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3211,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"15198:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:18","subExpression":{"arguments":[{"id":3215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"15224:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3216,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"15231:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3214,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"15207:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3225,"nodeType":"IfStatement","src":"15163:142:18","trueBody":{"id":3224,"nodeType":"Block","src":"15238:67:18","statements":[{"errorCall":{"arguments":[{"id":3221,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"15285:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3220,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"15263:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3223,"nodeType":"RevertStatement","src":"15256:34:18"}]}},{"condition":{"id":3226,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"15323:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3234,"nodeType":"IfStatement","src":"15319:81:18","trueBody":{"id":3233,"nodeType":"Block","src":"15334:66:18","statements":[{"eventCall":{"arguments":[{"id":3228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"15366:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"15373:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3230,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"15377:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3227,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"15357:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3232,"nodeType":"EmitStatement","src":"15352:33:18"}]}}]}},{"expression":{"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3237,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15420:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3239,"indexExpression":{"id":3238,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"15436:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3240,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"15447:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3242,"nodeType":"ExpressionStatement","src":"15420:29:18"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"14618:171:18","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":3244,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:18","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"to","nameLocation":"14820:2:18","nodeType":"VariableDeclaration","scope":3244,"src":"14812:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:18","nodeType":"VariableDeclaration","scope":3244,"src":"14824:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"auth","nameLocation":"14849:4:18","nodeType":"VariableDeclaration","scope":3244,"src":"14841:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:18","nodeType":"VariableDeclaration","scope":3244,"src":"14855:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3186,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:18"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[],"src":"14888:0:18"},"scope":3311,"src":"14794:662:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3280,"nodeType":"Block","src":"15758:219:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"15772:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:18","typeDescriptions":{}}},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3265,"nodeType":"IfStatement","src":"15768:91:18","trueBody":{"id":3264,"nodeType":"Block","src":"15796:63:18","statements":[{"errorCall":{"arguments":[{"id":3261,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"15839:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3260,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"15817:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3263,"nodeType":"RevertStatement","src":"15810:38:18"}]}},{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3266,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"15868:18:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":3269,"indexExpression":{"id":3267,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"15887:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3270,"indexExpression":{"id":3268,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"15894:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3271,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"15906:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"ExpressionStatement","src":"15868:46:18"},{"eventCall":{"arguments":[{"id":3275,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"15944:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3276,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"15951:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3277,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"15961:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3274,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"15929:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3279,"nodeType":"EmitStatement","src":"15924:46:18"}]},"documentation":{"id":3245,"nodeType":"StructuredDocumentation","src":"15462:198:18","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:18","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"owner","nameLocation":"15701:5:18","nodeType":"VariableDeclaration","scope":3281,"src":"15693:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"operator","nameLocation":"15716:8:18","nodeType":"VariableDeclaration","scope":3281,"src":"15708:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3248,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"approved","nameLocation":"15731:8:18","nodeType":"VariableDeclaration","scope":3281,"src":"15726:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:18"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[],"src":"15758:0:18"},"scope":3311,"src":"15665:312:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"16284:169:18","statements":[{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"owner","nameLocation":"16302:5:18","nodeType":"VariableDeclaration","scope":3309,"src":"16294:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3289,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3294,"initialValue":{"arguments":[{"id":3292,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"16319:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3291,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"16310:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16341:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3296,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:18","typeDescriptions":{}}},"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3306,"nodeType":"IfStatement","src":"16337:88:18","trueBody":{"id":3305,"nodeType":"Block","src":"16362:63:18","statements":[{"errorCall":{"arguments":[{"id":3302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"16406:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3301,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"16383:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"RevertStatement","src":"16376:38:18"}]}},{"expression":{"id":3307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"16441:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3288,"id":3308,"nodeType":"Return","src":"16434:12:18"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"15983:224:18","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:18","nodeType":"FunctionDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:18","nodeType":"VariableDeclaration","scope":3310,"src":"16235:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:18"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3310,"src":"16275:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:18"},"scope":3311,"src":"16212:241:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3312,"src":"775:15680:18","usedErrors":[1857,1862,1871,1876,1881,1888,1893,1898],"usedEvents":[3327,3336,3345]}],"src":"107:16349:18"},"id":18},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[5603],"IERC721":[3428]},"id":3429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3313,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3429,"sourceUnit":5604,"src":"134:62:19","symbolAliases":[{"foreign":{"id":3314,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"142:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3317,"name":"IERC165","nameLocations":["288:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":5603,"src":"288:7:19"},"id":3318,"nodeType":"InheritanceSpecifier","src":"288:7:19"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"198:68:19","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":3428,"linearizedBaseContracts":[3428,5603],"name":"IERC721","nameLocation":"277:7:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"302:88:19","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3327,"name":"Transfer","nameLocation":"401:8:19","nodeType":"EventDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:19","nodeType":"VariableDeclaration","scope":3327,"src":"410:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3323,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:19","nodeType":"VariableDeclaration","scope":3327,"src":"432:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3325,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:19","nodeType":"VariableDeclaration","scope":3327,"src":"452:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:19"},"src":"395:82:19"},{"anonymous":false,"documentation":{"id":3328,"nodeType":"StructuredDocumentation","src":"483:94:19","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3336,"name":"Approval","nameLocation":"588:8:19","nodeType":"EventDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:19","nodeType":"VariableDeclaration","scope":3336,"src":"597:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3332,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:19","nodeType":"VariableDeclaration","scope":3336,"src":"620:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3334,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:19","nodeType":"VariableDeclaration","scope":3336,"src":"646:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:19"},"src":"582:89:19"},{"anonymous":false,"documentation":{"id":3337,"nodeType":"StructuredDocumentation","src":"677:117:19","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3345,"name":"ApprovalForAll","nameLocation":"805:14:19","nodeType":"EventDefinition","parameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:19","nodeType":"VariableDeclaration","scope":3345,"src":"820:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3341,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:19","nodeType":"VariableDeclaration","scope":3345,"src":"843:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3343,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:19","nodeType":"VariableDeclaration","scope":3345,"src":"869:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3342,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:19"},"src":"799:85:19"},{"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"890:76:19","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3353,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:19","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"owner","nameLocation":"998:5:19","nodeType":"VariableDeclaration","scope":3353,"src":"990:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:19"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"balance","nameLocation":"1036:7:19","nodeType":"VariableDeclaration","scope":3353,"src":"1028:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:19"},"scope":3428,"src":"971:74:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"1051:131:19","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3361,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:19","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:19","nodeType":"VariableDeclaration","scope":3361,"src":"1204:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:19"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"owner","nameLocation":"1252:5:19","nodeType":"VariableDeclaration","scope":3361,"src":"1244:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:19"},"scope":3428,"src":"1187:72:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"1265:565:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3373,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:19","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"from","nameLocation":"1869:4:19","nodeType":"VariableDeclaration","scope":3373,"src":"1861:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3363,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"to","nameLocation":"1883:2:19","nodeType":"VariableDeclaration","scope":3373,"src":"1875:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3365,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:19","nodeType":"VariableDeclaration","scope":3373,"src":"1887:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"data","nameLocation":"1919:4:19","nodeType":"VariableDeclaration","scope":3373,"src":"1904:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3369,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:19"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[],"src":"1933:0:19"},"scope":3428,"src":"1835:99:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"1940:706:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3383,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:19","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"from","nameLocation":"2685:4:19","nodeType":"VariableDeclaration","scope":3383,"src":"2677:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3375,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"to","nameLocation":"2699:2:19","nodeType":"VariableDeclaration","scope":3383,"src":"2691:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3377,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:19","nodeType":"VariableDeclaration","scope":3383,"src":"2703:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:19"},"returnParameters":{"id":3382,"nodeType":"ParameterList","parameters":[],"src":"2728:0:19"},"scope":3428,"src":"2651:78:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"2735:733:19","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3393,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:19","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"from","nameLocation":"3503:4:19","nodeType":"VariableDeclaration","scope":3393,"src":"3495:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"to","nameLocation":"3517:2:19","nodeType":"VariableDeclaration","scope":3393,"src":"3509:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:19","nodeType":"VariableDeclaration","scope":3393,"src":"3521:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:19"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[],"src":"3546:0:19"},"scope":3428,"src":"3473:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"3553:452:19","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3401,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:19","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"to","nameLocation":"4035:2:19","nodeType":"VariableDeclaration","scope":3401,"src":"4027:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3395,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:19","nodeType":"VariableDeclaration","scope":3401,"src":"4039:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:19"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[],"src":"4064:0:19"},"scope":3428,"src":"4010:55:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"4071:315:19","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3409,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:19","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"operator","nameLocation":"4426:8:19","nodeType":"VariableDeclaration","scope":3409,"src":"4418:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3403,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"approved","nameLocation":"4441:8:19","nodeType":"VariableDeclaration","scope":3409,"src":"4436:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3405,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:19"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[],"src":"4459:0:19"},"scope":3428,"src":"4391:69:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"4466:139:19","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3417,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:19","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:19","nodeType":"VariableDeclaration","scope":3417,"src":"4631:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:19"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"operator","nameLocation":"4679:8:19","nodeType":"VariableDeclaration","scope":3417,"src":"4671:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3414,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:19"},"scope":3428,"src":"4610:79:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"4695:138:19","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3427,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:19","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"owner","nameLocation":"4872:5:19","nodeType":"VariableDeclaration","scope":3427,"src":"4864:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3419,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"operator","nameLocation":"4887:8:19","nodeType":"VariableDeclaration","scope":3427,"src":"4879:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:19"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"4920:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3424,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:19"},"scope":3428,"src":"4838:88:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3429,"src":"267:4661:19","usedErrors":[],"usedEvents":[3327,3336,3345]}],"src":"108:4821:19"},"id":19},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3446]},"id":3447,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"142:154:20","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":3446,"linearizedBaseContracts":[3446],"name":"IERC721Receiver","nameLocation":"307:15:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"329:500:20","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3445,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:20","nodeType":"FunctionDefinition","parameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"operator","nameLocation":"877:8:20","nodeType":"VariableDeclaration","scope":3445,"src":"869:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3433,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"from","nameLocation":"903:4:20","nodeType":"VariableDeclaration","scope":3445,"src":"895:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3435,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:20","nodeType":"VariableDeclaration","scope":3445,"src":"917:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"data","nameLocation":"957:4:20","nodeType":"VariableDeclaration","scope":3445,"src":"942:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3439,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:20"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3445,"src":"986:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3442,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:20"},"scope":3446,"src":"834:160:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3447,"src":"297:699:20","usedErrors":[],"usedEvents":[]}],"src":"116:881:20"},"id":20},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[3311],"ERC721URIStorage":[3572],"IERC165":[5603],"IERC4906":[1795],"Strings":[5567]},"id":3573,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3448,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":3312,"src":"154:37:21","symbolAliases":[{"foreign":{"id":3449,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"162:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":3452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":5568,"src":"192:51:21","symbolAliases":[{"foreign":{"id":3451,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"200:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":3454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":1796,"src":"244:58:21","symbolAliases":[{"foreign":{"id":3453,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"252:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":3456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":1751,"src":"303:56:21","symbolAliases":[{"foreign":{"id":3455,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"311:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3458,"name":"IERC4906","nameLocations":["470:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":1795,"src":"470:8:21"},"id":3459,"nodeType":"InheritanceSpecifier","src":"470:8:21"},{"baseName":{"id":3460,"name":"ERC721","nameLocations":["480:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3311,"src":"480:6:21"},"id":3461,"nodeType":"InheritanceSpecifier","src":"480:6:21"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"361:70:21","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":3572,"linearizedBaseContracts":[3572,3311,1899,3600,1795,3428,5591,5603,3967],"name":"ERC721URIStorage","nameLocation":"450:16:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3464,"libraryName":{"id":3462,"name":"Strings","nameLocations":["499:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"499:7:21"},"nodeType":"UsingForDirective","src":"493:26:21","typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":3470,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:21","nodeType":"VariableDeclaration","scope":3572,"src":"707:65:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3465,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:21","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":3466,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:21","typeDescriptions":{}}},"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":3474,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:21","nodeType":"VariableDeclaration","scope":3572,"src":"818:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3473,"keyName":"tokenId","keyNameLocation":"834:7:21","keyType":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3472,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[2455,5602],"body":{"id":3494,"nodeType":"Block","src":"1046:99:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3485,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"1063:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3486,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"1078:20:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3490,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"1126:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3488,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3572_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2455,"src":"1102:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3484,"id":3493,"nodeType":"Return","src":"1056:82:21"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"878:55:21","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:21","nodeType":"FunctionDefinition","overrides":{"id":3481,"nodeType":"OverrideSpecifier","overrides":[{"id":3479,"name":"ERC721","nameLocations":["1014:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3311,"src":"1014:6:21"},{"id":3480,"name":"IERC165","nameLocations":["1022:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":5603,"src":"1022:7:21"}],"src":"1005:25:21"},"parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:21","nodeType":"VariableDeclaration","scope":3495,"src":"965:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:21"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"1040:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3482,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:21"},"scope":3572,"src":"938:207:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2550],"body":{"id":3551,"nodeType":"Block","src":"1299:505:21","statements":[{"expression":{"arguments":[{"id":3505,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3504,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"1309:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3507,"nodeType":"ExpressionStatement","src":"1309:22:21"},{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:21","nodeType":"VariableDeclaration","scope":3551,"src":"1342:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3508,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3513,"initialValue":{"baseExpression":{"id":3510,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"1368:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3512,"indexExpression":{"id":3511,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"1379:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:21"},{"assignments":[3515],"declarations":[{"constant":false,"id":3515,"mutability":"mutable","name":"base","nameLocation":"1411:4:21","nodeType":"VariableDeclaration","scope":3551,"src":"1397:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3514,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3518,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3516,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1418:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3521,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"1507:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3519,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:21","typeDescriptions":{}}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:21","memberName":"length","nodeType":"MemberAccess","src":"1501:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3529,"nodeType":"IfStatement","src":"1497:70:21","trueBody":{"id":3528,"nodeType":"Block","src":"1526:41:21","statements":[{"expression":{"id":3526,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"1547:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3503,"id":3527,"nodeType":"Return","src":"1540:16:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3532,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"1672:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3530,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:21","typeDescriptions":{}}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:21","memberName":"length","nodeType":"MemberAccess","src":"1666:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3545,"nodeType":"IfStatement","src":"1662:95:21","trueBody":{"id":3544,"nodeType":"Block","src":"1695:62:21","statements":[{"expression":{"arguments":[{"id":3540,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"1730:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3541,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"1736:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3537,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:21","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:21","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3503,"id":3543,"nodeType":"Return","src":"1709:37:21"}]}},{"expression":{"arguments":[{"id":3548,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"1789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3546,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3572_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:21","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2550,"src":"1774:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3503,"id":3550,"nodeType":"Return","src":"1767:30:21"}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"1151:55:21","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:21","nodeType":"FunctionDefinition","overrides":{"id":3500,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:21"},"parameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:21","nodeType":"VariableDeclaration","scope":3552,"src":"1229:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:21"},"returnParameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"1284:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3501,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:21"},"scope":3572,"src":"1211:593:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3570,"nodeType":"Block","src":"2013:86:21","statements":[{"expression":{"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3560,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"2023:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3562,"indexExpression":{"id":3561,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"2034:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2023:19:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3563,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"2045:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2023:31:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3565,"nodeType":"ExpressionStatement","src":"2023:31:21"},{"eventCall":{"arguments":[{"id":3567,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"2084:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3566,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"2069:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2069:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3569,"nodeType":"EmitStatement","src":"2064:28:21"}]},"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"1810:117:21","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":3571,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1941:12:21","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"tokenId","nameLocation":"1962:7:21","nodeType":"VariableDeclaration","scope":3571,"src":"1954:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"_tokenURI","nameLocation":"1985:9:21","nodeType":"VariableDeclaration","scope":3571,"src":"1971:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3556,"name":"string","nodeType":"ElementaryTypeName","src":"1971:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1953:42:21"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"2013:0:21"},"scope":3572,"src":"1932:167:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3573,"src":"432:1669:21","usedErrors":[1857,1862,1871,1876,1881,1888,1893,1898],"usedEvents":[1787,1794,3327,3336,3345]}],"src":"128:1974:21"},"id":21},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3428],"IERC721Metadata":[3600]},"id":3601,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3574,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3601,"sourceUnit":3429,"src":"153:39:22","symbolAliases":[{"foreign":{"id":3575,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"161:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3578,"name":"IERC721","nameLocations":["357:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"357:7:22"},"id":3579,"nodeType":"InheritanceSpecifier","src":"357:7:22"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"194:133:22","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3600,"linearizedBaseContracts":[3600,3428,5603],"name":"IERC721Metadata","nameLocation":"338:15:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3580,"nodeType":"StructuredDocumentation","src":"371:58:22","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3585,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:22","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[],"src":"447:2:22"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3585,"src":"473:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3582,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:22"},"scope":3600,"src":"434:54:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"494:60:22","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3591,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:22","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[],"src":"574:2:22"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3591,"src":"600:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3588,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:22"},"scope":3600,"src":"559:56:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"621:90:22","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3599,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:22","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:22","nodeType":"VariableDeclaration","scope":3599,"src":"734:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:22"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"774:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3596,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:22"},"scope":3600,"src":"716:73:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3601,"src":"328:463:22","usedErrors":[],"usedEvents":[3327,3336,3345]}],"src":"127:665:22"},"id":22},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[3677],"IERC721Errors":[1899],"IERC721Receiver":[3446]},"id":3678,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3602,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3678,"sourceUnit":3447,"src":"144:55:23","symbolAliases":[{"foreign":{"id":3603,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"152:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3678,"sourceUnit":1947,"src":"200:69:23","symbolAliases":[{"foreign":{"id":3605,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"208:13:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"271:159:23","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":3677,"linearizedBaseContracts":[3677],"name":"ERC721Utils","nameLocation":"439:11:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3675,"nodeType":"Block","src":"1159:758:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"1173:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:23","memberName":"code","nodeType":"MemberAccess","src":"1173:7:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:23","memberName":"length","nodeType":"MemberAccess","src":"1173:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3674,"nodeType":"IfStatement","src":"1169:742:23","trueBody":{"id":3673,"nodeType":"Block","src":"1193:718:23","statements":[{"clauses":[{"block":{"id":3651,"nodeType":"Block","src":"1303:214:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"1325:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3639,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"1335:15:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3446_$","typeString":"type(contract IERC721Receiver)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:23","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"1335:32:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:23","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3650,"nodeType":"IfStatement","src":"1321:182:23","trueBody":{"id":3649,"nodeType":"Block","src":"1378:125:23","statements":[{"errorCall":{"arguments":[{"id":3646,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"1481:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3643,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"1445:13:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$1899_$","typeString":"type(contract IERC721Errors)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:23","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"1445:35:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3648,"nodeType":"RevertStatement","src":"1438:46:23"}]}}]},"errorName":"","id":3652,"nodeType":"TryCatchClause","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"retval","nameLocation":"1295:6:23","nodeType":"VariableDeclaration","scope":3652,"src":"1288:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3635,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:23"},"src":"1279:238:23"},{"block":{"id":3670,"nodeType":"Block","src":"1546:355:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3656,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"1568:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:23","memberName":"length","nodeType":"MemberAccess","src":"1568:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3668,"nodeType":"Block","src":"1736:151:23","statements":[{"AST":{"nativeSrc":"1783:86:23","nodeType":"YulBlock","src":"1783:86:23","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1820:2:23","nodeType":"YulLiteral","src":"1820:2:23","type":"","value":"32"},{"name":"reason","nativeSrc":"1824:6:23","nodeType":"YulIdentifier","src":"1824:6:23"}],"functionName":{"name":"add","nativeSrc":"1816:3:23","nodeType":"YulIdentifier","src":"1816:3:23"},"nativeSrc":"1816:15:23","nodeType":"YulFunctionCall","src":"1816:15:23"},{"arguments":[{"name":"reason","nativeSrc":"1839:6:23","nodeType":"YulIdentifier","src":"1839:6:23"}],"functionName":{"name":"mload","nativeSrc":"1833:5:23","nodeType":"YulIdentifier","src":"1833:5:23"},"nativeSrc":"1833:13:23","nodeType":"YulFunctionCall","src":"1833:13:23"}],"functionName":{"name":"revert","nativeSrc":"1809:6:23","nodeType":"YulIdentifier","src":"1809:6:23"},"nativeSrc":"1809:38:23","nodeType":"YulFunctionCall","src":"1809:38:23"},"nativeSrc":"1809:38:23","nodeType":"YulExpressionStatement","src":"1809:38:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":3654,"isOffset":false,"isSlot":false,"src":"1824:6:23","valueSize":1},{"declaration":3654,"isOffset":false,"isSlot":false,"src":"1839:6:23","valueSize":1}],"flags":["memory-safe"],"id":3667,"nodeType":"InlineAssembly","src":"1758:111:23"}]},"id":3669,"nodeType":"IfStatement","src":"1564:323:23","trueBody":{"id":3666,"nodeType":"Block","src":"1588:142:23","statements":[{"errorCall":{"arguments":[{"id":3663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"1708:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3660,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"1672:13:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$1899_$","typeString":"type(contract IERC721Errors)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:23","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":1881,"src":"1672:35:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3665,"nodeType":"RevertStatement","src":"1665:46:23"}]}}]},"errorName":"","id":3671,"nodeType":"TryCatchClause","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"reason","nameLocation":"1538:6:23","nodeType":"VariableDeclaration","scope":3671,"src":"1525:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3653,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:23"},"src":"1518:383:23"}],"externalCall":{"arguments":[{"id":3630,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"1248:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3631,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"1258:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"1264:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3633,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"1273:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"1227:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3626,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"1211:15:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3446_$","typeString":"type(contract IERC721Receiver)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3446","typeString":"contract IERC721Receiver"}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:23","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3445,"src":"1211:36:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:23","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3672,"nodeType":"TryStatement","src":"1207:694:23"}]}}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"457:531:23","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":3676,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:23","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"operator","nameLocation":"1041:8:23","nodeType":"VariableDeclaration","scope":3676,"src":"1033:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3609,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"from","nameLocation":"1067:4:23","nodeType":"VariableDeclaration","scope":3676,"src":"1059:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"to","nameLocation":"1089:2:23","nodeType":"VariableDeclaration","scope":3676,"src":"1081:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:23","nodeType":"VariableDeclaration","scope":3676,"src":"1101:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"data","nameLocation":"1139:4:23","nodeType":"VariableDeclaration","scope":3676,"src":"1126:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3617,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:23"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[],"src":"1159:0:23"},"scope":3677,"src":"993:924:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3678,"src":"431:1488:23","usedErrors":[],"usedEvents":[]}],"src":"118:1802:23"},"id":23},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3937],"Errors":[3989]},"id":3938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3679,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3938,"sourceUnit":3990,"src":"127:36:24","symbolAliases":[{"foreign":{"id":3680,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"135:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"165:67:24","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3937,"linearizedBaseContracts":[3937],"name":"Address","nameLocation":"241:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"255:75:24","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3687,"name":"AddressEmptyCode","nameLocation":"341:16:24","nodeType":"ErrorDefinition","parameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"target","nameLocation":"366:6:24","nodeType":"VariableDeclaration","scope":3687,"src":"358:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3684,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:24"},"src":"335:39:24"},{"body":{"id":3734,"nodeType":"Block","src":"1361:294:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3697,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}],"id":3696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3695,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:24","typeDescriptions":{}}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:24","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3700,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1399:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3714,"nodeType":"IfStatement","src":"1371:125:24","trueBody":{"id":3713,"nodeType":"Block","src":"1407:89:24","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}],"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3705,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:24","typeDescriptions":{}}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:24","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1478:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3702,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"1428:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3989_$","typeString":"type(library Errors)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:24","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"1428:26:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3712,"nodeType":"RevertStatement","src":"1421:64:24"}]}},{"assignments":[3716,3718],"declarations":[{"constant":false,"id":3716,"mutability":"mutable","name":"success","nameLocation":"1512:7:24","nodeType":"VariableDeclaration","scope":3734,"src":"1507:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3715,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3718,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:24","nodeType":"VariableDeclaration","scope":3734,"src":"1521:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3717,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3725,"initialValue":{"arguments":[{"hexValue":"","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3719,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"1548:9:24","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:24","memberName":"call","nodeType":"MemberAccess","src":"1548:14:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1570:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:24"},{"condition":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:24","subExpression":{"id":3726,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"1596:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3733,"nodeType":"IfStatement","src":"1591:58:24","trueBody":{"id":3732,"nodeType":"Block","src":"1605:44:24","statements":[{"expression":{"arguments":[{"id":3729,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"1627:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3728,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"1619:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3731,"nodeType":"ExpressionStatement","src":"1619:19:24"}]}}]},"documentation":{"id":3688,"nodeType":"StructuredDocumentation","src":"380:905:24","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:24","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:24","nodeType":"VariableDeclaration","scope":3735,"src":"1309:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3689,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:24","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"amount","nameLocation":"1344:6:24","nodeType":"VariableDeclaration","scope":3735,"src":"1336:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:24"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[],"src":"1361:0:24"},"scope":3937,"src":"1290:365:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3751,"nodeType":"Block","src":"2589:62:24","statements":[{"expression":{"arguments":[{"id":3746,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"2628:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3747,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"2636:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3745,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"2606:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3744,"id":3750,"nodeType":"Return","src":"2599:45:24"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1661:834:24","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3752,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:24","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"target","nameLocation":"2530:6:24","nodeType":"VariableDeclaration","scope":3752,"src":"2522:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"data","nameLocation":"2551:4:24","nodeType":"VariableDeclaration","scope":3752,"src":"2538:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:24"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3752,"src":"2575:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3742,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:24"},"scope":3937,"src":"2500:151:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"3088:294:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3766,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}],"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3764,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:24","typeDescriptions":{}}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:24","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"3126:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"3098:123:24","trueBody":{"id":3782,"nodeType":"Block","src":"3133:88:24","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3776,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3937","typeString":"library Address"}],"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:24","typeDescriptions":{}}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:24","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"3204:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3771,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"3154:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3989_$","typeString":"type(library Errors)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:24","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"3154:26:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3781,"nodeType":"RevertStatement","src":"3147:63:24"}]}},{"assignments":[3785,3787],"declarations":[{"constant":false,"id":3785,"mutability":"mutable","name":"success","nameLocation":"3236:7:24","nodeType":"VariableDeclaration","scope":3801,"src":"3231:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3784,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:24","nodeType":"VariableDeclaration","scope":3801,"src":"3245:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3786,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"id":3792,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"3298:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3788,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3272:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:24","memberName":"call","nodeType":"MemberAccess","src":"3272:11:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"3291:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:24"},{"expression":{"arguments":[{"id":3796,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"3347:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3797,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"3355:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3798,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"3364:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3795,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3320:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3763,"id":3800,"nodeType":"Return","src":"3313:62:24"}]},"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"2657:313:24","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:24","nodeType":"FunctionDefinition","parameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"target","nameLocation":"3014:6:24","nodeType":"VariableDeclaration","scope":3802,"src":"3006:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3754,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"data","nameLocation":"3035:4:24","nodeType":"VariableDeclaration","scope":3802,"src":"3022:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3756,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"value","nameLocation":"3049:5:24","nodeType":"VariableDeclaration","scope":3802,"src":"3041:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:24"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"3074:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3761,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:24"},"scope":3937,"src":"2975:407:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3827,"nodeType":"Block","src":"3621:154:24","statements":[{"assignments":[3813,3815],"declarations":[{"constant":false,"id":3813,"mutability":"mutable","name":"success","nameLocation":"3637:7:24","nodeType":"VariableDeclaration","scope":3827,"src":"3632:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3812,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:24","nodeType":"VariableDeclaration","scope":3827,"src":"3646:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3814,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3820,"initialValue":{"arguments":[{"id":3818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"3691:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3816,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"3673:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:24","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:24","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:24"},{"expression":{"arguments":[{"id":3822,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"3740:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3823,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3748:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3824,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"3757:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3821,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3713:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3811,"id":3826,"nodeType":"Return","src":"3706:62:24"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"3388:128:24","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3828,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:24","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"target","nameLocation":"3557:6:24","nodeType":"VariableDeclaration","scope":3828,"src":"3549:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"data","nameLocation":"3578:4:24","nodeType":"VariableDeclaration","scope":3828,"src":"3565:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3806,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:24"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3828,"src":"3607:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:24"},"scope":3937,"src":"3521:254:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"4013:156:24","statements":[{"assignments":[3839,3841],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"success","nameLocation":"4029:7:24","nodeType":"VariableDeclaration","scope":3853,"src":"4024:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3838,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:24","nodeType":"VariableDeclaration","scope":3853,"src":"4038:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3840,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3846,"initialValue":{"arguments":[{"id":3844,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4085:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3842,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"4065:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:24","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:24","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:24"},{"expression":{"arguments":[{"id":3848,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"4134:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3849,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"4142:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3850,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"4151:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3847,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4107:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3837,"id":3852,"nodeType":"Return","src":"4100:62:24"}]},"documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"3781:130:24","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:24","nodeType":"FunctionDefinition","parameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"target","nameLocation":"3954:6:24","nodeType":"VariableDeclaration","scope":3854,"src":"3946:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3830,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"data","nameLocation":"3975:4:24","nodeType":"VariableDeclaration","scope":3854,"src":"3962:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3832,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:24"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3854,"src":"3999:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3835,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:24"},"scope":3937,"src":"3916:253:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"4595:424:24","statements":[{"condition":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:24","subExpression":{"id":3866,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"4610:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3891,"nodeType":"Block","src":"4669:344:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3873,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4857:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:24","memberName":"length","nodeType":"MemberAccess","src":"4857:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3877,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"4883:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:24","memberName":"code","nodeType":"MemberAccess","src":"4883:11:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:24","memberName":"length","nodeType":"MemberAccess","src":"4883:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3888,"nodeType":"IfStatement","src":"4853:119:24","trueBody":{"id":3887,"nodeType":"Block","src":"4908:64:24","statements":[{"errorCall":{"arguments":[{"id":3884,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"4950:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3883,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"4933:16:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3886,"nodeType":"RevertStatement","src":"4926:31:24"}]}},{"expression":{"id":3889,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4992:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3865,"id":3890,"nodeType":"Return","src":"4985:17:24"}]},"id":3892,"nodeType":"IfStatement","src":"4605:408:24","trueBody":{"id":3872,"nodeType":"Block","src":"4619:44:24","statements":[{"expression":{"arguments":[{"id":3869,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4641:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3868,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4633:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3871,"nodeType":"ExpressionStatement","src":"4633:19:24"}]}}]},"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"4175:257:24","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:24","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"target","nameLocation":"4490:6:24","nodeType":"VariableDeclaration","scope":3894,"src":"4482:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"success","nameLocation":"4511:7:24","nodeType":"VariableDeclaration","scope":3894,"src":"4506:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3858,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:24","nodeType":"VariableDeclaration","scope":3894,"src":"4528:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3860,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:24"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"4581:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3863,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:24"},"scope":3937,"src":"4437:582:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3915,"nodeType":"Block","src":"5323:122:24","statements":[{"condition":{"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:24","subExpression":{"id":3904,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"5338:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3913,"nodeType":"Block","src":"5397:42:24","statements":[{"expression":{"id":3911,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"5418:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3903,"id":3912,"nodeType":"Return","src":"5411:17:24"}]},"id":3914,"nodeType":"IfStatement","src":"5333:106:24","trueBody":{"id":3910,"nodeType":"Block","src":"5347:44:24","statements":[{"expression":{"arguments":[{"id":3907,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"5369:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3906,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"5361:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3909,"nodeType":"ExpressionStatement","src":"5361:19:24"}]}}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"5025:191:24","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3916,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:24","nodeType":"FunctionDefinition","parameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"success","nameLocation":"5252:7:24","nodeType":"VariableDeclaration","scope":3916,"src":"5247:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3896,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:24","nodeType":"VariableDeclaration","scope":3916,"src":"5261:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3898,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:24"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3916,"src":"5309:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3901,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:24"},"scope":3937,"src":"5221:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3935,"nodeType":"Block","src":"5614:432:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3922,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"5690:10:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:24","memberName":"length","nodeType":"MemberAccess","src":"5690:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3933,"nodeType":"Block","src":"5989:51:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3928,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"6010:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3989_$","typeString":"type(library Errors)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6017:10:24","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3980,"src":"6010:17:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6010:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3932,"nodeType":"RevertStatement","src":"6003:26:24"}]},"id":3934,"nodeType":"IfStatement","src":"5686:354:24","trueBody":{"id":3927,"nodeType":"Block","src":"5713:270:24","statements":[{"AST":{"nativeSrc":"5840:133:24","nodeType":"YulBlock","src":"5840:133:24","statements":[{"nativeSrc":"5858:40:24","nodeType":"YulVariableDeclaration","src":"5858:40:24","value":{"arguments":[{"name":"returndata","nativeSrc":"5887:10:24","nodeType":"YulIdentifier","src":"5887:10:24"}],"functionName":{"name":"mload","nativeSrc":"5881:5:24","nodeType":"YulIdentifier","src":"5881:5:24"},"nativeSrc":"5881:17:24","nodeType":"YulFunctionCall","src":"5881:17:24"},"variables":[{"name":"returndata_size","nativeSrc":"5862:15:24","nodeType":"YulTypedName","src":"5862:15:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5926:2:24","nodeType":"YulLiteral","src":"5926:2:24","type":"","value":"32"},{"name":"returndata","nativeSrc":"5930:10:24","nodeType":"YulIdentifier","src":"5930:10:24"}],"functionName":{"name":"add","nativeSrc":"5922:3:24","nodeType":"YulIdentifier","src":"5922:3:24"},"nativeSrc":"5922:19:24","nodeType":"YulFunctionCall","src":"5922:19:24"},{"name":"returndata_size","nativeSrc":"5943:15:24","nodeType":"YulIdentifier","src":"5943:15:24"}],"functionName":{"name":"revert","nativeSrc":"5915:6:24","nodeType":"YulIdentifier","src":"5915:6:24"},"nativeSrc":"5915:44:24","nodeType":"YulFunctionCall","src":"5915:44:24"},"nativeSrc":"5915:44:24","nodeType":"YulExpressionStatement","src":"5915:44:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3919,"isOffset":false,"isSlot":false,"src":"5887:10:24","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"5930:10:24","valueSize":1}],"flags":["memory-safe"],"id":3926,"nodeType":"InlineAssembly","src":"5815:158:24"}]}}]},"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"5451:103:24","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3936,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:24","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:24","nodeType":"VariableDeclaration","scope":3936,"src":"5576:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3918,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:24"},"returnParameters":{"id":3921,"nodeType":"ParameterList","parameters":[],"src":"5614:0:24"},"scope":3937,"src":"5559:487:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3938,"src":"233:5815:24","usedErrors":[3687],"usedEvents":[]}],"src":"101:5948:24"},"id":24},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3967]},"id":3968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3939,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:25"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"127:496:25","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3967,"linearizedBaseContracts":[3967],"name":"Context","nameLocation":"642:7:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":3948,"nodeType":"Block","src":"718:34:25","statements":[{"expression":{"expression":{"id":3945,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:25","memberName":"sender","nodeType":"MemberAccess","src":"735:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3944,"id":3947,"nodeType":"Return","src":"728:17:25"}]},"id":3949,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:25","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[],"src":"675:2:25"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3949,"src":"709:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:25"},"scope":3967,"src":"656:96:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"825:32:25","statements":[{"expression":{"expression":{"id":3954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:25","memberName":"data","nodeType":"MemberAccess","src":"842:8:25","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3953,"id":3956,"nodeType":"Return","src":"835:15:25"}]},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:25","nodeType":"FunctionDefinition","parameters":{"id":3950,"nodeType":"ParameterList","parameters":[],"src":"775:2:25"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"809:14:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3951,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:25"},"scope":3967,"src":"758:99:25","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3965,"nodeType":"Block","src":"935:25:25","statements":[{"expression":{"hexValue":"30","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3962,"id":3964,"nodeType":"Return","src":"945:8:25"}]},"id":3966,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:25","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[],"src":"892:2:25"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3966,"src":"926:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:25"},"scope":3967,"src":"863:97:25","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3968,"src":"624:338:25","usedErrors":[],"usedEvents":[]}],"src":"101:862:25"},"id":25},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3989]},"id":3990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3969,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3970,"nodeType":"StructuredDocumentation","src":"126:284:26","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3989,"linearizedBaseContracts":[3989],"name":"Errors","nameLocation":"419:6:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3971,"nodeType":"StructuredDocumentation","src":"432:94:26","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3977,"name":"InsufficientBalance","nameLocation":"537:19:26","nodeType":"ErrorDefinition","parameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"balance","nameLocation":"565:7:26","nodeType":"VariableDeclaration","scope":3977,"src":"557:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"needed","nameLocation":"582:6:26","nodeType":"VariableDeclaration","scope":3977,"src":"574:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:26"},"src":"531:59:26"},{"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"596:89:26","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3980,"name":"FailedCall","nameLocation":"696:10:26","nodeType":"ErrorDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[],"src":"706:2:26"},"src":"690:19:26"},{"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"715:46:26","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3983,"name":"FailedDeployment","nameLocation":"772:16:26","nodeType":"ErrorDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[],"src":"788:2:26"},"src":"766:25:26"},{"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"797:58:26","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3988,"name":"MissingPrecompile","nameLocation":"866:17:26","nodeType":"ErrorDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"884:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3985,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:26"},"src":"860:33:26"}],"scope":3990,"src":"411:484:26","usedErrors":[3977,3980,3983,3988],"usedEvents":[]}],"src":"100:796:26"},"id":26},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4041]},"id":4042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3991,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"125:489:27","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4041,"linearizedBaseContracts":[4041],"name":"Panic","nameLocation":"665:5:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"677:36:27","text":"@dev generic / unspecified error"},"id":3996,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:27","nodeType":"VariableDeclaration","scope":4041,"src":"718:40:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3997,"nodeType":"StructuredDocumentation","src":"764:37:27","text":"@dev used by the assert() builtin"},"id":4000,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:27","nodeType":"VariableDeclaration","scope":4041,"src":"806:39:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"851:41:27","text":"@dev arithmetic underflow or overflow"},"id":4004,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:27","nodeType":"VariableDeclaration","scope":4041,"src":"897:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:27","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"950:35:27","text":"@dev division or modulo by zero"},"id":4008,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:27","nodeType":"VariableDeclaration","scope":4041,"src":"990:49:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4009,"nodeType":"StructuredDocumentation","src":"1045:30:27","text":"@dev enum conversion error"},"id":4012,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:27","nodeType":"VariableDeclaration","scope":4041,"src":"1080:54:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:27","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"1140:36:27","text":"@dev invalid encoding in storage"},"id":4016,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:27","nodeType":"VariableDeclaration","scope":4041,"src":"1181:55:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:27","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"1242:24:27","text":"@dev empty array pop"},"id":4020,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:27","nodeType":"VariableDeclaration","scope":4041,"src":"1271:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:27","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"1325:35:27","text":"@dev array out of bounds access"},"id":4024,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:27","nodeType":"VariableDeclaration","scope":4041,"src":"1365:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:27","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"1423:65:27","text":"@dev resource error (too large allocation or too large array)"},"id":4028,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:27","nodeType":"VariableDeclaration","scope":4041,"src":"1493:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:27","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"1546:42:27","text":"@dev calling invalid internal function"},"id":4032,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:27","nodeType":"VariableDeclaration","scope":4041,"src":"1593:58:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:27","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"1819:151:27","statements":[{"AST":{"nativeSrc":"1854:110:27","nodeType":"YulBlock","src":"1854:110:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:27","nodeType":"YulLiteral","src":"1875:4:27","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:27","nodeType":"YulLiteral","src":"1881:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:27","nodeType":"YulIdentifier","src":"1868:6:27"},"nativeSrc":"1868:24:27","nodeType":"YulFunctionCall","src":"1868:24:27"},"nativeSrc":"1868:24:27","nodeType":"YulExpressionStatement","src":"1868:24:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:27","nodeType":"YulLiteral","src":"1912:4:27","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:27","nodeType":"YulIdentifier","src":"1918:4:27"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:27","nodeType":"YulIdentifier","src":"1905:6:27"},"nativeSrc":"1905:18:27","nodeType":"YulFunctionCall","src":"1905:18:27"},"nativeSrc":"1905:18:27","nodeType":"YulExpressionStatement","src":"1905:18:27"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:27","nodeType":"YulLiteral","src":"1943:4:27","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:27","nodeType":"YulLiteral","src":"1949:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:27","nodeType":"YulIdentifier","src":"1936:6:27"},"nativeSrc":"1936:18:27","nodeType":"YulFunctionCall","src":"1936:18:27"},"nativeSrc":"1936:18:27","nodeType":"YulExpressionStatement","src":"1936:18:27"}]},"evmVersion":"paris","externalReferences":[{"declaration":4035,"isOffset":false,"isSlot":false,"src":"1918:4:27","valueSize":1}],"flags":["memory-safe"],"id":4038,"nodeType":"InlineAssembly","src":"1829:135:27"}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"1658:113:27","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:27","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"code","nameLocation":"1799:4:27","nodeType":"VariableDeclaration","scope":4040,"src":"1791:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:27"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[],"src":"1819:0:27"},"scope":4041,"src":"1776:194:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4042,"src":"657:1315:27","usedErrors":[],"usedEvents":[]}],"src":"99:1874:27"},"id":27},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4165]},"id":4166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4043,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4044,"nodeType":"StructuredDocumentation","src":"219:1187:28","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4165,"linearizedBaseContracts":[4165],"name":"StorageSlot","nameLocation":"1415:11:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4047,"members":[{"constant":false,"id":4046,"mutability":"mutable","name":"value","nameLocation":"1470:5:28","nodeType":"VariableDeclaration","scope":4047,"src":"1462:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:28","nodeType":"StructDefinition","scope":4165,"src":"1433:49:28","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4050,"members":[{"constant":false,"id":4049,"mutability":"mutable","name":"value","nameLocation":"1522:5:28","nodeType":"VariableDeclaration","scope":4050,"src":"1517:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4048,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:28","nodeType":"StructDefinition","scope":4165,"src":"1488:46:28","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4053,"members":[{"constant":false,"id":4052,"mutability":"mutable","name":"value","nameLocation":"1577:5:28","nodeType":"VariableDeclaration","scope":4053,"src":"1569:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:28","nodeType":"StructDefinition","scope":4165,"src":"1540:49:28","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4056,"members":[{"constant":false,"id":4055,"mutability":"mutable","name":"value","nameLocation":"1632:5:28","nodeType":"VariableDeclaration","scope":4056,"src":"1624:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:28","nodeType":"StructDefinition","scope":4165,"src":"1595:49:28","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4059,"members":[{"constant":false,"id":4058,"mutability":"mutable","name":"value","nameLocation":"1685:5:28","nodeType":"VariableDeclaration","scope":4059,"src":"1678:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4057,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:28","nodeType":"StructDefinition","scope":4165,"src":"1650:47:28","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4062,"members":[{"constant":false,"id":4061,"mutability":"mutable","name":"value","nameLocation":"1738:5:28","nodeType":"VariableDeclaration","scope":4062,"src":"1731:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4060,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:28","nodeType":"StructDefinition","scope":4165,"src":"1703:47:28","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4065,"members":[{"constant":false,"id":4064,"mutability":"mutable","name":"value","nameLocation":"1789:5:28","nodeType":"VariableDeclaration","scope":4065,"src":"1783:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4063,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:28","nodeType":"StructDefinition","scope":4165,"src":"1756:45:28","visibility":"public"},{"body":{"id":4075,"nodeType":"Block","src":"1983:79:28","statements":[{"AST":{"nativeSrc":"2018:38:28","nodeType":"YulBlock","src":"2018:38:28","statements":[{"nativeSrc":"2032:14:28","nodeType":"YulAssignment","src":"2032:14:28","value":{"name":"slot","nativeSrc":"2042:4:28","nodeType":"YulIdentifier","src":"2042:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:28","nodeType":"YulIdentifier","src":"2032:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4072,"isOffset":false,"isSlot":true,"src":"2032:6:28","suffix":"slot","valueSize":1},{"declaration":4068,"isOffset":false,"isSlot":false,"src":"2042:4:28","valueSize":1}],"flags":["memory-safe"],"id":4074,"nodeType":"InlineAssembly","src":"1993:63:28"}]},"documentation":{"id":4066,"nodeType":"StructuredDocumentation","src":"1807:87:28","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4076,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:28","nodeType":"FunctionDefinition","parameters":{"id":4069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"slot","nameLocation":"1931:4:28","nodeType":"VariableDeclaration","scope":4076,"src":"1923:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:28"},"returnParameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"r","nameLocation":"1980:1:28","nodeType":"VariableDeclaration","scope":4076,"src":"1960:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4071,"nodeType":"UserDefinedTypeName","pathNode":{"id":4070,"name":"AddressSlot","nameLocations":["1960:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":4047,"src":"1960:11:28"},"referencedDeclaration":4047,"src":"1960:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4047_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:28"},"scope":4165,"src":"1899:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4086,"nodeType":"Block","src":"2243:79:28","statements":[{"AST":{"nativeSrc":"2278:38:28","nodeType":"YulBlock","src":"2278:38:28","statements":[{"nativeSrc":"2292:14:28","nodeType":"YulAssignment","src":"2292:14:28","value":{"name":"slot","nativeSrc":"2302:4:28","nodeType":"YulIdentifier","src":"2302:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:28","nodeType":"YulIdentifier","src":"2292:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4083,"isOffset":false,"isSlot":true,"src":"2292:6:28","suffix":"slot","valueSize":1},{"declaration":4079,"isOffset":false,"isSlot":false,"src":"2302:4:28","valueSize":1}],"flags":["memory-safe"],"id":4085,"nodeType":"InlineAssembly","src":"2253:63:28"}]},"documentation":{"id":4077,"nodeType":"StructuredDocumentation","src":"2068:86:28","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:28","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"slot","nameLocation":"2191:4:28","nodeType":"VariableDeclaration","scope":4087,"src":"2183:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:28"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"r","nameLocation":"2240:1:28","nodeType":"VariableDeclaration","scope":4087,"src":"2220:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4050_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4082,"nodeType":"UserDefinedTypeName","pathNode":{"id":4081,"name":"BooleanSlot","nameLocations":["2220:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":4050,"src":"2220:11:28"},"referencedDeclaration":4050,"src":"2220:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4050_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:28"},"scope":4165,"src":"2159:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"2503:79:28","statements":[{"AST":{"nativeSrc":"2538:38:28","nodeType":"YulBlock","src":"2538:38:28","statements":[{"nativeSrc":"2552:14:28","nodeType":"YulAssignment","src":"2552:14:28","value":{"name":"slot","nativeSrc":"2562:4:28","nodeType":"YulIdentifier","src":"2562:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:28","nodeType":"YulIdentifier","src":"2552:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4094,"isOffset":false,"isSlot":true,"src":"2552:6:28","suffix":"slot","valueSize":1},{"declaration":4090,"isOffset":false,"isSlot":false,"src":"2562:4:28","valueSize":1}],"flags":["memory-safe"],"id":4096,"nodeType":"InlineAssembly","src":"2513:63:28"}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"2328:86:28","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:28","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"slot","nameLocation":"2451:4:28","nodeType":"VariableDeclaration","scope":4098,"src":"2443:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:28"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"r","nameLocation":"2500:1:28","nodeType":"VariableDeclaration","scope":4098,"src":"2480:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4053_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4093,"nodeType":"UserDefinedTypeName","pathNode":{"id":4092,"name":"Bytes32Slot","nameLocations":["2480:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":4053,"src":"2480:11:28"},"referencedDeclaration":4053,"src":"2480:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4053_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:28"},"scope":4165,"src":"2419:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4108,"nodeType":"Block","src":"2763:79:28","statements":[{"AST":{"nativeSrc":"2798:38:28","nodeType":"YulBlock","src":"2798:38:28","statements":[{"nativeSrc":"2812:14:28","nodeType":"YulAssignment","src":"2812:14:28","value":{"name":"slot","nativeSrc":"2822:4:28","nodeType":"YulIdentifier","src":"2822:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:28","nodeType":"YulIdentifier","src":"2812:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4105,"isOffset":false,"isSlot":true,"src":"2812:6:28","suffix":"slot","valueSize":1},{"declaration":4101,"isOffset":false,"isSlot":false,"src":"2822:4:28","valueSize":1}],"flags":["memory-safe"],"id":4107,"nodeType":"InlineAssembly","src":"2773:63:28"}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"2588:86:28","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4109,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:28","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"slot","nameLocation":"2711:4:28","nodeType":"VariableDeclaration","scope":4109,"src":"2703:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:28"},"returnParameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"r","nameLocation":"2760:1:28","nodeType":"VariableDeclaration","scope":4109,"src":"2740:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4056_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4104,"nodeType":"UserDefinedTypeName","pathNode":{"id":4103,"name":"Uint256Slot","nameLocations":["2740:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":4056,"src":"2740:11:28"},"referencedDeclaration":4056,"src":"2740:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4056_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:28"},"scope":4165,"src":"2679:163:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"3020:79:28","statements":[{"AST":{"nativeSrc":"3055:38:28","nodeType":"YulBlock","src":"3055:38:28","statements":[{"nativeSrc":"3069:14:28","nodeType":"YulAssignment","src":"3069:14:28","value":{"name":"slot","nativeSrc":"3079:4:28","nodeType":"YulIdentifier","src":"3079:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:28","nodeType":"YulIdentifier","src":"3069:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4116,"isOffset":false,"isSlot":true,"src":"3069:6:28","suffix":"slot","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"3079:4:28","valueSize":1}],"flags":["memory-safe"],"id":4118,"nodeType":"InlineAssembly","src":"3030:63:28"}]},"documentation":{"id":4110,"nodeType":"StructuredDocumentation","src":"2848:85:28","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:28","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"slot","nameLocation":"2969:4:28","nodeType":"VariableDeclaration","scope":4120,"src":"2961:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:28"},"returnParameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"r","nameLocation":"3017:1:28","nodeType":"VariableDeclaration","scope":4120,"src":"2998:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4059_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4115,"nodeType":"UserDefinedTypeName","pathNode":{"id":4114,"name":"Int256Slot","nameLocations":["2998:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"2998:10:28"},"referencedDeclaration":4059,"src":"2998:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4059_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:28"},"scope":4165,"src":"2938:161:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"3277:79:28","statements":[{"AST":{"nativeSrc":"3312:38:28","nodeType":"YulBlock","src":"3312:38:28","statements":[{"nativeSrc":"3326:14:28","nodeType":"YulAssignment","src":"3326:14:28","value":{"name":"slot","nativeSrc":"3336:4:28","nodeType":"YulIdentifier","src":"3336:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:28","nodeType":"YulIdentifier","src":"3326:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4127,"isOffset":false,"isSlot":true,"src":"3326:6:28","suffix":"slot","valueSize":1},{"declaration":4123,"isOffset":false,"isSlot":false,"src":"3336:4:28","valueSize":1}],"flags":["memory-safe"],"id":4129,"nodeType":"InlineAssembly","src":"3287:63:28"}]},"documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"3105:85:28","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:28","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"slot","nameLocation":"3226:4:28","nodeType":"VariableDeclaration","scope":4131,"src":"3218:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:28"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"r","nameLocation":"3274:1:28","nodeType":"VariableDeclaration","scope":4131,"src":"3255:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4062_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4126,"nodeType":"UserDefinedTypeName","pathNode":{"id":4125,"name":"StringSlot","nameLocations":["3255:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":4062,"src":"3255:10:28"},"referencedDeclaration":4062,"src":"3255:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4062_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:28"},"scope":4165,"src":"3195:161:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4141,"nodeType":"Block","src":"3558:85:28","statements":[{"AST":{"nativeSrc":"3593:44:28","nodeType":"YulBlock","src":"3593:44:28","statements":[{"nativeSrc":"3607:20:28","nodeType":"YulAssignment","src":"3607:20:28","value":{"name":"store.slot","nativeSrc":"3617:10:28","nodeType":"YulIdentifier","src":"3617:10:28"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:28","nodeType":"YulIdentifier","src":"3607:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4138,"isOffset":false,"isSlot":true,"src":"3607:6:28","suffix":"slot","valueSize":1},{"declaration":4134,"isOffset":false,"isSlot":true,"src":"3617:10:28","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4140,"nodeType":"InlineAssembly","src":"3568:69:28"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"3362:101:28","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4142,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:28","nodeType":"FunctionDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"store","nameLocation":"3506:5:28","nodeType":"VariableDeclaration","scope":4142,"src":"3491:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4133,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:28"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"r","nameLocation":"3555:1:28","nodeType":"VariableDeclaration","scope":4142,"src":"3536:20:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4062_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4137,"nodeType":"UserDefinedTypeName","pathNode":{"id":4136,"name":"StringSlot","nameLocations":["3536:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":4062,"src":"3536:10:28"},"referencedDeclaration":4062,"src":"3536:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4062_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:28"},"scope":4165,"src":"3468:175:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4152,"nodeType":"Block","src":"3818:79:28","statements":[{"AST":{"nativeSrc":"3853:38:28","nodeType":"YulBlock","src":"3853:38:28","statements":[{"nativeSrc":"3867:14:28","nodeType":"YulAssignment","src":"3867:14:28","value":{"name":"slot","nativeSrc":"3877:4:28","nodeType":"YulIdentifier","src":"3877:4:28"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:28","nodeType":"YulIdentifier","src":"3867:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4149,"isOffset":false,"isSlot":true,"src":"3867:6:28","suffix":"slot","valueSize":1},{"declaration":4145,"isOffset":false,"isSlot":false,"src":"3877:4:28","valueSize":1}],"flags":["memory-safe"],"id":4151,"nodeType":"InlineAssembly","src":"3828:63:28"}]},"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"3649:84:28","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4153,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:28","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"slot","nameLocation":"3768:4:28","nodeType":"VariableDeclaration","scope":4153,"src":"3760:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:28"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"r","nameLocation":"3815:1:28","nodeType":"VariableDeclaration","scope":4153,"src":"3797:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4148,"nodeType":"UserDefinedTypeName","pathNode":{"id":4147,"name":"BytesSlot","nameLocations":["3797:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":4065,"src":"3797:9:28"},"referencedDeclaration":4065,"src":"3797:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:28"},"scope":4165,"src":"3738:159:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4163,"nodeType":"Block","src":"4094:85:28","statements":[{"AST":{"nativeSrc":"4129:44:28","nodeType":"YulBlock","src":"4129:44:28","statements":[{"nativeSrc":"4143:20:28","nodeType":"YulAssignment","src":"4143:20:28","value":{"name":"store.slot","nativeSrc":"4153:10:28","nodeType":"YulIdentifier","src":"4153:10:28"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:28","nodeType":"YulIdentifier","src":"4143:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4160,"isOffset":false,"isSlot":true,"src":"4143:6:28","suffix":"slot","valueSize":1},{"declaration":4156,"isOffset":false,"isSlot":true,"src":"4153:10:28","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4162,"nodeType":"InlineAssembly","src":"4104:69:28"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"3903:99:28","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:28","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"store","nameLocation":"4043:5:28","nodeType":"VariableDeclaration","scope":4164,"src":"4029:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4155,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:28"},"returnParameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"r","nameLocation":"4091:1:28","nodeType":"VariableDeclaration","scope":4164,"src":"4073:19:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4159,"nodeType":"UserDefinedTypeName","pathNode":{"id":4158,"name":"BytesSlot","nameLocations":["4073:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":4065,"src":"4073:9:28"},"referencedDeclaration":4065,"src":"4073:9:28","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4065_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:28"},"scope":4165,"src":"4007:172:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4166,"src":"1407:2774:28","usedErrors":[],"usedEvents":[]}],"src":"193:3989:28"},"id":28},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7224],"SafeCast":[8989],"SignedMath":[9133],"Strings":[5567]},"id":5568,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4167,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5568,"sourceUnit":7225,"src":"127:37:29","symbolAliases":[{"foreign":{"id":4168,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"135:4:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5568,"sourceUnit":8990,"src":"165:45:29","symbolAliases":[{"foreign":{"id":4170,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"173:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5568,"sourceUnit":9134,"src":"211:49:29","symbolAliases":[{"foreign":{"id":4172,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"219:10:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"262:34:29","text":" @dev String operations."},"fullyImplemented":true,"id":5567,"linearizedBaseContracts":[5567],"name":"Strings","nameLocation":"305:7:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4176,"libraryName":{"id":4175,"name":"SafeCast","nameLocations":["325:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8989,"src":"325:8:29"},"nodeType":"UsingForDirective","src":"319:21:29"},{"constant":true,"id":4179,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:29","nodeType":"VariableDeclaration","scope":5567,"src":"346:56:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4177,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:29","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4182,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:29","nodeType":"VariableDeclaration","scope":5567,"src":"408:42:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4180,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:29","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4218,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:29","nodeType":"VariableDeclaration","scope":5567,"src":"456:302:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:29","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:29","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:29","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:29","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:29","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:29","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:29","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:29","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:29","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:29","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:29","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:29","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:29","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:29","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:29","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:29","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:29","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:29","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:29","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:29","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:29","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:29","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:29","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"778:81:29","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4225,"name":"StringsInsufficientHexLength","nameLocation":"870:28:29","nodeType":"ErrorDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"value","nameLocation":"907:5:29","nodeType":"VariableDeclaration","scope":4225,"src":"899:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"length","nameLocation":"922:6:29","nodeType":"VariableDeclaration","scope":4225,"src":"914:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:29"},"src":"864:66:29"},{"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"936:108:29","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4228,"name":"StringsInvalidChar","nameLocation":"1055:18:29","nodeType":"ErrorDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[],"src":"1073:2:29"},"src":"1049:27:29"},{"documentation":{"id":4229,"nodeType":"StructuredDocumentation","src":"1082:84:29","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4231,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:29","nodeType":"ErrorDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[],"src":"1204:2:29"},"src":"1171:36:29"},{"body":{"id":4278,"nodeType":"Block","src":"1379:561:29","statements":[{"id":4277,"nodeType":"UncheckedBlock","src":"1389:545:29","statements":[{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"length","nameLocation":"1421:6:29","nodeType":"VariableDeclaration","scope":4277,"src":"1413:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4247,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"1441:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4241,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"1430:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7224_$","typeString":"type(library Math)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:29","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7056,"src":"1430:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:29"},{"assignments":[4249],"declarations":[{"constant":false,"id":4249,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:29","nodeType":"VariableDeclaration","scope":4277,"src":"1465:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4248,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4254,"initialValue":{"arguments":[{"id":4252,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"1499:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4250,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:29"},{"assignments":[4256],"declarations":[{"constant":false,"id":4256,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:29","nodeType":"VariableDeclaration","scope":4277,"src":"1520:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4257,"nodeType":"VariableDeclarationStatement","src":"1520:11:29"},{"AST":{"nativeSrc":"1570:67:29","nodeType":"YulBlock","src":"1570:67:29","statements":[{"nativeSrc":"1588:35:29","nodeType":"YulAssignment","src":"1588:35:29","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:29","nodeType":"YulIdentifier","src":"1599:6:29"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:29","nodeType":"YulLiteral","src":"1611:2:29","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:29","nodeType":"YulIdentifier","src":"1615:6:29"}],"functionName":{"name":"add","nativeSrc":"1607:3:29","nodeType":"YulIdentifier","src":"1607:3:29"},"nativeSrc":"1607:15:29","nodeType":"YulFunctionCall","src":"1607:15:29"}],"functionName":{"name":"add","nativeSrc":"1595:3:29","nodeType":"YulIdentifier","src":"1595:3:29"},"nativeSrc":"1595:28:29","nodeType":"YulFunctionCall","src":"1595:28:29"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:29","nodeType":"YulIdentifier","src":"1588:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4249,"isOffset":false,"isSlot":false,"src":"1599:6:29","valueSize":1},{"declaration":4240,"isOffset":false,"isSlot":false,"src":"1615:6:29","valueSize":1},{"declaration":4256,"isOffset":false,"isSlot":false,"src":"1588:3:29","valueSize":1}],"flags":["memory-safe"],"id":4258,"nodeType":"InlineAssembly","src":"1545:92:29"},{"body":{"id":4273,"nodeType":"Block","src":"1663:234:29","statements":[{"expression":{"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:29","subExpression":{"id":4260,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"1681:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4262,"nodeType":"ExpressionStatement","src":"1681:5:29"},{"AST":{"nativeSrc":"1729:86:29","nodeType":"YulBlock","src":"1729:86:29","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:29","nodeType":"YulIdentifier","src":"1759:3:29"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:29","nodeType":"YulIdentifier","src":"1773:5:29"},{"kind":"number","nativeSrc":"1780:2:29","nodeType":"YulLiteral","src":"1780:2:29","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:29","nodeType":"YulIdentifier","src":"1769:3:29"},"nativeSrc":"1769:14:29","nodeType":"YulFunctionCall","src":"1769:14:29"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:29","nodeType":"YulIdentifier","src":"1785:10:29"}],"functionName":{"name":"byte","nativeSrc":"1764:4:29","nodeType":"YulIdentifier","src":"1764:4:29"},"nativeSrc":"1764:32:29","nodeType":"YulFunctionCall","src":"1764:32:29"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:29","nodeType":"YulIdentifier","src":"1751:7:29"},"nativeSrc":"1751:46:29","nodeType":"YulFunctionCall","src":"1751:46:29"},"nativeSrc":"1751:46:29","nodeType":"YulExpressionStatement","src":"1751:46:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":4179,"isOffset":false,"isSlot":false,"src":"1785:10:29","valueSize":1},{"declaration":4256,"isOffset":false,"isSlot":false,"src":"1759:3:29","valueSize":1},{"declaration":4234,"isOffset":false,"isSlot":false,"src":"1773:5:29","valueSize":1}],"flags":["memory-safe"],"id":4263,"nodeType":"InlineAssembly","src":"1704:111:29"},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"1832:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"1832:11:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"1865:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4272,"nodeType":"IfStatement","src":"1861:21:29","trueBody":{"id":4271,"nodeType":"Break","src":"1877:5:29"}}]},"condition":{"hexValue":"74727565","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4274,"nodeType":"WhileStatement","src":"1650:247:29"},{"expression":{"id":4275,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"1917:6:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4238,"id":4276,"nodeType":"Return","src":"1910:13:29"}]}]},"documentation":{"id":4232,"nodeType":"StructuredDocumentation","src":"1213:90:29","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:29","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"value","nameLocation":"1334:5:29","nodeType":"VariableDeclaration","scope":4279,"src":"1326:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:29"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4279,"src":"1364:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4236,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:29"},"scope":5567,"src":"1308:632:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4304,"nodeType":"Block","src":"2116:92:29","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"2147:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:29","trueExpression":{"hexValue":"2d","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"2193:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4297,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9133,"src":"2178:10:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9133_$","typeString":"type(library SignedMath)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:29","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9132,"src":"2178:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4296,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2169:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4287,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:29","typeDescriptions":{}}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:29","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:29","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4286,"id":4303,"nodeType":"Return","src":"2126:75:29"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"1946:89:29","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4305,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:29","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"value","nameLocation":"2071:5:29","nodeType":"VariableDeclaration","scope":4305,"src":"2064:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4281,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:29"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4305,"src":"2101:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4284,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:29"},"scope":5567,"src":"2040:168:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4324,"nodeType":"Block","src":"2387:100:29","statements":[{"id":4323,"nodeType":"UncheckedBlock","src":"2397:84:29","statements":[{"expression":{"arguments":[{"id":4314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"2440:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"2459:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4315,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"2447:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7224_$","typeString":"type(library Math)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:29","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"2447:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4313,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4325,4408,4428],"referencedDeclaration":4408,"src":"2428:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4312,"id":4322,"nodeType":"Return","src":"2421:49:29"}]}]},"documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"2214:94:29","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4325,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:29","nodeType":"FunctionDefinition","parameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"value","nameLocation":"2342:5:29","nodeType":"VariableDeclaration","scope":4325,"src":"2334:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:29"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4325,"src":"2372:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4310,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:29"},"scope":5567,"src":"2313:174:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"2700:435:29","statements":[{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:29","nodeType":"VariableDeclaration","scope":4407,"src":"2710:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4338,"initialValue":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"2731:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:29"},{"assignments":[4340],"declarations":[{"constant":false,"id":4340,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:29","nodeType":"VariableDeclaration","scope":4407,"src":"2746:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4339,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4349,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4344,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"2782:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4341,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:29"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4350,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"2803:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4352,"indexExpression":{"hexValue":"30","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4355,"nodeType":"ExpressionStatement","src":"2803:15:29"},{"expression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4356,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"2828:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4358,"indexExpression":{"hexValue":"31","id":4357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4361,"nodeType":"ExpressionStatement","src":"2828:15:29"},{"body":{"id":4390,"nodeType":"Block","src":"2898:95:29","statements":[{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4376,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"2912:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4378,"indexExpression":{"id":4377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2919:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4379,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"2924:10:29","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4383,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"2935:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4385,"nodeType":"ExpressionStatement","src":"2912:40:29"},{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"2966:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4389,"nodeType":"ExpressionStatement","src":"2966:16:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2886:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4391,"initializationExpression":{"assignments":[4363],"declarations":[{"constant":false,"id":4363,"mutability":"mutable","name":"i","nameLocation":"2866:1:29","nodeType":"VariableDeclaration","scope":4391,"src":"2858:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4369,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4365,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"2874:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:29"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:29","subExpression":{"id":4373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2895:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"2893:3:29"},"nodeType":"ForStatement","src":"2853:140:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"3006:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"nodeType":"IfStatement","src":"3002:96:29","trueBody":{"id":4400,"nodeType":"Block","src":"3023:75:29","statements":[{"errorCall":{"arguments":[{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"3073:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4397,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"3080:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"3044:28:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"RevertStatement","src":"3037:50:29"}]}},{"expression":{"arguments":[{"id":4404,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"3121:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4402,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:29","typeDescriptions":{}}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4334,"id":4406,"nodeType":"Return","src":"3107:21:29"}]},"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"2493:112:29","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4408,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:29","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"value","nameLocation":"2639:5:29","nodeType":"VariableDeclaration","scope":4408,"src":"2631:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"length","nameLocation":"2654:6:29","nodeType":"VariableDeclaration","scope":4408,"src":"2646:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:29"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4408,"src":"2685:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4332,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:29"},"scope":5567,"src":"2610:525:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4427,"nodeType":"Block","src":"3367:75:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4421,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"3412:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4419,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:29","typeDescriptions":{}}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:29","typeDescriptions":{}}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4424,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"3420:14:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4416,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4325,4408,4428],"referencedDeclaration":4408,"src":"3384:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4415,"id":4426,"nodeType":"Return","src":"3377:58:29"}]},"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"3141:148:29","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4428,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:29","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"addr","nameLocation":"3323:4:29","nodeType":"VariableDeclaration","scope":4428,"src":"3315:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4410,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:29"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4428,"src":"3352:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4413,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:29"},"scope":5567,"src":"3294:148:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4492,"nodeType":"Block","src":"3699:642:29","statements":[{"assignments":[4437],"declarations":[{"constant":false,"id":4437,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:29","nodeType":"VariableDeclaration","scope":4492,"src":"3709:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4436,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4444,"initialValue":{"arguments":[{"arguments":[{"id":4441,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"3749:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4440,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4325,4408,4428],"referencedDeclaration":4428,"src":"3737:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4438,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:29","typeDescriptions":{}}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:29"},{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:29","nodeType":"VariableDeclaration","scope":4492,"src":"3840:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4447,"nodeType":"VariableDeclarationStatement","src":"3840:17:29"},{"AST":{"nativeSrc":"3892:78:29","nodeType":"YulBlock","src":"3892:78:29","statements":[{"nativeSrc":"3906:54:29","nodeType":"YulAssignment","src":"3906:54:29","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:29","nodeType":"YulLiteral","src":"3923:2:29","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:29","nodeType":"YulIdentifier","src":"3941:6:29"},{"kind":"number","nativeSrc":"3949:4:29","nodeType":"YulLiteral","src":"3949:4:29","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:29","nodeType":"YulIdentifier","src":"3937:3:29"},"nativeSrc":"3937:17:29","nodeType":"YulFunctionCall","src":"3937:17:29"},{"kind":"number","nativeSrc":"3956:2:29","nodeType":"YulLiteral","src":"3956:2:29","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:29","nodeType":"YulIdentifier","src":"3927:9:29"},"nativeSrc":"3927:32:29","nodeType":"YulFunctionCall","src":"3927:32:29"}],"functionName":{"name":"shr","nativeSrc":"3919:3:29","nodeType":"YulIdentifier","src":"3919:3:29"},"nativeSrc":"3919:41:29","nodeType":"YulFunctionCall","src":"3919:41:29"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:29","nodeType":"YulIdentifier","src":"3906:9:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4437,"isOffset":false,"isSlot":false,"src":"3941:6:29","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"3906:9:29","valueSize":1}],"flags":["memory-safe"],"id":4448,"nodeType":"InlineAssembly","src":"3867:103:29"},{"body":{"id":4485,"nodeType":"Block","src":"4013:291:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4119:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:29","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4466,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"4148:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4468,"indexExpression":{"id":4467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4155:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4464,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:29","typeDescriptions":{}}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4480,"nodeType":"IfStatement","src":"4115:150:29","trueBody":{"id":4479,"nodeType":"Block","src":"4165:100:29","statements":[{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4473,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"4233:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4475,"indexExpression":{"id":4474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4240:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4478,"nodeType":"ExpressionStatement","src":"4233:17:29"}]}},{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4481,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4278:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4484,"nodeType":"ExpressionStatement","src":"4278:15:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4001:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"initializationExpression":{"assignments":[4450],"declarations":[{"constant":false,"id":4450,"mutability":"mutable","name":"i","nameLocation":"3993:1:29","nodeType":"VariableDeclaration","scope":4486,"src":"3985:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4452,"initialValue":{"hexValue":"3431","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:29","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:29"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:29","subExpression":{"id":4456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4010:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"4008:3:29"},"nodeType":"ForStatement","src":"3980:324:29"},{"expression":{"arguments":[{"id":4489,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"4327:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4487,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:29","typeDescriptions":{}}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4435,"id":4491,"nodeType":"Return","src":"4313:21:29"}]},"documentation":{"id":4429,"nodeType":"StructuredDocumentation","src":"3448:165:29","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:29","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"mutability":"mutable","name":"addr","nameLocation":"3655:4:29","nodeType":"VariableDeclaration","scope":4493,"src":"3647:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4430,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:29"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"3684:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4433,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:29"},"scope":5567,"src":"3618:723:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4529,"nodeType":"Block","src":"4496:104:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"4519:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4503,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:29","typeDescriptions":{}}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:29","memberName":"length","nodeType":"MemberAccess","src":"4513:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4538:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4508,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:29","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:29","memberName":"length","nodeType":"MemberAccess","src":"4532:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"4567:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4515,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:29","typeDescriptions":{}}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4514,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4523,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4590:1:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4521,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:29","typeDescriptions":{}}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4520,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4502,"id":4528,"nodeType":"Return","src":"4506:87:29"}]},"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"4347:66:29","text":" @dev Returns true if the two strings are equal."},"id":4530,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:29","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"a","nameLocation":"4447:1:29","nodeType":"VariableDeclaration","scope":4530,"src":"4433:15:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4495,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"b","nameLocation":"4464:1:29","nodeType":"VariableDeclaration","scope":4530,"src":"4450:15:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4497,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:29"},"returnParameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4530,"src":"4490:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4500,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:29"},"scope":5567,"src":"4418:182:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4548,"nodeType":"Block","src":"4897:64:29","statements":[{"expression":{"arguments":[{"id":4539,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"4924:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4543,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"4940:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4541,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:29","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:29","memberName":"length","nodeType":"MemberAccess","src":"4934:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4538,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4549,4580],"referencedDeclaration":4580,"src":"4914:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4537,"id":4547,"nodeType":"Return","src":"4907:47:29"}]},"documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"4606:214:29","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:29","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"input","nameLocation":"4858:5:29","nodeType":"VariableDeclaration","scope":4549,"src":"4844:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4532,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:29"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4549,"src":"4888:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:29"},"scope":5567,"src":"4825:136:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4579,"nodeType":"Block","src":"5366:153:29","statements":[{"assignments":[4562,4564],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"success","nameLocation":"5382:7:29","nodeType":"VariableDeclaration","scope":4579,"src":"5377:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4561,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"value","nameLocation":"5399:5:29","nodeType":"VariableDeclaration","scope":4579,"src":"5391:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4570,"initialValue":{"arguments":[{"id":4566,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"5421:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4567,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"5428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4568,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"5435:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4565,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4601,4638],"referencedDeclaration":4638,"src":"5408:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:29"},{"condition":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:29","subExpression":{"id":4571,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5454:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4576,"nodeType":"IfStatement","src":"5449:41:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4573,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"5470:18:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4575,"nodeType":"RevertStatement","src":"5463:27:29"}},{"expression":{"id":4577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"5507:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4560,"id":4578,"nodeType":"Return","src":"5500:12:29"}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"4967:294:29","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4580,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:29","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"input","nameLocation":"5299:5:29","nodeType":"VariableDeclaration","scope":4580,"src":"5285:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4551,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"begin","nameLocation":"5314:5:29","nodeType":"VariableDeclaration","scope":4580,"src":"5306:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"end","nameLocation":"5329:3:29","nodeType":"VariableDeclaration","scope":4580,"src":"5321:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:29"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4580,"src":"5357:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:29"},"scope":5567,"src":"5266:253:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"5840:83:29","statements":[{"expression":{"arguments":[{"id":4591,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"5886:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4595,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"5902:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4593,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:29","typeDescriptions":{}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:29","memberName":"length","nodeType":"MemberAccess","src":"5896:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4590,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"5857:28:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4589,"id":4599,"nodeType":"Return","src":"5850:66:29"}]},"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"5525:215:29","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:29","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"input","nameLocation":"5781:5:29","nodeType":"VariableDeclaration","scope":4601,"src":"5767:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4582,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:29"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"success","nameLocation":"5816:7:29","nodeType":"VariableDeclaration","scope":4601,"src":"5811:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4585,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"5833:5:29","nodeType":"VariableDeclaration","scope":4601,"src":"5825:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:29"},"scope":5567,"src":"5745:178:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"6325:144:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4615,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"6339:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4618,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"6351:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4616,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:29","typeDescriptions":{}}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:29","memberName":"length","nodeType":"MemberAccess","src":"6345:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"6368:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4623,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"6376:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4630,"nodeType":"IfStatement","src":"6335:63:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4614,"id":4629,"nodeType":"Return","src":"6381:17:29"}},{"expression":{"arguments":[{"id":4632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"6444:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4633,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"6451:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"6458:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"6415:28:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4614,"id":4636,"nodeType":"Return","src":"6408:54:29"}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"5929:238:29","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:29","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"input","nameLocation":"6217:5:29","nodeType":"VariableDeclaration","scope":4638,"src":"6203:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4603,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"begin","nameLocation":"6240:5:29","nodeType":"VariableDeclaration","scope":4638,"src":"6232:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"end","nameLocation":"6263:3:29","nodeType":"VariableDeclaration","scope":4638,"src":"6255:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:29"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"success","nameLocation":"6301:7:29","nodeType":"VariableDeclaration","scope":4638,"src":"6296:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4610,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4613,"mutability":"mutable","name":"value","nameLocation":"6318:5:29","nodeType":"VariableDeclaration","scope":4638,"src":"6310:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:29"},"scope":5567,"src":"6172:297:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4707,"nodeType":"Block","src":"6872:347:29","statements":[{"assignments":[4653],"declarations":[{"constant":false,"id":4653,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:29","nodeType":"VariableDeclaration","scope":4707,"src":"6882:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4652,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4658,"initialValue":{"arguments":[{"id":4656,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"6910:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4654,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:29","typeDescriptions":{}}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:29"},{"assignments":[4660],"declarations":[{"constant":false,"id":4660,"mutability":"mutable","name":"result","nameLocation":"6935:6:29","nodeType":"VariableDeclaration","scope":4707,"src":"6927:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4662,"initialValue":{"hexValue":"30","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:29"},{"body":{"id":4701,"nodeType":"Block","src":"6993:189:29","statements":[{"assignments":[4674],"declarations":[{"constant":false,"id":4674,"mutability":"mutable","name":"chr","nameLocation":"7013:3:29","nodeType":"VariableDeclaration","scope":4701,"src":"7007:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4673,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4684,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4679,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"7062:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"7070:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4678,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"7039:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4676,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:29","typeDescriptions":{}}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4675,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"7019:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"7092:3:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:29","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4692,"nodeType":"IfStatement","src":"7088:30:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4651,"id":4691,"nodeType":"Return","src":"7101:17:29"}},{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"7132:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4696,"nodeType":"ExpressionStatement","src":"7132:12:29"},{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"7158:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4698,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"7168:3:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4700,"nodeType":"ExpressionStatement","src":"7158:13:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"6979:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4668,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"6983:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4702,"initializationExpression":{"assignments":[4664],"declarations":[{"constant":false,"id":4664,"mutability":"mutable","name":"i","nameLocation":"6968:1:29","nodeType":"VariableDeclaration","scope":4702,"src":"6960:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4666,"initialValue":{"id":4665,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"6972:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:29","subExpression":{"id":4670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"6990:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4672,"nodeType":"ExpressionStatement","src":"6988:3:29"},"nodeType":"ForStatement","src":"6955:227:29"},{"expression":{"components":[{"hexValue":"74727565","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"7205:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4651,"id":4706,"nodeType":"Return","src":"7191:21:29"}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"6475:224:29","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4708,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:29","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"input","nameLocation":"6765:5:29","nodeType":"VariableDeclaration","scope":4708,"src":"6751:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4640,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"begin","nameLocation":"6788:5:29","nodeType":"VariableDeclaration","scope":4708,"src":"6780:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"end","nameLocation":"6811:3:29","nodeType":"VariableDeclaration","scope":4708,"src":"6803:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:29"},"returnParameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"success","nameLocation":"6848:7:29","nodeType":"VariableDeclaration","scope":4708,"src":"6843:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4647,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"6865:5:29","nodeType":"VariableDeclaration","scope":4708,"src":"6857:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:29"},"scope":5567,"src":"6704:515:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4726,"nodeType":"Block","src":"7516:63:29","statements":[{"expression":{"arguments":[{"id":4717,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"7542:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4721,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"7558:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4719,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:29","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:29","memberName":"length","nodeType":"MemberAccess","src":"7552:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4716,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4727,4758],"referencedDeclaration":4758,"src":"7533:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4715,"id":4725,"nodeType":"Return","src":"7526:46:29"}]},"documentation":{"id":4709,"nodeType":"StructuredDocumentation","src":"7225:216:29","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4727,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:29","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"input","nameLocation":"7478:5:29","nodeType":"VariableDeclaration","scope":4727,"src":"7464:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4710,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:29"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4727,"src":"7508:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4713,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:29"},"scope":5567,"src":"7446:133:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4757,"nodeType":"Block","src":"7984:151:29","statements":[{"assignments":[4740,4742],"declarations":[{"constant":false,"id":4740,"mutability":"mutable","name":"success","nameLocation":"8000:7:29","nodeType":"VariableDeclaration","scope":4757,"src":"7995:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4739,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4742,"mutability":"mutable","name":"value","nameLocation":"8016:5:29","nodeType":"VariableDeclaration","scope":4757,"src":"8009:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4741,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4748,"initialValue":{"arguments":[{"id":4744,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"8037:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4745,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"8044:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4746,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"8051:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4743,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4779,4821],"referencedDeclaration":4821,"src":"8025:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:29"},{"condition":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:29","subExpression":{"id":4749,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"8070:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4754,"nodeType":"IfStatement","src":"8065:41:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4751,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"8086:18:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4753,"nodeType":"RevertStatement","src":"8079:27:29"}},{"expression":{"id":4755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"8123:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4738,"id":4756,"nodeType":"Return","src":"8116:12:29"}]},"documentation":{"id":4728,"nodeType":"StructuredDocumentation","src":"7585:296:29","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4758,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:29","nodeType":"FunctionDefinition","parameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"input","nameLocation":"7918:5:29","nodeType":"VariableDeclaration","scope":4758,"src":"7904:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4729,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"begin","nameLocation":"7933:5:29","nodeType":"VariableDeclaration","scope":4758,"src":"7925:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4734,"mutability":"mutable","name":"end","nameLocation":"7948:3:29","nodeType":"VariableDeclaration","scope":4758,"src":"7940:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:29"},"returnParameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4758,"src":"7976:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4736,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:29"},"scope":5567,"src":"7886:249:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4778,"nodeType":"Block","src":"8526:82:29","statements":[{"expression":{"arguments":[{"id":4769,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"8571:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4773,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"8587:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4771,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:29","typeDescriptions":{}}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:29","memberName":"length","nodeType":"MemberAccess","src":"8581:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"8543:27:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4767,"id":4777,"nodeType":"Return","src":"8536:65:29"}]},"documentation":{"id":4759,"nodeType":"StructuredDocumentation","src":"8141:287:29","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4779,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:29","nodeType":"FunctionDefinition","parameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"input","nameLocation":"8468:5:29","nodeType":"VariableDeclaration","scope":4779,"src":"8454:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4760,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:29"},"returnParameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"success","nameLocation":"8503:7:29","nodeType":"VariableDeclaration","scope":4779,"src":"8498:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4763,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4766,"mutability":"mutable","name":"value","nameLocation":"8519:5:29","nodeType":"VariableDeclaration","scope":4779,"src":"8512:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4765,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:29"},"scope":5567,"src":"8433:175:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4784,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:29","nodeType":"VariableDeclaration","scope":5567,"src":"8614:50:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:29","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4820,"nodeType":"Block","src":"9130:143:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"9144:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4801,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"9156:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4799,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:29","typeDescriptions":{}}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:29","memberName":"length","nodeType":"MemberAccess","src":"9150:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9173:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4806,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"9181:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4813,"nodeType":"IfStatement","src":"9140:63:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4797,"id":4812,"nodeType":"Return","src":"9186:17:29"}},{"expression":{"arguments":[{"id":4815,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"9248:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4816,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"9255:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"9262:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4814,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"9220:27:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4797,"id":4819,"nodeType":"Return","src":"9213:53:29"}]},"documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"8671:303:29","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4821,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:29","nodeType":"FunctionDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"input","nameLocation":"9023:5:29","nodeType":"VariableDeclaration","scope":4821,"src":"9009:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4786,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4789,"mutability":"mutable","name":"begin","nameLocation":"9046:5:29","nodeType":"VariableDeclaration","scope":4821,"src":"9038:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4791,"mutability":"mutable","name":"end","nameLocation":"9069:3:29","nodeType":"VariableDeclaration","scope":4821,"src":"9061:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:29"},"returnParameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"success","nameLocation":"9107:7:29","nodeType":"VariableDeclaration","scope":4821,"src":"9102:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4793,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"value","nameLocation":"9123:5:29","nodeType":"VariableDeclaration","scope":4821,"src":"9116:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4795,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:29"},"scope":5567,"src":"8979:294:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"9673:812:29","statements":[{"assignments":[4836],"declarations":[{"constant":false,"id":4836,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:29","nodeType":"VariableDeclaration","scope":4941,"src":"9683:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4835,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4841,"initialValue":{"arguments":[{"id":4839,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"9711:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4837,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:29","typeDescriptions":{}}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:29"},{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"sign","nameLocation":"9781:4:29","nodeType":"VariableDeclaration","scope":4941,"src":"9774:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4842,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4859,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4844,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"9788:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4845,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"9797:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"9845:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4855,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"9853:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4853,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"9822:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4851,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:29","typeDescriptions":{}}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:29","trueExpression":{"arguments":[{"hexValue":"30","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4847,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:29","typeDescriptions":{}}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:29"},{"assignments":[4861],"declarations":[{"constant":false,"id":4861,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:29","nodeType":"VariableDeclaration","scope":4941,"src":"9941:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4860,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4868,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4862,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"9961:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4863,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:29","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:29"},{"assignments":[4870],"declarations":[{"constant":false,"id":4870,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:29","nodeType":"VariableDeclaration","scope":4941,"src":"9990:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4869,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4877,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"10010:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4872,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:29","typeDescriptions":{}}},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:29"},{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"offset","nameLocation":"10047:6:29","nodeType":"VariableDeclaration","scope":4941,"src":"10039:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4886,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"10057:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4881,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"10073:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"10056:37:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:29"},{"assignments":[4888,4890],"declarations":[{"constant":false,"id":4888,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:29","nodeType":"VariableDeclaration","scope":4941,"src":"10107:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4887,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4890,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:29","nodeType":"VariableDeclaration","scope":4941,"src":"10124:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4889,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4898,"initialValue":{"arguments":[{"id":4892,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"10157:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"10164:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4894,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"10172:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4896,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"10180:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4891,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4601,4638],"referencedDeclaration":4638,"src":"10144:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:29"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"10199:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"10213:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4901,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"10224:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"10341:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4920,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"10355:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"10371:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4923,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"10383:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4834,"id":4938,"nodeType":"Return","src":"10461:17:29"},"id":4939,"nodeType":"IfStatement","src":"10337:141:29","trueBody":{"id":4934,"nodeType":"Block","src":"10399:56:29","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4928,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:29","memberName":"min","nodeType":"MemberAccess","src":"10427:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4834,"id":4933,"nodeType":"Return","src":"10413:31:29"}]}},"id":4940,"nodeType":"IfStatement","src":"10195:283:29","trueBody":{"id":4918,"nodeType":"Block","src":"10240:91:29","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4905,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"10268:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4913,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"10310:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4911,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:29","typeDescriptions":{}}},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:29","trueExpression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:29","subExpression":{"arguments":[{"id":4908,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"10291:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4906,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:29","typeDescriptions":{}}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4834,"id":4917,"nodeType":"Return","src":"10254:66:29"}]}}]},"documentation":{"id":4822,"nodeType":"StructuredDocumentation","src":"9279:223:29","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:29","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"input","nameLocation":"9567:5:29","nodeType":"VariableDeclaration","scope":4942,"src":"9553:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4823,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4826,"mutability":"mutable","name":"begin","nameLocation":"9590:5:29","nodeType":"VariableDeclaration","scope":4942,"src":"9582:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"end","nameLocation":"9613:3:29","nodeType":"VariableDeclaration","scope":4942,"src":"9605:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:29"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"success","nameLocation":"9650:7:29","nodeType":"VariableDeclaration","scope":4942,"src":"9645:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4830,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"value","nameLocation":"9666:5:29","nodeType":"VariableDeclaration","scope":4942,"src":"9659:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4832,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:29"},"scope":5567,"src":"9507:978:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4960,"nodeType":"Block","src":"10830:67:29","statements":[{"expression":{"arguments":[{"id":4951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"10860:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4955,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"10876:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4953,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:29","typeDescriptions":{}}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:29","memberName":"length","nodeType":"MemberAccess","src":"10870:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4950,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4961,4992],"referencedDeclaration":4992,"src":"10847:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4949,"id":4959,"nodeType":"Return","src":"10840:50:29"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"10491:259:29","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4961,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:29","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"input","nameLocation":"10791:5:29","nodeType":"VariableDeclaration","scope":4961,"src":"10777:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4944,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:29"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4961,"src":"10821:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4947,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:29"},"scope":5567,"src":"10755:142:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4991,"nodeType":"Block","src":"11318:156:29","statements":[{"assignments":[4974,4976],"declarations":[{"constant":false,"id":4974,"mutability":"mutable","name":"success","nameLocation":"11334:7:29","nodeType":"VariableDeclaration","scope":4991,"src":"11329:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4973,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4976,"mutability":"mutable","name":"value","nameLocation":"11351:5:29","nodeType":"VariableDeclaration","scope":4991,"src":"11343:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4982,"initialValue":{"arguments":[{"id":4978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"11376:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4979,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"11383:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4980,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"11390:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4977,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5013,5050],"referencedDeclaration":5050,"src":"11360:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:29"},{"condition":{"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:29","subExpression":{"id":4983,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"11409:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"11404:41:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4985,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"11425:18:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4987,"nodeType":"RevertStatement","src":"11418:27:29"}},{"expression":{"id":4989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"11462:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4972,"id":4990,"nodeType":"Return","src":"11455:12:29"}]},"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"10903:307:29","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:29","nodeType":"FunctionDefinition","parameters":{"id":4969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"input","nameLocation":"11251:5:29","nodeType":"VariableDeclaration","scope":4992,"src":"11237:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4963,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4966,"mutability":"mutable","name":"begin","nameLocation":"11266:5:29","nodeType":"VariableDeclaration","scope":4992,"src":"11258:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4968,"mutability":"mutable","name":"end","nameLocation":"11281:3:29","nodeType":"VariableDeclaration","scope":4992,"src":"11273:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:29"},"returnParameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4992,"src":"11309:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:29"},"scope":5567,"src":"11215:259:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"11801:86:29","statements":[{"expression":{"arguments":[{"id":5003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"11850:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"11866:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5005,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:29","typeDescriptions":{}}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:29","memberName":"length","nodeType":"MemberAccess","src":"11860:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5002,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"11818:31:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5001,"id":5011,"nodeType":"Return","src":"11811:69:29"}]},"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"11480:218:29","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:29","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"input","nameLocation":"11742:5:29","nodeType":"VariableDeclaration","scope":5013,"src":"11728:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4994,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:29"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"success","nameLocation":"11777:7:29","nodeType":"VariableDeclaration","scope":5013,"src":"11772:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4997,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"value","nameLocation":"11794:5:29","nodeType":"VariableDeclaration","scope":5013,"src":"11786:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:29"},"scope":5567,"src":"11703:184:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5049,"nodeType":"Block","src":"12295:147:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5027,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"12309:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"12321:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5028,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:29","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:29","memberName":"length","nodeType":"MemberAccess","src":"12315:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"12338:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5035,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"12346:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"12305:63:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5026,"id":5041,"nodeType":"Return","src":"12351:17:29"}},{"expression":{"arguments":[{"id":5044,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"12417:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5045,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"12424:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5046,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"12431:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5043,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"12385:31:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5026,"id":5048,"nodeType":"Return","src":"12378:57:29"}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"11893:241:29","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5050,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:29","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"input","nameLocation":"12187:5:29","nodeType":"VariableDeclaration","scope":5050,"src":"12173:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5015,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5018,"mutability":"mutable","name":"begin","nameLocation":"12210:5:29","nodeType":"VariableDeclaration","scope":5050,"src":"12202:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5017,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5020,"mutability":"mutable","name":"end","nameLocation":"12233:3:29","nodeType":"VariableDeclaration","scope":5050,"src":"12225:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:29"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"success","nameLocation":"12271:7:29","nodeType":"VariableDeclaration","scope":5050,"src":"12266:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5022,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5025,"mutability":"mutable","name":"value","nameLocation":"12288:5:29","nodeType":"VariableDeclaration","scope":5050,"src":"12280:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:29"},"scope":5567,"src":"12139:303:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5152,"nodeType":"Block","src":"12851:881:29","statements":[{"assignments":[5065],"declarations":[{"constant":false,"id":5065,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:29","nodeType":"VariableDeclaration","scope":5152,"src":"12861:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5064,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5070,"initialValue":{"arguments":[{"id":5068,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"12889:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5066,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:29","typeDescriptions":{}}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:29"},{"assignments":[5072],"declarations":[{"constant":false,"id":5072,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:29","nodeType":"VariableDeclaration","scope":5152,"src":"12943:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5071,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5092,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"12961:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"12967:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5082,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"13011:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5083,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"13019:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"12988:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5079,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:29","typeDescriptions":{}}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5086,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:29","typeDescriptions":{}}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:29"},{"assignments":[5094],"declarations":[{"constant":false,"id":5094,"mutability":"mutable","name":"offset","nameLocation":"13131:6:29","nodeType":"VariableDeclaration","scope":5152,"src":"13123:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5100,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5095,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"13140:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"13140:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:29"},{"assignments":[5102],"declarations":[{"constant":false,"id":5102,"mutability":"mutable","name":"result","nameLocation":"13181:6:29","nodeType":"VariableDeclaration","scope":5152,"src":"13173:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5104,"initialValue":{"hexValue":"30","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:29"},{"body":{"id":5146,"nodeType":"Block","src":"13248:447:29","statements":[{"assignments":[5118],"declarations":[{"constant":false,"id":5118,"mutability":"mutable","name":"chr","nameLocation":"13268:3:29","nodeType":"VariableDeclaration","scope":5146,"src":"13262:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5117,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5128,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5123,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"13317:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5124,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"13325:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"13294:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5120,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:29","typeDescriptions":{}}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5119,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"13274:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"13347:3:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5136,"nodeType":"IfStatement","src":"13343:31:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5063,"id":5135,"nodeType":"Return","src":"13357:17:29"}},{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"13388:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ExpressionStatement","src":"13388:12:29"},{"id":5145,"nodeType":"UncheckedBlock","src":"13414:271:29","statements":[{"expression":{"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"13657:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5142,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"13667:3:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5144,"nodeType":"ExpressionStatement","src":"13657:13:29"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"13234:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5112,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"13238:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5147,"initializationExpression":{"assignments":[5106],"declarations":[{"constant":false,"id":5106,"mutability":"mutable","name":"i","nameLocation":"13214:1:29","nodeType":"VariableDeclaration","scope":5147,"src":"13206:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5110,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5107,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"13218:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5108,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"13226:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:29","subExpression":{"id":5114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"13245:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5116,"nodeType":"ExpressionStatement","src":"13243:3:29"},"nodeType":"ForStatement","src":"13201:494:29"},{"expression":{"components":[{"hexValue":"74727565","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"13718:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5063,"id":5151,"nodeType":"Return","src":"13704:21:29"}]},"documentation":{"id":5051,"nodeType":"StructuredDocumentation","src":"12448:227:29","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:29","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"input","nameLocation":"12744:5:29","nodeType":"VariableDeclaration","scope":5153,"src":"12730:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5052,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5055,"mutability":"mutable","name":"begin","nameLocation":"12767:5:29","nodeType":"VariableDeclaration","scope":5153,"src":"12759:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"end","nameLocation":"12790:3:29","nodeType":"VariableDeclaration","scope":5153,"src":"12782:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:29"},"returnParameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"success","nameLocation":"12827:7:29","nodeType":"VariableDeclaration","scope":5153,"src":"12822:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5059,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5062,"mutability":"mutable","name":"value","nameLocation":"12844:5:29","nodeType":"VariableDeclaration","scope":5153,"src":"12836:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:29"},"scope":5567,"src":"12680:1052:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5171,"nodeType":"Block","src":"14030:67:29","statements":[{"expression":{"arguments":[{"id":5162,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"14060:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"14076:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5164,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:29","typeDescriptions":{}}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:29","memberName":"length","nodeType":"MemberAccess","src":"14070:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5161,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5172,5203],"referencedDeclaration":5203,"src":"14047:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5160,"id":5170,"nodeType":"Return","src":"14040:50:29"}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"13738:212:29","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5172,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:29","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"input","nameLocation":"13991:5:29","nodeType":"VariableDeclaration","scope":5172,"src":"13977:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5155,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:29"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5172,"src":"14021:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5158,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:29"},"scope":5567,"src":"13955:142:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"14470:165:29","statements":[{"assignments":[5185,5187],"declarations":[{"constant":false,"id":5185,"mutability":"mutable","name":"success","nameLocation":"14486:7:29","nodeType":"VariableDeclaration","scope":5202,"src":"14481:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5184,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5187,"mutability":"mutable","name":"value","nameLocation":"14503:5:29","nodeType":"VariableDeclaration","scope":5202,"src":"14495:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5186,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5193,"initialValue":{"arguments":[{"id":5189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"14528:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5190,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"14535:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5191,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"14542:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5188,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5224,5328],"referencedDeclaration":5328,"src":"14512:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:29"},{"condition":{"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:29","subExpression":{"id":5194,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"14561:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"14556:50:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5196,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"14577:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5198,"nodeType":"RevertStatement","src":"14570:36:29"}},{"expression":{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"14623:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5183,"id":5201,"nodeType":"Return","src":"14616:12:29"}]},"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"14103:259:29","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:29","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"input","nameLocation":"14403:5:29","nodeType":"VariableDeclaration","scope":5203,"src":"14389:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5174,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5177,"mutability":"mutable","name":"begin","nameLocation":"14418:5:29","nodeType":"VariableDeclaration","scope":5203,"src":"14410:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5179,"mutability":"mutable","name":"end","nameLocation":"14433:3:29","nodeType":"VariableDeclaration","scope":5203,"src":"14425:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:29"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"14461:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5181,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:29"},"scope":5567,"src":"14367:268:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5223,"nodeType":"Block","src":"14942:70:29","statements":[{"expression":{"arguments":[{"id":5214,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"14975:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5218,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"14991:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5216,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:29","typeDescriptions":{}}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:29","memberName":"length","nodeType":"MemberAccess","src":"14985:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5224,5328],"referencedDeclaration":5328,"src":"14959:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5212,"id":5222,"nodeType":"Return","src":"14952:53:29"}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"14641:198:29","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5224,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:29","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"input","nameLocation":"14883:5:29","nodeType":"VariableDeclaration","scope":5224,"src":"14869:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5205,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:29"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"success","nameLocation":"14918:7:29","nodeType":"VariableDeclaration","scope":5224,"src":"14913:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5208,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5211,"mutability":"mutable","name":"value","nameLocation":"14935:5:29","nodeType":"VariableDeclaration","scope":5224,"src":"14927:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5210,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:29"},"scope":5567,"src":"14844:168:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5327,"nodeType":"Block","src":"15405:733:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"15419:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5241,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"15431:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5239,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:29","typeDescriptions":{}}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:29","memberName":"length","nodeType":"MemberAccess","src":"15425:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15448:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5246,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"15456:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5256,"nodeType":"IfStatement","src":"15415:72:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5250,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:29","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5237,"id":5255,"nodeType":"Return","src":"15461:26:29"}},{"assignments":[5258],"declarations":[{"constant":false,"id":5258,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:29","nodeType":"VariableDeclaration","scope":5327,"src":"15498:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5257,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5281,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"15516:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15522:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5270,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"15572:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5268,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:29","typeDescriptions":{}}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5272,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15580:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5267,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"15543:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5265,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:29","typeDescriptions":{}}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5275,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:29","typeDescriptions":{}}},"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:29"},{"assignments":[5283],"declarations":[{"constant":false,"id":5283,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:29","nodeType":"VariableDeclaration","scope":5327,"src":"15684:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5291,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5285,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"15714:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"15714:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"15801:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5293,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15807:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5295,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"15816:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5325,"nodeType":"Block","src":"16081:51:29","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:29","typeDescriptions":{}}},"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5237,"id":5324,"nodeType":"Return","src":"16095:26:29"}]},"id":5326,"nodeType":"IfStatement","src":"15797:335:29","trueBody":{"id":5317,"nodeType":"Block","src":"15832:243:29","statements":[{"assignments":[5298,5300],"declarations":[{"constant":false,"id":5298,"mutability":"mutable","name":"s","nameLocation":"15953:1:29","nodeType":"VariableDeclaration","scope":5317,"src":"15948:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5297,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5300,"mutability":"mutable","name":"v","nameLocation":"15964:1:29","nodeType":"VariableDeclaration","scope":5317,"src":"15956:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5299,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5306,"initialValue":{"arguments":[{"id":5302,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"16001:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5303,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"16008:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"16015:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"15969:31:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:29"},{"expression":{"components":[{"id":5307,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"16041:1:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5312,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"16060:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5310,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:29","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5308,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:29","typeDescriptions":{}}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5237,"id":5316,"nodeType":"Return","src":"16033:31:29"}]}}]},"documentation":{"id":5225,"nodeType":"StructuredDocumentation","src":"15018:226:29","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":5328,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:29","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5227,"mutability":"mutable","name":"input","nameLocation":"15297:5:29","nodeType":"VariableDeclaration","scope":5328,"src":"15283:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5226,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5229,"mutability":"mutable","name":"begin","nameLocation":"15320:5:29","nodeType":"VariableDeclaration","scope":5328,"src":"15312:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"end","nameLocation":"15343:3:29","nodeType":"VariableDeclaration","scope":5328,"src":"15335:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:29"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"success","nameLocation":"15381:7:29","nodeType":"VariableDeclaration","scope":5328,"src":"15376:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5233,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"15398:5:29","nodeType":"VariableDeclaration","scope":5328,"src":"15390:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5235,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:29"},"scope":5567,"src":"15249:889:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5387,"nodeType":"Block","src":"16207:461:29","statements":[{"assignments":[5336],"declarations":[{"constant":false,"id":5336,"mutability":"mutable","name":"value","nameLocation":"16223:5:29","nodeType":"VariableDeclaration","scope":5387,"src":"16217:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5335,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5341,"initialValue":{"arguments":[{"id":5339,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"16237:3:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5337,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:29","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:29"},{"id":5384,"nodeType":"UncheckedBlock","src":"16401:238:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16429:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:29","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16443:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:29","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16489:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16503:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:29","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16550:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16564:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:29","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5376,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5375,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:29","memberName":"max","nodeType":"MemberAccess","src":"16613:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5334,"id":5380,"nodeType":"Return","src":"16606:22:29"},"id":5381,"nodeType":"IfStatement","src":"16546:82:29","trueBody":{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16576:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:29","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5374,"nodeType":"ExpressionStatement","src":"16576:11:29"}},"id":5382,"nodeType":"IfStatement","src":"16485:143:29","trueBody":{"expression":{"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16516:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:29","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5363,"nodeType":"ExpressionStatement","src":"16516:11:29"}},"id":5383,"nodeType":"IfStatement","src":"16425:203:29","trueBody":{"expression":{"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16455:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5352,"nodeType":"ExpressionStatement","src":"16455:11:29"}}]},{"expression":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"16656:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5334,"id":5386,"nodeType":"Return","src":"16649:12:29"}]},"id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:29","nodeType":"FunctionDefinition","parameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"chr","nameLocation":"16173:3:29","nodeType":"VariableDeclaration","scope":5388,"src":"16166:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5329,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:29"},"returnParameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5388,"src":"16200:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5332,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:29"},"scope":5567,"src":"16144:524:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5553,"nodeType":"Block","src":"17334:1331:29","statements":[{"assignments":[5397],"declarations":[{"constant":false,"id":5397,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:29","nodeType":"VariableDeclaration","scope":5553,"src":"17344:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5396,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5402,"initialValue":{"arguments":[{"id":5400,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"17372:5:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5398,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:29","typeDescriptions":{}}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:29"},{"assignments":[5404],"declarations":[{"constant":false,"id":5404,"mutability":"mutable","name":"output","nameLocation":"17401:6:29","nodeType":"VariableDeclaration","scope":5553,"src":"17388:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5403,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5412,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5408,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"17424:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:29","memberName":"length","nodeType":"MemberAccess","src":"17424:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5405,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:29"},{"assignments":[5414],"declarations":[{"constant":false,"id":5414,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:29","nodeType":"VariableDeclaration","scope":5553,"src":"17471:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5416,"initialValue":{"hexValue":"30","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:29"},{"body":{"id":5545,"nodeType":"Block","src":"17546:854:29","statements":[{"assignments":[5428],"declarations":[{"constant":false,"id":5428,"mutability":"mutable","name":"char","nameLocation":"17567:4:29","nodeType":"VariableDeclaration","scope":5545,"src":"17560:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5427,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5436,"initialValue":{"arguments":[{"arguments":[{"id":5432,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"17604:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"17612:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5431,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"17581:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5429,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:29","typeDescriptions":{}}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:29"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"17635:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5441,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"17670:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5439,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:29","typeDescriptions":{}}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5543,"nodeType":"Block","src":"18328:62:29","statements":[{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5536,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"18346:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5539,"indexExpression":{"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:29","subExpression":{"id":5537,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"18353:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5540,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"18371:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5542,"nodeType":"ExpressionStatement","src":"18346:29:29"}]},"id":5544,"nodeType":"IfStatement","src":"17629:761:29","trueBody":{"id":5535,"nodeType":"Block","src":"17685:637:29","statements":[{"expression":{"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5450,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"17703:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5453,"indexExpression":{"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:29","subExpression":{"id":5451,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"17710:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5456,"nodeType":"ExpressionStatement","src":"17703:29:29"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"17754:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"17823:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:29","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"17892:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5487,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"17961:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:29","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"18030:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:29","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"18099:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:29","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"18169:4:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:29","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5528,"nodeType":"IfStatement","src":"18165:143:29","trueBody":{"id":5527,"nodeType":"Block","src":"18183:125:29","statements":[{"expression":{"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5520,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"18261:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5523,"indexExpression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:29","subExpression":{"id":5521,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"18268:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5526,"nodeType":"ExpressionStatement","src":"18261:28:29"}]}},"id":5529,"nodeType":"IfStatement","src":"18095:213:29","trueBody":{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5510,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"18113:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5513,"indexExpression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:29","subExpression":{"id":5511,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"18120:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5516,"nodeType":"ExpressionStatement","src":"18113:29:29"}},"id":5530,"nodeType":"IfStatement","src":"18026:282:29","trueBody":{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5500,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"18044:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5503,"indexExpression":{"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:29","subExpression":{"id":5501,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"18051:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5506,"nodeType":"ExpressionStatement","src":"18044:28:29"}},"id":5531,"nodeType":"IfStatement","src":"17957:351:29","trueBody":{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5490,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"17975:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5493,"indexExpression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:29","subExpression":{"id":5491,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"17982:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5496,"nodeType":"ExpressionStatement","src":"17975:28:29"}},"id":5532,"nodeType":"IfStatement","src":"17888:420:29","trueBody":{"expression":{"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5480,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"17906:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5483,"indexExpression":{"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:29","subExpression":{"id":5481,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"17913:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5486,"nodeType":"ExpressionStatement","src":"17906:28:29"}},"id":5533,"nodeType":"IfStatement","src":"17819:489:29","trueBody":{"expression":{"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5470,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"17837:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5473,"indexExpression":{"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:29","subExpression":{"id":5471,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"17844:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5476,"nodeType":"ExpressionStatement","src":"17837:28:29"}},"id":5534,"nodeType":"IfStatement","src":"17750:558:29","trueBody":{"expression":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5460,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"17768:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5463,"indexExpression":{"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:29","subExpression":{"id":5461,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"17775:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5466,"nodeType":"ExpressionStatement","src":"17768:28:29"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"17522:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5421,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"17526:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:29","memberName":"length","nodeType":"MemberAccess","src":"17526:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5546,"initializationExpression":{"assignments":[5418],"declarations":[{"constant":false,"id":5418,"mutability":"mutable","name":"i","nameLocation":"17519:1:29","nodeType":"VariableDeclaration","scope":5546,"src":"17511:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"nodeType":"VariableDeclarationStatement","src":"17511:9:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:29","subExpression":{"id":5424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"17543:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5426,"nodeType":"ExpressionStatement","src":"17541:3:29"},"nodeType":"ForStatement","src":"17506:894:29"},{"AST":{"nativeSrc":"18498:129:29","nodeType":"YulBlock","src":"18498:129:29","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:29","nodeType":"YulIdentifier","src":"18519:6:29"},{"name":"outputLength","nativeSrc":"18527:12:29","nodeType":"YulIdentifier","src":"18527:12:29"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:29","nodeType":"YulIdentifier","src":"18512:6:29"},"nativeSrc":"18512:28:29","nodeType":"YulFunctionCall","src":"18512:28:29"},"nativeSrc":"18512:28:29","nodeType":"YulExpressionStatement","src":"18512:28:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:29","nodeType":"YulLiteral","src":"18560:4:29","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:29","nodeType":"YulIdentifier","src":"18570:6:29"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:29","nodeType":"YulLiteral","src":"18582:1:29","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:29","nodeType":"YulLiteral","src":"18589:1:29","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:29","nodeType":"YulIdentifier","src":"18596:12:29"},{"kind":"number","nativeSrc":"18610:2:29","nodeType":"YulLiteral","src":"18610:2:29","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:29","nodeType":"YulIdentifier","src":"18592:3:29"},"nativeSrc":"18592:21:29","nodeType":"YulFunctionCall","src":"18592:21:29"}],"functionName":{"name":"shr","nativeSrc":"18585:3:29","nodeType":"YulIdentifier","src":"18585:3:29"},"nativeSrc":"18585:29:29","nodeType":"YulFunctionCall","src":"18585:29:29"}],"functionName":{"name":"shl","nativeSrc":"18578:3:29","nodeType":"YulIdentifier","src":"18578:3:29"},"nativeSrc":"18578:37:29","nodeType":"YulFunctionCall","src":"18578:37:29"}],"functionName":{"name":"add","nativeSrc":"18566:3:29","nodeType":"YulIdentifier","src":"18566:3:29"},"nativeSrc":"18566:50:29","nodeType":"YulFunctionCall","src":"18566:50:29"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:29","nodeType":"YulIdentifier","src":"18553:6:29"},"nativeSrc":"18553:64:29","nodeType":"YulFunctionCall","src":"18553:64:29"},"nativeSrc":"18553:64:29","nodeType":"YulExpressionStatement","src":"18553:64:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":5404,"isOffset":false,"isSlot":false,"src":"18519:6:29","valueSize":1},{"declaration":5404,"isOffset":false,"isSlot":false,"src":"18570:6:29","valueSize":1},{"declaration":5414,"isOffset":false,"isSlot":false,"src":"18527:12:29","valueSize":1},{"declaration":5414,"isOffset":false,"isSlot":false,"src":"18596:12:29","valueSize":1}],"flags":["memory-safe"],"id":5547,"nodeType":"InlineAssembly","src":"18473:154:29"},{"expression":{"arguments":[{"id":5550,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"18651:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5548,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:29","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5395,"id":5552,"nodeType":"Return","src":"18637:21:29"}]},"documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"16674:576:29","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5554,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:29","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"input","nameLocation":"17289:5:29","nodeType":"VariableDeclaration","scope":5554,"src":"17275:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5390,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:29"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5554,"src":"17319:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5393,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:29"},"scope":5567,"src":"17255:1410:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5565,"nodeType":"Block","src":"19050:225:29","statements":[{"AST":{"nativeSrc":"19199:70:29","nodeType":"YulBlock","src":"19199:70:29","statements":[{"nativeSrc":"19213:46:29","nodeType":"YulAssignment","src":"19213:46:29","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:29","nodeType":"YulIdentifier","src":"19232:6:29"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:29","nodeType":"YulLiteral","src":"19244:4:29","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:29","nodeType":"YulIdentifier","src":"19250:6:29"}],"functionName":{"name":"add","nativeSrc":"19240:3:29","nodeType":"YulIdentifier","src":"19240:3:29"},"nativeSrc":"19240:17:29","nodeType":"YulFunctionCall","src":"19240:17:29"}],"functionName":{"name":"add","nativeSrc":"19228:3:29","nodeType":"YulIdentifier","src":"19228:3:29"},"nativeSrc":"19228:30:29","nodeType":"YulFunctionCall","src":"19228:30:29"}],"functionName":{"name":"mload","nativeSrc":"19222:5:29","nodeType":"YulIdentifier","src":"19222:5:29"},"nativeSrc":"19222:37:29","nodeType":"YulFunctionCall","src":"19222:37:29"},"variableNames":[{"name":"value","nativeSrc":"19213:5:29","nodeType":"YulIdentifier","src":"19213:5:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5557,"isOffset":false,"isSlot":false,"src":"19232:6:29","valueSize":1},{"declaration":5559,"isOffset":false,"isSlot":false,"src":"19250:6:29","valueSize":1},{"declaration":5562,"isOffset":false,"isSlot":false,"src":"19213:5:29","valueSize":1}],"flags":["memory-safe"],"id":5564,"nodeType":"InlineAssembly","src":"19174:95:29"}]},"documentation":{"id":5555,"nodeType":"StructuredDocumentation","src":"18671:268:29","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:29","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5557,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:29","nodeType":"VariableDeclaration","scope":5566,"src":"18976:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5556,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5559,"mutability":"mutable","name":"offset","nameLocation":"19005:6:29","nodeType":"VariableDeclaration","scope":5566,"src":"18997:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5558,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:29"},"returnParameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"value","nameLocation":"19043:5:29","nodeType":"VariableDeclaration","scope":5566,"src":"19035:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:29"},"scope":5567,"src":"18944:331:29","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5568,"src":"297:18980:29","usedErrors":[4225,4228,4231],"usedEvents":[]}],"src":"101:19177:29"},"id":29},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5591],"IERC165":[5603]},"id":5592,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5569,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5592,"sourceUnit":5604,"src":"140:38:30","symbolAliases":[{"foreign":{"id":5570,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"148:7:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5573,"name":"IERC165","nameLocations":["688:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":5603,"src":"688:7:30"},"id":5574,"nodeType":"InheritanceSpecifier","src":"688:7:30"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5572,"nodeType":"StructuredDocumentation","src":"180:479:30","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":5591,"linearizedBaseContracts":[5591,5603],"name":"ERC165","nameLocation":"678:6:30","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5602],"body":{"id":5589,"nodeType":"Block","src":"845:64:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"862:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5584,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"882:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5603_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5603_$","typeString":"type(contract IERC165)"}],"id":5583,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5603","typeString":"type(contract IERC165)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:30","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5581,"id":5588,"nodeType":"Return","src":"855:47:30"}]},"documentation":{"id":5575,"nodeType":"StructuredDocumentation","src":"702:56:30","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5590,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:30","nodeType":"FunctionDefinition","parameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:30","nodeType":"VariableDeclaration","scope":5590,"src":"790:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5576,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:30"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5590,"src":"839:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5579,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:30"},"scope":5591,"src":"763:146:30","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5592,"src":"660:251:30","usedErrors":[],"usedEvents":[]}],"src":"114:798:30"},"id":30},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5603]},"id":5604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5593,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5594,"nodeType":"StructuredDocumentation","src":"141:280:31","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5603,"linearizedBaseContracts":[5603],"name":"IERC165","nameLocation":"432:7:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"446:340:31","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5602,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:31","nodeType":"FunctionDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:31","nodeType":"VariableDeclaration","scope":5602,"src":"818:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5596,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:31","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:31"},"returnParameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5602,"src":"861:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5599,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:31"},"scope":5603,"src":"791:76:31","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5604,"src":"422:447:31","usedErrors":[],"usedEvents":[]}],"src":"115:755:31"},"id":31},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7224],"Panic":[4041],"SafeCast":[8989]},"id":7225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5605,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7225,"sourceUnit":4042,"src":"129:35:32","symbolAliases":[{"foreign":{"id":5606,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"137:5:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7225,"sourceUnit":8990,"src":"165:40:32","symbolAliases":[{"foreign":{"id":5608,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"173:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"207:73:32","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7224,"linearizedBaseContracts":[7224],"name":"Math","nameLocation":"289:4:32","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5615,"members":[{"id":5611,"name":"Floor","nameLocation":"324:5:32","nodeType":"EnumValue","src":"324:5:32"},{"id":5612,"name":"Ceil","nameLocation":"367:4:32","nodeType":"EnumValue","src":"367:4:32"},{"id":5613,"name":"Trunc","nameLocation":"409:5:32","nodeType":"EnumValue","src":"409:5:32"},{"id":5614,"name":"Expand","nameLocation":"439:6:32","nodeType":"EnumValue","src":"439:6:32"}],"name":"Rounding","nameLocation":"305:8:32","nodeType":"EnumDefinition","src":"300:169:32"},{"body":{"id":5628,"nodeType":"Block","src":"731:112:32","statements":[{"AST":{"nativeSrc":"766:71:32","nodeType":"YulBlock","src":"766:71:32","statements":[{"nativeSrc":"780:16:32","nodeType":"YulAssignment","src":"780:16:32","value":{"arguments":[{"name":"a","nativeSrc":"791:1:32","nodeType":"YulIdentifier","src":"791:1:32"},{"name":"b","nativeSrc":"794:1:32","nodeType":"YulIdentifier","src":"794:1:32"}],"functionName":{"name":"add","nativeSrc":"787:3:32","nodeType":"YulIdentifier","src":"787:3:32"},"nativeSrc":"787:9:32","nodeType":"YulFunctionCall","src":"787:9:32"},"variableNames":[{"name":"low","nativeSrc":"780:3:32","nodeType":"YulIdentifier","src":"780:3:32"}]},{"nativeSrc":"809:18:32","nodeType":"YulAssignment","src":"809:18:32","value":{"arguments":[{"name":"low","nativeSrc":"820:3:32","nodeType":"YulIdentifier","src":"820:3:32"},{"name":"a","nativeSrc":"825:1:32","nodeType":"YulIdentifier","src":"825:1:32"}],"functionName":{"name":"lt","nativeSrc":"817:2:32","nodeType":"YulIdentifier","src":"817:2:32"},"nativeSrc":"817:10:32","nodeType":"YulFunctionCall","src":"817:10:32"},"variableNames":[{"name":"high","nativeSrc":"809:4:32","nodeType":"YulIdentifier","src":"809:4:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5618,"isOffset":false,"isSlot":false,"src":"791:1:32","valueSize":1},{"declaration":5618,"isOffset":false,"isSlot":false,"src":"825:1:32","valueSize":1},{"declaration":5620,"isOffset":false,"isSlot":false,"src":"794:1:32","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"809:4:32","valueSize":1},{"declaration":5625,"isOffset":false,"isSlot":false,"src":"780:3:32","valueSize":1},{"declaration":5625,"isOffset":false,"isSlot":false,"src":"820:3:32","valueSize":1}],"flags":["memory-safe"],"id":5627,"nodeType":"InlineAssembly","src":"741:96:32"}]},"documentation":{"id":5616,"nodeType":"StructuredDocumentation","src":"475:163:32","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:32","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"a","nameLocation":"667:1:32","nodeType":"VariableDeclaration","scope":5629,"src":"659:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5617,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5620,"mutability":"mutable","name":"b","nameLocation":"678:1:32","nodeType":"VariableDeclaration","scope":5629,"src":"670:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:32"},"returnParameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"high","nameLocation":"712:4:32","nodeType":"VariableDeclaration","scope":5629,"src":"704:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5625,"mutability":"mutable","name":"low","nameLocation":"726:3:32","nodeType":"VariableDeclaration","scope":5629,"src":"718:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:32"},"scope":7224,"src":"643:200:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"1115:462:32","statements":[{"AST":{"nativeSrc":"1437:134:32","nodeType":"YulBlock","src":"1437:134:32","statements":[{"nativeSrc":"1451:30:32","nodeType":"YulVariableDeclaration","src":"1451:30:32","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:32","nodeType":"YulIdentifier","src":"1468:1:32"},{"name":"b","nativeSrc":"1471:1:32","nodeType":"YulIdentifier","src":"1471:1:32"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:32","nodeType":"YulLiteral","src":"1478:1:32","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:32","nodeType":"YulIdentifier","src":"1474:3:32"},"nativeSrc":"1474:6:32","nodeType":"YulFunctionCall","src":"1474:6:32"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:32","nodeType":"YulIdentifier","src":"1461:6:32"},"nativeSrc":"1461:20:32","nodeType":"YulFunctionCall","src":"1461:20:32"},"variables":[{"name":"mm","nativeSrc":"1455:2:32","nodeType":"YulTypedName","src":"1455:2:32","type":""}]},{"nativeSrc":"1494:16:32","nodeType":"YulAssignment","src":"1494:16:32","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:32","nodeType":"YulIdentifier","src":"1505:1:32"},{"name":"b","nativeSrc":"1508:1:32","nodeType":"YulIdentifier","src":"1508:1:32"}],"functionName":{"name":"mul","nativeSrc":"1501:3:32","nodeType":"YulIdentifier","src":"1501:3:32"},"nativeSrc":"1501:9:32","nodeType":"YulFunctionCall","src":"1501:9:32"},"variableNames":[{"name":"low","nativeSrc":"1494:3:32","nodeType":"YulIdentifier","src":"1494:3:32"}]},{"nativeSrc":"1523:38:32","nodeType":"YulAssignment","src":"1523:38:32","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:32","nodeType":"YulIdentifier","src":"1539:2:32"},{"name":"low","nativeSrc":"1543:3:32","nodeType":"YulIdentifier","src":"1543:3:32"}],"functionName":{"name":"sub","nativeSrc":"1535:3:32","nodeType":"YulIdentifier","src":"1535:3:32"},"nativeSrc":"1535:12:32","nodeType":"YulFunctionCall","src":"1535:12:32"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:32","nodeType":"YulIdentifier","src":"1552:2:32"},{"name":"low","nativeSrc":"1556:3:32","nodeType":"YulIdentifier","src":"1556:3:32"}],"functionName":{"name":"lt","nativeSrc":"1549:2:32","nodeType":"YulIdentifier","src":"1549:2:32"},"nativeSrc":"1549:11:32","nodeType":"YulFunctionCall","src":"1549:11:32"}],"functionName":{"name":"sub","nativeSrc":"1531:3:32","nodeType":"YulIdentifier","src":"1531:3:32"},"nativeSrc":"1531:30:32","nodeType":"YulFunctionCall","src":"1531:30:32"},"variableNames":[{"name":"high","nativeSrc":"1523:4:32","nodeType":"YulIdentifier","src":"1523:4:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5632,"isOffset":false,"isSlot":false,"src":"1468:1:32","valueSize":1},{"declaration":5632,"isOffset":false,"isSlot":false,"src":"1505:1:32","valueSize":1},{"declaration":5634,"isOffset":false,"isSlot":false,"src":"1471:1:32","valueSize":1},{"declaration":5634,"isOffset":false,"isSlot":false,"src":"1508:1:32","valueSize":1},{"declaration":5637,"isOffset":false,"isSlot":false,"src":"1523:4:32","valueSize":1},{"declaration":5639,"isOffset":false,"isSlot":false,"src":"1494:3:32","valueSize":1},{"declaration":5639,"isOffset":false,"isSlot":false,"src":"1543:3:32","valueSize":1},{"declaration":5639,"isOffset":false,"isSlot":false,"src":"1556:3:32","valueSize":1}],"flags":["memory-safe"],"id":5641,"nodeType":"InlineAssembly","src":"1412:159:32"}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"849:173:32","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:32","nodeType":"FunctionDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"a","nameLocation":"1051:1:32","nodeType":"VariableDeclaration","scope":5643,"src":"1043:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5634,"mutability":"mutable","name":"b","nameLocation":"1062:1:32","nodeType":"VariableDeclaration","scope":5643,"src":"1054:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:32"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"high","nameLocation":"1096:4:32","nodeType":"VariableDeclaration","scope":5643,"src":"1088:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5639,"mutability":"mutable","name":"low","nameLocation":"1110:3:32","nodeType":"VariableDeclaration","scope":5643,"src":"1102:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:32"},"scope":7224,"src":"1027:550:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"1784:149:32","statements":[{"id":5676,"nodeType":"UncheckedBlock","src":"1794:133:32","statements":[{"assignments":[5656],"declarations":[{"constant":false,"id":5656,"mutability":"mutable","name":"c","nameLocation":"1826:1:32","nodeType":"VariableDeclaration","scope":5676,"src":"1818:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5660,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"1830:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"1834:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:32"},{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5661,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"1849:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"1859:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"1864:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"ExpressionStatement","src":"1849:16:32"},{"expression":{"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"1879:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"1888:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"1908:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5669,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"1892:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"1892:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5675,"nodeType":"ExpressionStatement","src":"1879:37:32"}]}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"1583:105:32","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:32","nodeType":"FunctionDefinition","parameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"a","nameLocation":"1717:1:32","nodeType":"VariableDeclaration","scope":5678,"src":"1709:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5648,"mutability":"mutable","name":"b","nameLocation":"1728:1:32","nodeType":"VariableDeclaration","scope":5678,"src":"1720:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:32"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"success","nameLocation":"1759:7:32","nodeType":"VariableDeclaration","scope":5678,"src":"1754:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5650,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5653,"mutability":"mutable","name":"result","nameLocation":"1776:6:32","nodeType":"VariableDeclaration","scope":5678,"src":"1768:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:32"},"scope":7224,"src":"1693:240:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"2143:149:32","statements":[{"id":5711,"nodeType":"UncheckedBlock","src":"2153:133:32","statements":[{"assignments":[5691],"declarations":[{"constant":false,"id":5691,"mutability":"mutable","name":"c","nameLocation":"2185:1:32","nodeType":"VariableDeclaration","scope":5711,"src":"2177:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5695,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"2189:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"2193:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:32"},{"expression":{"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5696,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"2208:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"2218:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"2223:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"ExpressionStatement","src":"2208:16:32"},{"expression":{"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"2238:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"2247:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5706,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"2267:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5704,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"2251:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"2251:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5710,"nodeType":"ExpressionStatement","src":"2238:37:32"}]}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"1939:108:32","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:32","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"a","nameLocation":"2076:1:32","nodeType":"VariableDeclaration","scope":5713,"src":"2068:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5683,"mutability":"mutable","name":"b","nameLocation":"2087:1:32","nodeType":"VariableDeclaration","scope":5713,"src":"2079:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:32"},"returnParameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"success","nameLocation":"2118:7:32","nodeType":"VariableDeclaration","scope":5713,"src":"2113:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5685,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"result","nameLocation":"2135:6:32","nodeType":"VariableDeclaration","scope":5713,"src":"2127:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:32"},"scope":7224,"src":"2052:240:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5742,"nodeType":"Block","src":"2505:391:32","statements":[{"id":5741,"nodeType":"UncheckedBlock","src":"2515:375:32","statements":[{"assignments":[5726],"declarations":[{"constant":false,"id":5726,"mutability":"mutable","name":"c","nameLocation":"2547:1:32","nodeType":"VariableDeclaration","scope":5741,"src":"2539:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5730,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"2551:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5728,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"2555:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:32"},{"AST":{"nativeSrc":"2595:188:32","nodeType":"YulBlock","src":"2595:188:32","statements":[{"nativeSrc":"2727:42:32","nodeType":"YulAssignment","src":"2727:42:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:32","nodeType":"YulIdentifier","src":"2748:1:32"},{"name":"a","nativeSrc":"2751:1:32","nodeType":"YulIdentifier","src":"2751:1:32"}],"functionName":{"name":"div","nativeSrc":"2744:3:32","nodeType":"YulIdentifier","src":"2744:3:32"},"nativeSrc":"2744:9:32","nodeType":"YulFunctionCall","src":"2744:9:32"},{"name":"b","nativeSrc":"2755:1:32","nodeType":"YulIdentifier","src":"2755:1:32"}],"functionName":{"name":"eq","nativeSrc":"2741:2:32","nodeType":"YulIdentifier","src":"2741:2:32"},"nativeSrc":"2741:16:32","nodeType":"YulFunctionCall","src":"2741:16:32"},{"arguments":[{"name":"a","nativeSrc":"2766:1:32","nodeType":"YulIdentifier","src":"2766:1:32"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:32","nodeType":"YulIdentifier","src":"2759:6:32"},"nativeSrc":"2759:9:32","nodeType":"YulFunctionCall","src":"2759:9:32"}],"functionName":{"name":"or","nativeSrc":"2738:2:32","nodeType":"YulIdentifier","src":"2738:2:32"},"nativeSrc":"2738:31:32","nodeType":"YulFunctionCall","src":"2738:31:32"},"variableNames":[{"name":"success","nativeSrc":"2727:7:32","nodeType":"YulIdentifier","src":"2727:7:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5716,"isOffset":false,"isSlot":false,"src":"2751:1:32","valueSize":1},{"declaration":5716,"isOffset":false,"isSlot":false,"src":"2766:1:32","valueSize":1},{"declaration":5718,"isOffset":false,"isSlot":false,"src":"2755:1:32","valueSize":1},{"declaration":5726,"isOffset":false,"isSlot":false,"src":"2748:1:32","valueSize":1},{"declaration":5721,"isOffset":false,"isSlot":false,"src":"2727:7:32","valueSize":1}],"flags":["memory-safe"],"id":5731,"nodeType":"InlineAssembly","src":"2570:213:32"},{"expression":{"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"2842:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5733,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"2851:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"2871:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5734,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"2855:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"2855:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5740,"nodeType":"ExpressionStatement","src":"2842:37:32"}]}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"2298:111:32","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5743,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:32","nodeType":"FunctionDefinition","parameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"a","nameLocation":"2438:1:32","nodeType":"VariableDeclaration","scope":5743,"src":"2430:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5718,"mutability":"mutable","name":"b","nameLocation":"2449:1:32","nodeType":"VariableDeclaration","scope":5743,"src":"2441:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:32"},"returnParameters":{"id":5724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"success","nameLocation":"2480:7:32","nodeType":"VariableDeclaration","scope":5743,"src":"2475:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5720,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5723,"mutability":"mutable","name":"result","nameLocation":"2497:6:32","nodeType":"VariableDeclaration","scope":5743,"src":"2489:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:32"},"scope":7224,"src":"2414:482:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"3111:231:32","statements":[{"id":5762,"nodeType":"UncheckedBlock","src":"3121:215:32","statements":[{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5755,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"3145:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"3155:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5760,"nodeType":"ExpressionStatement","src":"3145:15:32"},{"AST":{"nativeSrc":"3199:127:32","nodeType":"YulBlock","src":"3199:127:32","statements":[{"nativeSrc":"3293:19:32","nodeType":"YulAssignment","src":"3293:19:32","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:32","nodeType":"YulIdentifier","src":"3307:1:32"},{"name":"b","nativeSrc":"3310:1:32","nodeType":"YulIdentifier","src":"3310:1:32"}],"functionName":{"name":"div","nativeSrc":"3303:3:32","nodeType":"YulIdentifier","src":"3303:3:32"},"nativeSrc":"3303:9:32","nodeType":"YulFunctionCall","src":"3303:9:32"},"variableNames":[{"name":"result","nativeSrc":"3293:6:32","nodeType":"YulIdentifier","src":"3293:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5746,"isOffset":false,"isSlot":false,"src":"3307:1:32","valueSize":1},{"declaration":5748,"isOffset":false,"isSlot":false,"src":"3310:1:32","valueSize":1},{"declaration":5753,"isOffset":false,"isSlot":false,"src":"3293:6:32","valueSize":1}],"flags":["memory-safe"],"id":5761,"nodeType":"InlineAssembly","src":"3174:152:32"}]}]},"documentation":{"id":5744,"nodeType":"StructuredDocumentation","src":"2902:113:32","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:32","nodeType":"FunctionDefinition","parameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"a","nameLocation":"3044:1:32","nodeType":"VariableDeclaration","scope":5764,"src":"3036:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5748,"mutability":"mutable","name":"b","nameLocation":"3055:1:32","nodeType":"VariableDeclaration","scope":5764,"src":"3047:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:32"},"returnParameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5751,"mutability":"mutable","name":"success","nameLocation":"3086:7:32","nodeType":"VariableDeclaration","scope":5764,"src":"3081:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5750,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5753,"mutability":"mutable","name":"result","nameLocation":"3103:6:32","nodeType":"VariableDeclaration","scope":5764,"src":"3095:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:32"},"scope":7224,"src":"3020:322:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"3567:231:32","statements":[{"id":5783,"nodeType":"UncheckedBlock","src":"3577:215:32","statements":[{"expression":{"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5776,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"3601:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"3611:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"ExpressionStatement","src":"3601:15:32"},{"AST":{"nativeSrc":"3655:127:32","nodeType":"YulBlock","src":"3655:127:32","statements":[{"nativeSrc":"3749:19:32","nodeType":"YulAssignment","src":"3749:19:32","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:32","nodeType":"YulIdentifier","src":"3763:1:32"},{"name":"b","nativeSrc":"3766:1:32","nodeType":"YulIdentifier","src":"3766:1:32"}],"functionName":{"name":"mod","nativeSrc":"3759:3:32","nodeType":"YulIdentifier","src":"3759:3:32"},"nativeSrc":"3759:9:32","nodeType":"YulFunctionCall","src":"3759:9:32"},"variableNames":[{"name":"result","nativeSrc":"3749:6:32","nodeType":"YulIdentifier","src":"3749:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5767,"isOffset":false,"isSlot":false,"src":"3763:1:32","valueSize":1},{"declaration":5769,"isOffset":false,"isSlot":false,"src":"3766:1:32","valueSize":1},{"declaration":5774,"isOffset":false,"isSlot":false,"src":"3749:6:32","valueSize":1}],"flags":["memory-safe"],"id":5782,"nodeType":"InlineAssembly","src":"3630:152:32"}]}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"3348:123:32","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:32","nodeType":"FunctionDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"a","nameLocation":"3500:1:32","nodeType":"VariableDeclaration","scope":5785,"src":"3492:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5769,"mutability":"mutable","name":"b","nameLocation":"3511:1:32","nodeType":"VariableDeclaration","scope":5785,"src":"3503:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5768,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:32"},"returnParameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"success","nameLocation":"3542:7:32","nodeType":"VariableDeclaration","scope":5785,"src":"3537:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5771,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5774,"mutability":"mutable","name":"result","nameLocation":"3559:6:32","nodeType":"VariableDeclaration","scope":5785,"src":"3551:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:32"},"scope":7224,"src":"3476:322:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5814,"nodeType":"Block","src":"3989:122:32","statements":[{"assignments":[5796,5798],"declarations":[{"constant":false,"id":5796,"mutability":"mutable","name":"success","nameLocation":"4005:7:32","nodeType":"VariableDeclaration","scope":5814,"src":"4000:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5795,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5798,"mutability":"mutable","name":"result","nameLocation":"4022:6:32","nodeType":"VariableDeclaration","scope":5814,"src":"4014:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5797,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5803,"initialValue":{"arguments":[{"id":5800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"4039:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5801,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"4042:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5799,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"4032:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:32"},{"expression":{"arguments":[{"id":5805,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"4069:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4078:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5808,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:32","memberName":"max","nodeType":"MemberAccess","src":"4086:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5804,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"4061:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5794,"id":5813,"nodeType":"Return","src":"4054:50:32"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"3804:103:32","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:32","nodeType":"FunctionDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"a","nameLocation":"3943:1:32","nodeType":"VariableDeclaration","scope":5815,"src":"3935:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5790,"mutability":"mutable","name":"b","nameLocation":"3954:1:32","nodeType":"VariableDeclaration","scope":5815,"src":"3946:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:32"},"returnParameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5815,"src":"3980:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:32"},"scope":7224,"src":"3912:199:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"4294:73:32","statements":[{"assignments":[null,5826],"declarations":[null,{"constant":false,"id":5826,"mutability":"mutable","name":"result","nameLocation":"4315:6:32","nodeType":"VariableDeclaration","scope":5834,"src":"4307:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5831,"initialValue":{"arguments":[{"id":5828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"4332:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"4335:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5827,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"4325:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:32"},{"expression":{"id":5832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"4354:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5824,"id":5833,"nodeType":"Return","src":"4347:13:32"}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"4117:95:32","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:32","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"a","nameLocation":"4248:1:32","nodeType":"VariableDeclaration","scope":5835,"src":"4240:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5820,"mutability":"mutable","name":"b","nameLocation":"4259:1:32","nodeType":"VariableDeclaration","scope":5835,"src":"4251:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:32"},"returnParameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5835,"src":"4285:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:32"},"scope":7224,"src":"4217:150:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5864,"nodeType":"Block","src":"4564:122:32","statements":[{"assignments":[5846,5848],"declarations":[{"constant":false,"id":5846,"mutability":"mutable","name":"success","nameLocation":"4580:7:32","nodeType":"VariableDeclaration","scope":5864,"src":"4575:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5845,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5848,"mutability":"mutable","name":"result","nameLocation":"4597:6:32","nodeType":"VariableDeclaration","scope":5864,"src":"4589:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5853,"initialValue":{"arguments":[{"id":5850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4614:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4617:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5849,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"4607:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:32"},{"expression":{"arguments":[{"id":5855,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"4644:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"4653:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:32","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5857,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:32","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:32","memberName":"max","nodeType":"MemberAccess","src":"4661:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5854,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"4636:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5844,"id":5863,"nodeType":"Return","src":"4629:50:32"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"4373:109:32","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5865,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:32","nodeType":"FunctionDefinition","parameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"a","nameLocation":"4518:1:32","nodeType":"VariableDeclaration","scope":5865,"src":"4510:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5840,"mutability":"mutable","name":"b","nameLocation":"4529:1:32","nodeType":"VariableDeclaration","scope":5865,"src":"4521:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5839,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:32"},"returnParameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5865,"src":"4555:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:32"},"scope":7224,"src":"4487:199:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5891,"nodeType":"Block","src":"5158:207:32","statements":[{"id":5890,"nodeType":"UncheckedBlock","src":"5168:191:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"5306:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"5312:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"5316:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5884,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"5337:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"5321:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"5321:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5876,"id":5889,"nodeType":"Return","src":"5299:49:32"}]}]},"documentation":{"id":5866,"nodeType":"StructuredDocumentation","src":"4692:374:32","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5892,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:32","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"condition","nameLocation":"5093:9:32","nodeType":"VariableDeclaration","scope":5892,"src":"5088:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5867,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5870,"mutability":"mutable","name":"a","nameLocation":"5112:1:32","nodeType":"VariableDeclaration","scope":5892,"src":"5104:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5869,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5872,"mutability":"mutable","name":"b","nameLocation":"5123:1:32","nodeType":"VariableDeclaration","scope":5892,"src":"5115:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:32"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5892,"src":"5149:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:32"},"scope":7224,"src":"5071:294:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5910,"nodeType":"Block","src":"5502:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"5527:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5904,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"5531:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"5534:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"5537:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5902,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"5519:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5901,"id":5909,"nodeType":"Return","src":"5512:27:32"}]},"documentation":{"id":5893,"nodeType":"StructuredDocumentation","src":"5371:59:32","text":" @dev Returns the largest of two numbers."},"id":5911,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:32","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5895,"mutability":"mutable","name":"a","nameLocation":"5456:1:32","nodeType":"VariableDeclaration","scope":5911,"src":"5448:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5897,"mutability":"mutable","name":"b","nameLocation":"5467:1:32","nodeType":"VariableDeclaration","scope":5911,"src":"5459:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5896,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:32"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5911,"src":"5493:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:32"},"scope":7224,"src":"5435:111:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5929,"nodeType":"Block","src":"5684:44:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"5709:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"5713:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5914,"src":"5716:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"5719:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5921,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"5701:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5920,"id":5928,"nodeType":"Return","src":"5694:27:32"}]},"documentation":{"id":5912,"nodeType":"StructuredDocumentation","src":"5552:60:32","text":" @dev Returns the smallest of two numbers."},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:32","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5914,"mutability":"mutable","name":"a","nameLocation":"5638:1:32","nodeType":"VariableDeclaration","scope":5930,"src":"5630:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5913,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5916,"mutability":"mutable","name":"b","nameLocation":"5649:1:32","nodeType":"VariableDeclaration","scope":5930,"src":"5641:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:32"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5930,"src":"5675:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:32"},"scope":7224,"src":"5617:111:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"5912:82:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"5967:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"5971:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"5977:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"5981:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5939,"id":5951,"nodeType":"Return","src":"5959:28:32"}]},"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"5734:102:32","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:32","nodeType":"FunctionDefinition","parameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"a","nameLocation":"5866:1:32","nodeType":"VariableDeclaration","scope":5953,"src":"5858:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5932,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5935,"mutability":"mutable","name":"b","nameLocation":"5877:1:32","nodeType":"VariableDeclaration","scope":5953,"src":"5869:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5934,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:32"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5953,"src":"5903:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:32"},"scope":7224,"src":"5841:153:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5993,"nodeType":"Block","src":"6286:633:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"6300:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5974,"nodeType":"IfStatement","src":"6296:150:32","trueBody":{"id":5973,"nodeType":"Block","src":"6308:138:32","statements":[{"expression":{"arguments":[{"expression":{"id":5969,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"6412:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"6412:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5966,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"6400:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"6400:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5972,"nodeType":"ExpressionStatement","src":"6400:35:32"}]}},{"id":5992,"nodeType":"UncheckedBlock","src":"6829:84:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"6876:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5975,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"6860:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"6860:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"6887:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"6896:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5962,"id":5991,"nodeType":"Return","src":"6853:49:32"}]}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"6000:210:32","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5994,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:32","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"a","nameLocation":"6240:1:32","nodeType":"VariableDeclaration","scope":5994,"src":"6232:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5958,"mutability":"mutable","name":"b","nameLocation":"6251:1:32","nodeType":"VariableDeclaration","scope":5994,"src":"6243:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:32"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5994,"src":"6277:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:32"},"scope":7224,"src":"6215:704:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6129,"nodeType":"Block","src":"7340:3585:32","statements":[{"id":6128,"nodeType":"UncheckedBlock","src":"7350:3569:32","statements":[{"assignments":[6007,6009],"declarations":[{"constant":false,"id":6007,"mutability":"mutable","name":"high","nameLocation":"7383:4:32","nodeType":"VariableDeclaration","scope":6128,"src":"7375:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6009,"mutability":"mutable","name":"low","nameLocation":"7397:3:32","nodeType":"VariableDeclaration","scope":6128,"src":"7389:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6014,"initialValue":{"arguments":[{"id":6011,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"7411:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6012,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"7414:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6010,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"7404:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"7498:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"nodeType":"IfStatement","src":"7494:365:32","trueBody":{"id":6022,"nodeType":"Block","src":"7509:350:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6018,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"7827:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6019,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"7833:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6005,"id":6021,"nodeType":"Return","src":"7820:24:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"7969:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6025,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"7984:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"7965:142:32","trueBody":{"id":6041,"nodeType":"Block","src":"7990:117:32","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"8028:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6034,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"8046:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"8046:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6036,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"8070:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:32","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4004,"src":"8070:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6030,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"8020:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6027,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"8008:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"8008:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6040,"nodeType":"ExpressionStatement","src":"8008:84:32"}]}},{"assignments":[6044],"declarations":[{"constant":false,"id":6044,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:32","nodeType":"VariableDeclaration","scope":6128,"src":"8359:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6045,"nodeType":"VariableDeclarationStatement","src":"8359:17:32"},{"AST":{"nativeSrc":"8415:283:32","nodeType":"YulBlock","src":"8415:283:32","statements":[{"nativeSrc":"8484:38:32","nodeType":"YulAssignment","src":"8484:38:32","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:32","nodeType":"YulIdentifier","src":"8504:1:32"},{"name":"y","nativeSrc":"8507:1:32","nodeType":"YulIdentifier","src":"8507:1:32"},{"name":"denominator","nativeSrc":"8510:11:32","nodeType":"YulIdentifier","src":"8510:11:32"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:32","nodeType":"YulIdentifier","src":"8497:6:32"},"nativeSrc":"8497:25:32","nodeType":"YulFunctionCall","src":"8497:25:32"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:32","nodeType":"YulIdentifier","src":"8484:9:32"}]},{"nativeSrc":"8604:37:32","nodeType":"YulAssignment","src":"8604:37:32","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:32","nodeType":"YulIdentifier","src":"8616:4:32"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:32","nodeType":"YulIdentifier","src":"8625:9:32"},{"name":"low","nativeSrc":"8636:3:32","nodeType":"YulIdentifier","src":"8636:3:32"}],"functionName":{"name":"gt","nativeSrc":"8622:2:32","nodeType":"YulIdentifier","src":"8622:2:32"},"nativeSrc":"8622:18:32","nodeType":"YulFunctionCall","src":"8622:18:32"}],"functionName":{"name":"sub","nativeSrc":"8612:3:32","nodeType":"YulIdentifier","src":"8612:3:32"},"nativeSrc":"8612:29:32","nodeType":"YulFunctionCall","src":"8612:29:32"},"variableNames":[{"name":"high","nativeSrc":"8604:4:32","nodeType":"YulIdentifier","src":"8604:4:32"}]},{"nativeSrc":"8658:26:32","nodeType":"YulAssignment","src":"8658:26:32","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:32","nodeType":"YulIdentifier","src":"8669:3:32"},{"name":"remainder","nativeSrc":"8674:9:32","nodeType":"YulIdentifier","src":"8674:9:32"}],"functionName":{"name":"sub","nativeSrc":"8665:3:32","nodeType":"YulIdentifier","src":"8665:3:32"},"nativeSrc":"8665:19:32","nodeType":"YulFunctionCall","src":"8665:19:32"},"variableNames":[{"name":"low","nativeSrc":"8658:3:32","nodeType":"YulIdentifier","src":"8658:3:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6001,"isOffset":false,"isSlot":false,"src":"8510:11:32","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"8604:4:32","valueSize":1},{"declaration":6007,"isOffset":false,"isSlot":false,"src":"8616:4:32","valueSize":1},{"declaration":6009,"isOffset":false,"isSlot":false,"src":"8636:3:32","valueSize":1},{"declaration":6009,"isOffset":false,"isSlot":false,"src":"8658:3:32","valueSize":1},{"declaration":6009,"isOffset":false,"isSlot":false,"src":"8669:3:32","valueSize":1},{"declaration":6044,"isOffset":false,"isSlot":false,"src":"8484:9:32","valueSize":1},{"declaration":6044,"isOffset":false,"isSlot":false,"src":"8625:9:32","valueSize":1},{"declaration":6044,"isOffset":false,"isSlot":false,"src":"8674:9:32","valueSize":1},{"declaration":5997,"isOffset":false,"isSlot":false,"src":"8504:1:32","valueSize":1},{"declaration":5999,"isOffset":false,"isSlot":false,"src":"8507:1:32","valueSize":1}],"flags":["memory-safe"],"id":6046,"nodeType":"InlineAssembly","src":"8390:308:32"},{"assignments":[6048],"declarations":[{"constant":false,"id":6048,"mutability":"mutable","name":"twos","nameLocation":"8910:4:32","nodeType":"VariableDeclaration","scope":6128,"src":"8902:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6047,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6049,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"8917:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"8936:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:32"},{"AST":{"nativeSrc":"8987:359:32","nodeType":"YulBlock","src":"8987:359:32","statements":[{"nativeSrc":"9052:37:32","nodeType":"YulAssignment","src":"9052:37:32","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:32","nodeType":"YulIdentifier","src":"9071:11:32"},{"name":"twos","nativeSrc":"9084:4:32","nodeType":"YulIdentifier","src":"9084:4:32"}],"functionName":{"name":"div","nativeSrc":"9067:3:32","nodeType":"YulIdentifier","src":"9067:3:32"},"nativeSrc":"9067:22:32","nodeType":"YulFunctionCall","src":"9067:22:32"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:32","nodeType":"YulIdentifier","src":"9052:11:32"}]},{"nativeSrc":"9153:21:32","nodeType":"YulAssignment","src":"9153:21:32","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:32","nodeType":"YulIdentifier","src":"9164:3:32"},{"name":"twos","nativeSrc":"9169:4:32","nodeType":"YulIdentifier","src":"9169:4:32"}],"functionName":{"name":"div","nativeSrc":"9160:3:32","nodeType":"YulIdentifier","src":"9160:3:32"},"nativeSrc":"9160:14:32","nodeType":"YulFunctionCall","src":"9160:14:32"},"variableNames":[{"name":"low","nativeSrc":"9153:3:32","nodeType":"YulIdentifier","src":"9153:3:32"}]},{"nativeSrc":"9293:39:32","nodeType":"YulAssignment","src":"9293:39:32","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:32","nodeType":"YulLiteral","src":"9313:1:32","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:32","nodeType":"YulIdentifier","src":"9316:4:32"}],"functionName":{"name":"sub","nativeSrc":"9309:3:32","nodeType":"YulIdentifier","src":"9309:3:32"},"nativeSrc":"9309:12:32","nodeType":"YulFunctionCall","src":"9309:12:32"},{"name":"twos","nativeSrc":"9323:4:32","nodeType":"YulIdentifier","src":"9323:4:32"}],"functionName":{"name":"div","nativeSrc":"9305:3:32","nodeType":"YulIdentifier","src":"9305:3:32"},"nativeSrc":"9305:23:32","nodeType":"YulFunctionCall","src":"9305:23:32"},{"kind":"number","nativeSrc":"9330:1:32","nodeType":"YulLiteral","src":"9330:1:32","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:32","nodeType":"YulIdentifier","src":"9301:3:32"},"nativeSrc":"9301:31:32","nodeType":"YulFunctionCall","src":"9301:31:32"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:32","nodeType":"YulIdentifier","src":"9293:4:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6001,"isOffset":false,"isSlot":false,"src":"9052:11:32","valueSize":1},{"declaration":6001,"isOffset":false,"isSlot":false,"src":"9071:11:32","valueSize":1},{"declaration":6009,"isOffset":false,"isSlot":false,"src":"9153:3:32","valueSize":1},{"declaration":6009,"isOffset":false,"isSlot":false,"src":"9164:3:32","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"9084:4:32","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"9169:4:32","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"9293:4:32","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"9316:4:32","valueSize":1},{"declaration":6048,"isOffset":false,"isSlot":false,"src":"9323:4:32","valueSize":1}],"flags":["memory-safe"],"id":6056,"nodeType":"InlineAssembly","src":"8962:384:32"},{"expression":{"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6057,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"9409:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"9416:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6059,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"9423:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6062,"nodeType":"ExpressionStatement","src":"9409:18:32"},{"assignments":[6064],"declarations":[{"constant":false,"id":6064,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:32","nodeType":"VariableDeclaration","scope":6128,"src":"9762:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6063,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6071,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6066,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"9785:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:32"},{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6072,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10018:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6074,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"10033:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6075,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10047:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6079,"nodeType":"ExpressionStatement","src":"10018:36:32"},{"expression":{"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6080,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10088:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"10103:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6083,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10117:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6087,"nodeType":"ExpressionStatement","src":"10088:36:32"},{"expression":{"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6088,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10160:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6090,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"10175:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6091,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10189:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6095,"nodeType":"ExpressionStatement","src":"10160:36:32"},{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10231:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"10246:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6099,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10260:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6103,"nodeType":"ExpressionStatement","src":"10231:36:32"},{"expression":{"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10304:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"10319:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10333:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6111,"nodeType":"ExpressionStatement","src":"10304:36:32"},{"expression":{"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10378:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6114,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"10393:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10407:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6119,"nodeType":"ExpressionStatement","src":"10378:36:32"},{"expression":{"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"10859:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"10868:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6122,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"10874:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6125,"nodeType":"ExpressionStatement","src":"10859:22:32"},{"expression":{"id":6126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"10902:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6005,"id":6127,"nodeType":"Return","src":"10895:13:32"}]}]},"documentation":{"id":5995,"nodeType":"StructuredDocumentation","src":"6925:312:32","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6130,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:32","nodeType":"FunctionDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"x","nameLocation":"7266:1:32","nodeType":"VariableDeclaration","scope":6130,"src":"7258:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5999,"mutability":"mutable","name":"y","nameLocation":"7277:1:32","nodeType":"VariableDeclaration","scope":6130,"src":"7269:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6001,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:32","nodeType":"VariableDeclaration","scope":6130,"src":"7280:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6000,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:32"},"returnParameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"result","nameLocation":"7332:6:32","nodeType":"VariableDeclaration","scope":6130,"src":"7324:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:32"},"scope":7224,"src":"7242:3683:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"11164:128:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6146,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"11188:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6147,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"11191:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6148,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"11194:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6145,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6130,6167],"referencedDeclaration":6130,"src":"11181:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6153,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"11242:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":6152,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"11225:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5615_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6156,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"11262:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6157,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"11265:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6158,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"11268:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6155,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:32","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6150,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"11209:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"11209:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6144,"id":6165,"nodeType":"Return","src":"11174:111:32"}]},"documentation":{"id":6131,"nodeType":"StructuredDocumentation","src":"10931:118:32","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:32","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"x","nameLocation":"11078:1:32","nodeType":"VariableDeclaration","scope":6167,"src":"11070:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"y","nameLocation":"11089:1:32","nodeType":"VariableDeclaration","scope":6167,"src":"11081:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:32","nodeType":"VariableDeclaration","scope":6167,"src":"11092:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6140,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:32","nodeType":"VariableDeclaration","scope":6167,"src":"11113:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":6139,"nodeType":"UserDefinedTypeName","pathNode":{"id":6138,"name":"Rounding","nameLocations":["11113:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"11113:8:32"},"referencedDeclaration":5615,"src":"11113:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:32"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6167,"src":"11155:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:32"},"scope":7224,"src":"11054:238:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6216,"nodeType":"Block","src":"11500:245:32","statements":[{"id":6215,"nodeType":"UncheckedBlock","src":"11510:229:32","statements":[{"assignments":[6180,6182],"declarations":[{"constant":false,"id":6180,"mutability":"mutable","name":"high","nameLocation":"11543:4:32","nodeType":"VariableDeclaration","scope":6215,"src":"11535:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6182,"mutability":"mutable","name":"low","nameLocation":"11557:3:32","nodeType":"VariableDeclaration","scope":6215,"src":"11549:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6187,"initialValue":{"arguments":[{"id":6184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"11571:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6185,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"11574:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6183,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"11564:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"11594:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6190,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"11607:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"IfStatement","src":"11590:86:32","trueBody":{"id":6200,"nodeType":"Block","src":"11610:66:32","statements":[{"expression":{"arguments":[{"expression":{"id":6196,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"11640:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:32","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4004,"src":"11640:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6193,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"11628:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"11628:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6199,"nodeType":"ExpressionStatement","src":"11628:33:32"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6202,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"11697:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:32","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6204,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"11712:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"11719:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6210,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"11726:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6178,"id":6214,"nodeType":"Return","src":"11689:39:32"}]}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"11298:111:32","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6217,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:32","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"x","nameLocation":"11438:1:32","nodeType":"VariableDeclaration","scope":6217,"src":"11430:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"y","nameLocation":"11449:1:32","nodeType":"VariableDeclaration","scope":6217,"src":"11441:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6174,"mutability":"mutable","name":"n","nameLocation":"11458:1:32","nodeType":"VariableDeclaration","scope":6217,"src":"11452:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6173,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:32"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"result","nameLocation":"11492:6:32","nodeType":"VariableDeclaration","scope":6217,"src":"11484:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6176,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:32"},"scope":7224,"src":"11414:331:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6255,"nodeType":"Block","src":"11963:113:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6233,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"11987:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6234,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"11990:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6235,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"11993:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6232,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6217,6256],"referencedDeclaration":6217,"src":"11980:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6240,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"12031:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":6239,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"12014:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5615_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6243,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"12051:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6244,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"12054:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6246,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"12062:1:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:32","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6237,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"11998:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"11998:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6231,"id":6254,"nodeType":"Return","src":"11973:96:32"}]},"documentation":{"id":6218,"nodeType":"StructuredDocumentation","src":"11751:109:32","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6256,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:32","nodeType":"FunctionDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6220,"mutability":"mutable","name":"x","nameLocation":"11889:1:32","nodeType":"VariableDeclaration","scope":6256,"src":"11881:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6222,"mutability":"mutable","name":"y","nameLocation":"11900:1:32","nodeType":"VariableDeclaration","scope":6256,"src":"11892:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6221,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6224,"mutability":"mutable","name":"n","nameLocation":"11909:1:32","nodeType":"VariableDeclaration","scope":6256,"src":"11903:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6223,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6227,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:32","nodeType":"VariableDeclaration","scope":6256,"src":"11912:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":6226,"nodeType":"UserDefinedTypeName","pathNode":{"id":6225,"name":"Rounding","nameLocations":["11912:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"11912:8:32"},"referencedDeclaration":5615,"src":"11912:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:32"},"returnParameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6256,"src":"11954:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:32"},"scope":7224,"src":"11865:211:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6352,"nodeType":"Block","src":"12710:1849:32","statements":[{"id":6351,"nodeType":"UncheckedBlock","src":"12720:1833:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"12748:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6271,"nodeType":"IfStatement","src":"12744:20:32","trueBody":{"expression":{"hexValue":"30","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6265,"id":6270,"nodeType":"Return","src":"12756:8:32"}},{"assignments":[6273],"declarations":[{"constant":false,"id":6273,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:32","nodeType":"VariableDeclaration","scope":6351,"src":"13235:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6277,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"13255:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6275,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"13259:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:32"},{"assignments":[6279],"declarations":[{"constant":false,"id":6279,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:32","nodeType":"VariableDeclaration","scope":6351,"src":"13274:11:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6281,"initialValue":{"id":6280,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"13288:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:32"},{"assignments":[6283],"declarations":[{"constant":false,"id":6283,"mutability":"mutable","name":"x","nameLocation":"13432:1:32","nodeType":"VariableDeclaration","scope":6351,"src":"13425:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6282,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6285,"initialValue":{"hexValue":"30","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:32"},{"assignments":[6287],"declarations":[{"constant":false,"id":6287,"mutability":"mutable","name":"y","nameLocation":"13458:1:32","nodeType":"VariableDeclaration","scope":6351,"src":"13451:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6286,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6289,"initialValue":{"hexValue":"31","id":6288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:32"},{"body":{"id":6326,"nodeType":"Block","src":"13501:882:32","statements":[{"assignments":[6294],"declarations":[{"constant":false,"id":6294,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:32","nodeType":"VariableDeclaration","scope":6326,"src":"13519:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"13538:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6296,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"13544:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:32"},{"expression":{"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6299,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"13573:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6300,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"13578:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6301,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6302,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"13678:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"13923:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"13929:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6305,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"13941:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"ExpressionStatement","src":"13572:395:32"},{"expression":{"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6311,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"13987:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6312,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"13990:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6313,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6314,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"14072:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6315,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"14326:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"14330:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6319,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"14341:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6317,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:32","typeDescriptions":{}}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:32","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6325,"nodeType":"ExpressionStatement","src":"13986:382:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6290,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"13485:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6327,"nodeType":"WhileStatement","src":"13478:905:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"14401:3:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6333,"nodeType":"IfStatement","src":"14397:22:32","trueBody":{"expression":{"hexValue":"30","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6265,"id":6332,"nodeType":"Return","src":"14411:8:32"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"14470:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"14477:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:32","subExpression":{"id":6341,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"14490:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:32","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6347,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"14502:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:32","typeDescriptions":{}}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"14462:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6265,"id":6350,"nodeType":"Return","src":"14455:50:32"}]}]},"documentation":{"id":6257,"nodeType":"StructuredDocumentation","src":"12082:553:32","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6353,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:32","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"a","nameLocation":"12664:1:32","nodeType":"VariableDeclaration","scope":6353,"src":"12656:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6261,"mutability":"mutable","name":"n","nameLocation":"12675:1:32","nodeType":"VariableDeclaration","scope":6353,"src":"12667:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6260,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:32"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6353,"src":"12701:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6263,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:32"},"scope":7224,"src":"12640:1919:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6373,"nodeType":"Block","src":"15159:82:32","statements":[{"id":6372,"nodeType":"UncheckedBlock","src":"15169:66:32","statements":[{"expression":{"arguments":[{"id":6365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6356,"src":"15212:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"15215:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6369,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"15222:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6363,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"15200:4:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7224_$","typeString":"type(library Math)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:32","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6410,"src":"15200:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6362,"id":6371,"nodeType":"Return","src":"15193:31:32"}]}]},"documentation":{"id":6354,"nodeType":"StructuredDocumentation","src":"14565:514:32","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6374,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:32","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"a","nameLocation":"15113:1:32","nodeType":"VariableDeclaration","scope":6374,"src":"15105:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6358,"mutability":"mutable","name":"p","nameLocation":"15124:1:32","nodeType":"VariableDeclaration","scope":6374,"src":"15116:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6357,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:32"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6374,"src":"15150:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6360,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:32"},"scope":7224,"src":"15084:157:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6409,"nodeType":"Block","src":"16011:174:32","statements":[{"assignments":[6387,6389],"declarations":[{"constant":false,"id":6387,"mutability":"mutable","name":"success","nameLocation":"16027:7:32","nodeType":"VariableDeclaration","scope":6409,"src":"16022:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6386,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6389,"mutability":"mutable","name":"result","nameLocation":"16044:6:32","nodeType":"VariableDeclaration","scope":6409,"src":"16036:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6388,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6395,"initialValue":{"arguments":[{"id":6391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"16064:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6392,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"16067:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6393,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"16070:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6434,6516],"referencedDeclaration":6434,"src":"16054:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:32"},{"condition":{"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:32","subExpression":{"id":6396,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"16087:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6406,"nodeType":"IfStatement","src":"16082:74:32","trueBody":{"id":6405,"nodeType":"Block","src":"16096:60:32","statements":[{"expression":{"arguments":[{"expression":{"id":6401,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"16122:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"16122:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6398,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"16110:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"16110:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6404,"nodeType":"ExpressionStatement","src":"16110:35:32"}]}},{"expression":{"id":6407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"16172:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6385,"id":6408,"nodeType":"Return","src":"16165:13:32"}]},"documentation":{"id":6375,"nodeType":"StructuredDocumentation","src":"15247:678:32","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6410,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:32","nodeType":"FunctionDefinition","parameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"b","nameLocation":"15954:1:32","nodeType":"VariableDeclaration","scope":6410,"src":"15946:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6379,"mutability":"mutable","name":"e","nameLocation":"15965:1:32","nodeType":"VariableDeclaration","scope":6410,"src":"15957:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6381,"mutability":"mutable","name":"m","nameLocation":"15976:1:32","nodeType":"VariableDeclaration","scope":6410,"src":"15968:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6380,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:32"},"returnParameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6410,"src":"16002:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6383,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:32"},"scope":7224,"src":"15930:255:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6433,"nodeType":"Block","src":"17039:1493:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"17053:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6431,"nodeType":"IfStatement","src":"17049:29:32","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6423,"id":6430,"nodeType":"Return","src":"17061:17:32"}},{"AST":{"nativeSrc":"17113:1413:32","nodeType":"YulBlock","src":"17113:1413:32","statements":[{"nativeSrc":"17127:22:32","nodeType":"YulVariableDeclaration","src":"17127:22:32","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:32","nodeType":"YulLiteral","src":"17144:4:32","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:32","nodeType":"YulIdentifier","src":"17138:5:32"},"nativeSrc":"17138:11:32","nodeType":"YulFunctionCall","src":"17138:11:32"},"variables":[{"name":"ptr","nativeSrc":"17131:3:32","nodeType":"YulTypedName","src":"17131:3:32","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:32","nodeType":"YulIdentifier","src":"18057:3:32"},{"kind":"number","nativeSrc":"18062:4:32","nodeType":"YulLiteral","src":"18062:4:32","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:32","nodeType":"YulIdentifier","src":"18050:6:32"},"nativeSrc":"18050:17:32","nodeType":"YulFunctionCall","src":"18050:17:32"},"nativeSrc":"18050:17:32","nodeType":"YulExpressionStatement","src":"18050:17:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:32","nodeType":"YulIdentifier","src":"18091:3:32"},{"kind":"number","nativeSrc":"18096:4:32","nodeType":"YulLiteral","src":"18096:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:32","nodeType":"YulIdentifier","src":"18087:3:32"},"nativeSrc":"18087:14:32","nodeType":"YulFunctionCall","src":"18087:14:32"},{"kind":"number","nativeSrc":"18103:4:32","nodeType":"YulLiteral","src":"18103:4:32","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:32","nodeType":"YulIdentifier","src":"18080:6:32"},"nativeSrc":"18080:28:32","nodeType":"YulFunctionCall","src":"18080:28:32"},"nativeSrc":"18080:28:32","nodeType":"YulExpressionStatement","src":"18080:28:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:32","nodeType":"YulIdentifier","src":"18132:3:32"},{"kind":"number","nativeSrc":"18137:4:32","nodeType":"YulLiteral","src":"18137:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:32","nodeType":"YulIdentifier","src":"18128:3:32"},"nativeSrc":"18128:14:32","nodeType":"YulFunctionCall","src":"18128:14:32"},{"kind":"number","nativeSrc":"18144:4:32","nodeType":"YulLiteral","src":"18144:4:32","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:32","nodeType":"YulIdentifier","src":"18121:6:32"},"nativeSrc":"18121:28:32","nodeType":"YulFunctionCall","src":"18121:28:32"},"nativeSrc":"18121:28:32","nodeType":"YulExpressionStatement","src":"18121:28:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:32","nodeType":"YulIdentifier","src":"18173:3:32"},{"kind":"number","nativeSrc":"18178:4:32","nodeType":"YulLiteral","src":"18178:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:32","nodeType":"YulIdentifier","src":"18169:3:32"},"nativeSrc":"18169:14:32","nodeType":"YulFunctionCall","src":"18169:14:32"},{"name":"b","nativeSrc":"18185:1:32","nodeType":"YulIdentifier","src":"18185:1:32"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:32","nodeType":"YulIdentifier","src":"18162:6:32"},"nativeSrc":"18162:25:32","nodeType":"YulFunctionCall","src":"18162:25:32"},"nativeSrc":"18162:25:32","nodeType":"YulExpressionStatement","src":"18162:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:32","nodeType":"YulIdentifier","src":"18211:3:32"},{"kind":"number","nativeSrc":"18216:4:32","nodeType":"YulLiteral","src":"18216:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:32","nodeType":"YulIdentifier","src":"18207:3:32"},"nativeSrc":"18207:14:32","nodeType":"YulFunctionCall","src":"18207:14:32"},{"name":"e","nativeSrc":"18223:1:32","nodeType":"YulIdentifier","src":"18223:1:32"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:32","nodeType":"YulIdentifier","src":"18200:6:32"},"nativeSrc":"18200:25:32","nodeType":"YulFunctionCall","src":"18200:25:32"},"nativeSrc":"18200:25:32","nodeType":"YulExpressionStatement","src":"18200:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:32","nodeType":"YulIdentifier","src":"18249:3:32"},{"kind":"number","nativeSrc":"18254:4:32","nodeType":"YulLiteral","src":"18254:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:32","nodeType":"YulIdentifier","src":"18245:3:32"},"nativeSrc":"18245:14:32","nodeType":"YulFunctionCall","src":"18245:14:32"},{"name":"m","nativeSrc":"18261:1:32","nodeType":"YulIdentifier","src":"18261:1:32"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:32","nodeType":"YulIdentifier","src":"18238:6:32"},"nativeSrc":"18238:25:32","nodeType":"YulFunctionCall","src":"18238:25:32"},"nativeSrc":"18238:25:32","nodeType":"YulExpressionStatement","src":"18238:25:32"},{"nativeSrc":"18425:57:32","nodeType":"YulAssignment","src":"18425:57:32","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:32","nodeType":"YulIdentifier","src":"18447:3:32"},"nativeSrc":"18447:5:32","nodeType":"YulFunctionCall","src":"18447:5:32"},{"kind":"number","nativeSrc":"18454:4:32","nodeType":"YulLiteral","src":"18454:4:32","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:32","nodeType":"YulIdentifier","src":"18460:3:32"},{"kind":"number","nativeSrc":"18465:4:32","nodeType":"YulLiteral","src":"18465:4:32","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:32","nodeType":"YulLiteral","src":"18471:4:32","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:32","nodeType":"YulLiteral","src":"18477:4:32","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:32","nodeType":"YulIdentifier","src":"18436:10:32"},"nativeSrc":"18436:46:32","nodeType":"YulFunctionCall","src":"18436:46:32"},"variableNames":[{"name":"success","nativeSrc":"18425:7:32","nodeType":"YulIdentifier","src":"18425:7:32"}]},{"nativeSrc":"18495:21:32","nodeType":"YulAssignment","src":"18495:21:32","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:32","nodeType":"YulLiteral","src":"18511:4:32","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:32","nodeType":"YulIdentifier","src":"18505:5:32"},"nativeSrc":"18505:11:32","nodeType":"YulFunctionCall","src":"18505:11:32"},"variableNames":[{"name":"result","nativeSrc":"18495:6:32","nodeType":"YulIdentifier","src":"18495:6:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6413,"isOffset":false,"isSlot":false,"src":"18185:1:32","valueSize":1},{"declaration":6415,"isOffset":false,"isSlot":false,"src":"18223:1:32","valueSize":1},{"declaration":6417,"isOffset":false,"isSlot":false,"src":"18261:1:32","valueSize":1},{"declaration":6422,"isOffset":false,"isSlot":false,"src":"18495:6:32","valueSize":1},{"declaration":6420,"isOffset":false,"isSlot":false,"src":"18425:7:32","valueSize":1}],"flags":["memory-safe"],"id":6432,"nodeType":"InlineAssembly","src":"17088:1438:32"}]},"documentation":{"id":6411,"nodeType":"StructuredDocumentation","src":"16191:738:32","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6434,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:32","nodeType":"FunctionDefinition","parameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"b","nameLocation":"16961:1:32","nodeType":"VariableDeclaration","scope":6434,"src":"16953:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6415,"mutability":"mutable","name":"e","nameLocation":"16972:1:32","nodeType":"VariableDeclaration","scope":6434,"src":"16964:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6414,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6417,"mutability":"mutable","name":"m","nameLocation":"16983:1:32","nodeType":"VariableDeclaration","scope":6434,"src":"16975:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6416,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:32"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"success","nameLocation":"17014:7:32","nodeType":"VariableDeclaration","scope":6434,"src":"17009:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6419,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6422,"mutability":"mutable","name":"result","nameLocation":"17031:6:32","nodeType":"VariableDeclaration","scope":6434,"src":"17023:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:32"},"scope":7224,"src":"16934:1598:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"18729:179:32","statements":[{"assignments":[6447,6449],"declarations":[{"constant":false,"id":6447,"mutability":"mutable","name":"success","nameLocation":"18745:7:32","nodeType":"VariableDeclaration","scope":6469,"src":"18740:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6446,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6449,"mutability":"mutable","name":"result","nameLocation":"18767:6:32","nodeType":"VariableDeclaration","scope":6469,"src":"18754:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6448,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6455,"initialValue":{"arguments":[{"id":6451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"18787:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6452,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"18790:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6453,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"18793:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6450,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6434,6516],"referencedDeclaration":6516,"src":"18777:9:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:32"},{"condition":{"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:32","subExpression":{"id":6456,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"18810:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"18805:74:32","trueBody":{"id":6465,"nodeType":"Block","src":"18819:60:32","statements":[{"expression":{"arguments":[{"expression":{"id":6461,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"18845:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:32","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"18845:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6458,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"18833:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4041_$","typeString":"type(library Panic)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:32","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"18833:11:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"ExpressionStatement","src":"18833:35:32"}]}},{"expression":{"id":6467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"18895:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6445,"id":6468,"nodeType":"Return","src":"18888:13:32"}]},"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"18538:85:32","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:32","nodeType":"FunctionDefinition","parameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"b","nameLocation":"18657:1:32","nodeType":"VariableDeclaration","scope":6470,"src":"18644:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6436,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6439,"mutability":"mutable","name":"e","nameLocation":"18673:1:32","nodeType":"VariableDeclaration","scope":6470,"src":"18660:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6438,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6441,"mutability":"mutable","name":"m","nameLocation":"18689:1:32","nodeType":"VariableDeclaration","scope":6470,"src":"18676:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6440,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:32"},"returnParameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"18715:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6443,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:32"},"scope":7224,"src":"18628:280:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6515,"nodeType":"Block","src":"19162:771:32","statements":[{"condition":{"arguments":[{"id":6485,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"19187:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6484,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"19176:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6494,"nodeType":"IfStatement","src":"19172:47:32","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:32","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6488,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6483,"id":6493,"nodeType":"Return","src":"19191:28:32"}},{"assignments":[6496],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:32","nodeType":"VariableDeclaration","scope":6515,"src":"19230:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6499,"initialValue":{"expression":{"id":6497,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"19245:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:32","memberName":"length","nodeType":"MemberAccess","src":"19245:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:32"},{"expression":{"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"19335:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6503,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"19361:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:32","memberName":"length","nodeType":"MemberAccess","src":"19361:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6505,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"19371:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:32","memberName":"length","nodeType":"MemberAccess","src":"19371:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6507,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"19381:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"19387:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6509,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"19390:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6510,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"19393:1:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6501,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6513,"nodeType":"ExpressionStatement","src":"19335:60:32"},{"AST":{"nativeSrc":"19431:496:32","nodeType":"YulBlock","src":"19431:496:32","statements":[{"nativeSrc":"19445:32:32","nodeType":"YulVariableDeclaration","src":"19445:32:32","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:32","nodeType":"YulIdentifier","src":"19464:6:32"},{"kind":"number","nativeSrc":"19472:4:32","nodeType":"YulLiteral","src":"19472:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:32","nodeType":"YulIdentifier","src":"19460:3:32"},"nativeSrc":"19460:17:32","nodeType":"YulFunctionCall","src":"19460:17:32"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:32","nodeType":"YulTypedName","src":"19449:7:32","type":""}]},{"nativeSrc":"19567:73:32","nodeType":"YulAssignment","src":"19567:73:32","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:32","nodeType":"YulIdentifier","src":"19589:3:32"},"nativeSrc":"19589:5:32","nodeType":"YulFunctionCall","src":"19589:5:32"},{"kind":"number","nativeSrc":"19596:4:32","nodeType":"YulLiteral","src":"19596:4:32","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:32","nodeType":"YulIdentifier","src":"19602:7:32"},{"arguments":[{"name":"result","nativeSrc":"19617:6:32","nodeType":"YulIdentifier","src":"19617:6:32"}],"functionName":{"name":"mload","nativeSrc":"19611:5:32","nodeType":"YulIdentifier","src":"19611:5:32"},"nativeSrc":"19611:13:32","nodeType":"YulFunctionCall","src":"19611:13:32"},{"name":"dataPtr","nativeSrc":"19626:7:32","nodeType":"YulIdentifier","src":"19626:7:32"},{"name":"mLen","nativeSrc":"19635:4:32","nodeType":"YulIdentifier","src":"19635:4:32"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:32","nodeType":"YulIdentifier","src":"19578:10:32"},"nativeSrc":"19578:62:32","nodeType":"YulFunctionCall","src":"19578:62:32"},"variableNames":[{"name":"success","nativeSrc":"19567:7:32","nodeType":"YulIdentifier","src":"19567:7:32"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:32","nodeType":"YulIdentifier","src":"19796:6:32"},{"name":"mLen","nativeSrc":"19804:4:32","nodeType":"YulIdentifier","src":"19804:4:32"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:32","nodeType":"YulIdentifier","src":"19789:6:32"},"nativeSrc":"19789:20:32","nodeType":"YulFunctionCall","src":"19789:20:32"},"nativeSrc":"19789:20:32","nodeType":"YulExpressionStatement","src":"19789:20:32"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:32","nodeType":"YulLiteral","src":"19892:4:32","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:32","nodeType":"YulIdentifier","src":"19902:7:32"},{"name":"mLen","nativeSrc":"19911:4:32","nodeType":"YulIdentifier","src":"19911:4:32"}],"functionName":{"name":"add","nativeSrc":"19898:3:32","nodeType":"YulIdentifier","src":"19898:3:32"},"nativeSrc":"19898:18:32","nodeType":"YulFunctionCall","src":"19898:18:32"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:32","nodeType":"YulIdentifier","src":"19885:6:32"},"nativeSrc":"19885:32:32","nodeType":"YulFunctionCall","src":"19885:32:32"},"nativeSrc":"19885:32:32","nodeType":"YulExpressionStatement","src":"19885:32:32"}]},"evmVersion":"paris","externalReferences":[{"declaration":6496,"isOffset":false,"isSlot":false,"src":"19635:4:32","valueSize":1},{"declaration":6496,"isOffset":false,"isSlot":false,"src":"19804:4:32","valueSize":1},{"declaration":6496,"isOffset":false,"isSlot":false,"src":"19911:4:32","valueSize":1},{"declaration":6482,"isOffset":false,"isSlot":false,"src":"19464:6:32","valueSize":1},{"declaration":6482,"isOffset":false,"isSlot":false,"src":"19617:6:32","valueSize":1},{"declaration":6482,"isOffset":false,"isSlot":false,"src":"19796:6:32","valueSize":1},{"declaration":6480,"isOffset":false,"isSlot":false,"src":"19567:7:32","valueSize":1}],"flags":["memory-safe"],"id":6514,"nodeType":"InlineAssembly","src":"19406:521:32"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"18914:88:32","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6516,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:32","nodeType":"FunctionDefinition","parameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"b","nameLocation":"19048:1:32","nodeType":"VariableDeclaration","scope":6516,"src":"19035:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6472,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"e","nameLocation":"19072:1:32","nodeType":"VariableDeclaration","scope":6516,"src":"19059:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6474,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6477,"mutability":"mutable","name":"m","nameLocation":"19096:1:32","nodeType":"VariableDeclaration","scope":6516,"src":"19083:14:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6476,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:32"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"success","nameLocation":"19132:7:32","nodeType":"VariableDeclaration","scope":6516,"src":"19127:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6479,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6482,"mutability":"mutable","name":"result","nameLocation":"19154:6:32","nodeType":"VariableDeclaration","scope":6516,"src":"19141:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6481,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:32"},"scope":7224,"src":"19007:926:32","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6548,"nodeType":"Block","src":"20088:176:32","statements":[{"body":{"id":6544,"nodeType":"Block","src":"20145:92:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6535,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"20163:9:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6537,"indexExpression":{"id":6536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"20173:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:32","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6543,"nodeType":"IfStatement","src":"20159:68:32","trueBody":{"id":6542,"nodeType":"Block","src":"20182:45:32","statements":[{"expression":{"hexValue":"66616c7365","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6523,"id":6541,"nodeType":"Return","src":"20200:12:32"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"20118:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6529,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"20122:9:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:32","memberName":"length","nodeType":"MemberAccess","src":"20122:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6545,"initializationExpression":{"assignments":[6525],"declarations":[{"constant":false,"id":6525,"mutability":"mutable","name":"i","nameLocation":"20111:1:32","nodeType":"VariableDeclaration","scope":6545,"src":"20103:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6524,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6527,"initialValue":{"hexValue":"30","id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:32","subExpression":{"id":6532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"20142:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6534,"nodeType":"ExpressionStatement","src":"20140:3:32"},"nodeType":"ForStatement","src":"20098:139:32"},{"expression":{"hexValue":"74727565","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6523,"id":6547,"nodeType":"Return","src":"20246:11:32"}]},"documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"19939:72:32","text":" @dev Returns whether the provided byte array is zero."},"id":6549,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:32","nodeType":"FunctionDefinition","parameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:32","nodeType":"VariableDeclaration","scope":6549,"src":"20036:22:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6518,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:32"},"returnParameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6549,"src":"20082:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6521,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:32"},"scope":7224,"src":"20016:248:32","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6767,"nodeType":"Block","src":"20624:5124:32","statements":[{"id":6766,"nodeType":"UncheckedBlock","src":"20634:5108:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"20728:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6563,"nodeType":"IfStatement","src":"20724:53:32","trueBody":{"id":6562,"nodeType":"Block","src":"20736:41:32","statements":[{"expression":{"id":6560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"20761:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6556,"id":6561,"nodeType":"Return","src":"20754:8:32"}]}},{"assignments":[6565],"declarations":[{"constant":false,"id":6565,"mutability":"mutable","name":"aa","nameLocation":"21712:2:32","nodeType":"VariableDeclaration","scope":6766,"src":"21704:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6564,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6567,"initialValue":{"id":6566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"21717:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:32"},{"assignments":[6569],"declarations":[{"constant":false,"id":6569,"mutability":"mutable","name":"xn","nameLocation":"21740:2:32","nodeType":"VariableDeclaration","scope":6766,"src":"21732:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6568,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6571,"initialValue":{"hexValue":"31","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:32"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6572,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"21765:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:32","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6587,"nodeType":"IfStatement","src":"21761:92:32","trueBody":{"id":6586,"nodeType":"Block","src":"21783:70:32","statements":[{"expression":{"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6578,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"21801:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:32","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6581,"nodeType":"ExpressionStatement","src":"21801:10:32"},{"expression":{"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6582,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"21829:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6585,"nodeType":"ExpressionStatement","src":"21829:9:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6588,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"21870:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6603,"nodeType":"IfStatement","src":"21866:90:32","trueBody":{"id":6602,"nodeType":"Block","src":"21887:69:32","statements":[{"expression":{"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6594,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"21905:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6597,"nodeType":"ExpressionStatement","src":"21905:9:32"},{"expression":{"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6598,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"21932:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6601,"nodeType":"ExpressionStatement","src":"21932:9:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6604,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"21973:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6619,"nodeType":"IfStatement","src":"21969:90:32","trueBody":{"id":6618,"nodeType":"Block","src":"21990:69:32","statements":[{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6610,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22008:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6613,"nodeType":"ExpressionStatement","src":"22008:9:32"},{"expression":{"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22035:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6617,"nodeType":"ExpressionStatement","src":"22035:9:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22076:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:32","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:32","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6635,"nodeType":"IfStatement","src":"22072:89:32","trueBody":{"id":6634,"nodeType":"Block","src":"22093:68:32","statements":[{"expression":{"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6626,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22111:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6629,"nodeType":"ExpressionStatement","src":"22111:9:32"},{"expression":{"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6630,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22138:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6633,"nodeType":"ExpressionStatement","src":"22138:8:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6636,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22178:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:32","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:32","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6651,"nodeType":"IfStatement","src":"22174:87:32","trueBody":{"id":6650,"nodeType":"Block","src":"22194:67:32","statements":[{"expression":{"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6642,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22212:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6645,"nodeType":"ExpressionStatement","src":"22212:8:32"},{"expression":{"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22238:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6649,"nodeType":"ExpressionStatement","src":"22238:8:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22278:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6667,"nodeType":"IfStatement","src":"22274:87:32","trueBody":{"id":6666,"nodeType":"Block","src":"22294:67:32","statements":[{"expression":{"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6658,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22312:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6661,"nodeType":"ExpressionStatement","src":"22312:8:32"},{"expression":{"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6662,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22338:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6665,"nodeType":"ExpressionStatement","src":"22338:8:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6668,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"22378:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6679,"nodeType":"IfStatement","src":"22374:61:32","trueBody":{"id":6678,"nodeType":"Block","src":"22394:41:32","statements":[{"expression":{"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6674,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22412:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6677,"nodeType":"ExpressionStatement","src":"22412:8:32"}]}},{"expression":{"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6680,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22855:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6682,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"22865:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6688,"nodeType":"ExpressionStatement","src":"22855:18:32"},{"expression":{"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6689,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24760:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24766:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"24771:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6692,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24775:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6699,"nodeType":"ExpressionStatement","src":"24760:23:32"},{"expression":{"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6700,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24869:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6701,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24875:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"24880:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6703,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24884:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6710,"nodeType":"ExpressionStatement","src":"24869:23:32"},{"expression":{"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6711,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24980:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6712,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24986:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"24991:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6714,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"24995:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6721,"nodeType":"ExpressionStatement","src":"24980:23:32"},{"expression":{"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6722,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25089:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6723,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25095:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"25100:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6725,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25104:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6732,"nodeType":"ExpressionStatement","src":"25089:23:32"},{"expression":{"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6733,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25199:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25205:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6735,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"25210:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6736,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25214:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6743,"nodeType":"ExpressionStatement","src":"25199:23:32"},{"expression":{"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6744,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25309:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6745,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25315:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"25320:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6747,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25324:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6754,"nodeType":"ExpressionStatement","src":"25309:23:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6755,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25698:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6758,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25719:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"25724:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6760,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"25728:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6756,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"25703:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"25703:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6556,"id":6765,"nodeType":"Return","src":"25691:40:32"}]}]},"documentation":{"id":6550,"nodeType":"StructuredDocumentation","src":"20270:292:32","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6768,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:32","nodeType":"FunctionDefinition","parameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"a","nameLocation":"20589:1:32","nodeType":"VariableDeclaration","scope":6768,"src":"20581:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6551,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:32"},"returnParameters":{"id":6556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6768,"src":"20615:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6554,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:32"},"scope":7224,"src":"20567:5181:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"25921:171:32","statements":[{"id":6800,"nodeType":"UncheckedBlock","src":"25931:155:32","statements":[{"assignments":[6780],"declarations":[{"constant":false,"id":6780,"mutability":"mutable","name":"result","nameLocation":"25963:6:32","nodeType":"VariableDeclaration","scope":6800,"src":"25955:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6779,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6784,"initialValue":{"arguments":[{"id":6782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"25977:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6781,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6768,6802],"referencedDeclaration":6768,"src":"25972:4:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"26000:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6789,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"26042:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":6788,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"26025:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5615_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"26055:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"26064:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"26073:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6786,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26009:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26009:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6778,"id":6799,"nodeType":"Return","src":"25993:82:32"}]}]},"documentation":{"id":6769,"nodeType":"StructuredDocumentation","src":"25754:86:32","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:32","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"a","nameLocation":"25867:1:32","nodeType":"VariableDeclaration","scope":6802,"src":"25859:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6770,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:32","nodeType":"VariableDeclaration","scope":6802,"src":"25870:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":6773,"nodeType":"UserDefinedTypeName","pathNode":{"id":6772,"name":"Rounding","nameLocations":["25870:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"25870:8:32"},"referencedDeclaration":5615,"src":"25870:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:32"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6802,"src":"25912:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:32"},"scope":7224,"src":"25845:247:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6892,"nodeType":"Block","src":"26281:2334:32","statements":[{"expression":{"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26363:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6813,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"26383:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6811,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26367:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26367:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:32","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6820,"nodeType":"ExpressionStatement","src":"26363:64:32"},{"expression":{"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6821,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26503:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6824,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"26525:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6825,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26530:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6822,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26508:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26508:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:32","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6834,"nodeType":"ExpressionStatement","src":"26503:56:32"},{"expression":{"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6835,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26634:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"26656:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6839,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26661:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6836,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26639:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26639:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:32","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6848,"nodeType":"ExpressionStatement","src":"26634:48:32"},{"expression":{"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6849,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26757:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6852,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"26779:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6853,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26784:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:32","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6850,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26762:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26762:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6862,"nodeType":"ExpressionStatement","src":"26757:44:32"},{"expression":{"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6863,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26874:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"26896:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6867,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26901:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6864,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26879:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26879:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6876,"nodeType":"ExpressionStatement","src":"26874:42:32"},{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6877,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"26988:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"27010:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6881,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"27015:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:32","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6878,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"26993:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"26993:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6890,"nodeType":"ExpressionStatement","src":"26988:41:32"},{"AST":{"nativeSrc":"28490:119:32","nodeType":"YulBlock","src":"28490:119:32","statements":[{"nativeSrc":"28504:95:32","nodeType":"YulAssignment","src":"28504:95:32","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:32","nodeType":"YulIdentifier","src":"28512:1:32"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:32","nodeType":"YulIdentifier","src":"28524:1:32"},{"name":"x","nativeSrc":"28527:1:32","nodeType":"YulIdentifier","src":"28527:1:32"}],"functionName":{"name":"shr","nativeSrc":"28520:3:32","nodeType":"YulIdentifier","src":"28520:3:32"},"nativeSrc":"28520:9:32","nodeType":"YulFunctionCall","src":"28520:9:32"},{"kind":"number","nativeSrc":"28531:66:32","nodeType":"YulLiteral","src":"28531:66:32","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:32","nodeType":"YulIdentifier","src":"28515:4:32"},"nativeSrc":"28515:83:32","nodeType":"YulFunctionCall","src":"28515:83:32"}],"functionName":{"name":"or","nativeSrc":"28509:2:32","nodeType":"YulIdentifier","src":"28509:2:32"},"nativeSrc":"28509:90:32","nodeType":"YulFunctionCall","src":"28509:90:32"},"variableNames":[{"name":"r","nativeSrc":"28504:1:32","nodeType":"YulIdentifier","src":"28504:1:32"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6808,"isOffset":false,"isSlot":false,"src":"28504:1:32","valueSize":1},{"declaration":6808,"isOffset":false,"isSlot":false,"src":"28512:1:32","valueSize":1},{"declaration":6808,"isOffset":false,"isSlot":false,"src":"28524:1:32","valueSize":1},{"declaration":6805,"isOffset":false,"isSlot":false,"src":"28527:1:32","valueSize":1}],"flags":["memory-safe"],"id":6891,"nodeType":"InlineAssembly","src":"28465:144:32"}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"26098:119:32","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6893,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:32","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"x","nameLocation":"26244:1:32","nodeType":"VariableDeclaration","scope":6893,"src":"26236:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6804,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:32"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"r","nameLocation":"26278:1:32","nodeType":"VariableDeclaration","scope":6893,"src":"26270:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:32"},"scope":7224,"src":"26222:2393:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6926,"nodeType":"Block","src":"28848:175:32","statements":[{"id":6925,"nodeType":"UncheckedBlock","src":"28858:159:32","statements":[{"assignments":[6905],"declarations":[{"constant":false,"id":6905,"mutability":"mutable","name":"result","nameLocation":"28890:6:32","nodeType":"VariableDeclaration","scope":6925,"src":"28882:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6904,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6909,"initialValue":{"arguments":[{"id":6907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"28904:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6906,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6893,6927],"referencedDeclaration":6893,"src":"28899:4:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"28931:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6914,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"28973:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":6913,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"28956:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5615_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"28991:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"29000:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6911,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"28940:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"28940:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6903,"id":6924,"nodeType":"Return","src":"28924:82:32"}]}]},"documentation":{"id":6894,"nodeType":"StructuredDocumentation","src":"28621:142:32","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6927,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:32","nodeType":"FunctionDefinition","parameters":{"id":6900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"value","nameLocation":"28790:5:32","nodeType":"VariableDeclaration","scope":6927,"src":"28782:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6895,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6899,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:32","nodeType":"VariableDeclaration","scope":6927,"src":"28797:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":6898,"nodeType":"UserDefinedTypeName","pathNode":{"id":6897,"name":"Rounding","nameLocations":["28797:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"28797:8:32"},"referencedDeclaration":5615,"src":"28797:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:32"},"returnParameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6927,"src":"28839:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:32"},"scope":7224,"src":"28768:255:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7055,"nodeType":"Block","src":"29216:854:32","statements":[{"assignments":[6936],"declarations":[{"constant":false,"id":6936,"mutability":"mutable","name":"result","nameLocation":"29234:6:32","nodeType":"VariableDeclaration","scope":7055,"src":"29226:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6935,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6938,"initialValue":{"hexValue":"30","id":6937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:32"},{"id":7052,"nodeType":"UncheckedBlock","src":"29254:787:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29282:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6955,"nodeType":"IfStatement","src":"29278:103:32","trueBody":{"id":6954,"nodeType":"Block","src":"29301:80:32","statements":[{"expression":{"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29319:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6949,"nodeType":"ExpressionStatement","src":"29319:17:32"},{"expression":{"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"29354:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:32","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6953,"nodeType":"ExpressionStatement","src":"29354:12:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29398:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6972,"nodeType":"IfStatement","src":"29394:103:32","trueBody":{"id":6971,"nodeType":"Block","src":"29417:80:32","statements":[{"expression":{"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29435:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6966,"nodeType":"ExpressionStatement","src":"29435:17:32"},{"expression":{"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"29470:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:32","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6970,"nodeType":"ExpressionStatement","src":"29470:12:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29514:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6989,"nodeType":"IfStatement","src":"29510:103:32","trueBody":{"id":6988,"nodeType":"Block","src":"29533:80:32","statements":[{"expression":{"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29551:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:32","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6983,"nodeType":"ExpressionStatement","src":"29551:17:32"},{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"29586:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:32","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6987,"nodeType":"ExpressionStatement","src":"29586:12:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29630:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"29626:100:32","trueBody":{"id":7005,"nodeType":"Block","src":"29648:78:32","statements":[{"expression":{"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29666:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7000,"nodeType":"ExpressionStatement","src":"29666:16:32"},{"expression":{"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"29700:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:32","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7004,"nodeType":"ExpressionStatement","src":"29700:11:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29743:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:32","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7023,"nodeType":"IfStatement","src":"29739:100:32","trueBody":{"id":7022,"nodeType":"Block","src":"29761:78:32","statements":[{"expression":{"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29779:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:32","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7017,"nodeType":"ExpressionStatement","src":"29779:16:32"},{"expression":{"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"29813:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7021,"nodeType":"ExpressionStatement","src":"29813:11:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29856:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"29852:100:32","trueBody":{"id":7039,"nodeType":"Block","src":"29874:78:32","statements":[{"expression":{"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29892:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7034,"nodeType":"ExpressionStatement","src":"29892:16:32"},{"expression":{"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"29926:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7038,"nodeType":"ExpressionStatement","src":"29926:11:32"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"29969:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7051,"nodeType":"IfStatement","src":"29965:66:32","trueBody":{"id":7050,"nodeType":"Block","src":"29987:44:32","statements":[{"expression":{"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"30005:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7049,"nodeType":"ExpressionStatement","src":"30005:11:32"}]}}]},{"expression":{"id":7053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"30057:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6934,"id":7054,"nodeType":"Return","src":"30050:13:32"}]},"documentation":{"id":6928,"nodeType":"StructuredDocumentation","src":"29029:120:32","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7056,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:32","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"value","nameLocation":"29177:5:32","nodeType":"VariableDeclaration","scope":7056,"src":"29169:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6929,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:32"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7056,"src":"29207:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6932,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:32"},"scope":7224,"src":"29154:916:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7089,"nodeType":"Block","src":"30305:177:32","statements":[{"id":7088,"nodeType":"UncheckedBlock","src":"30315:161:32","statements":[{"assignments":[7068],"declarations":[{"constant":false,"id":7068,"mutability":"mutable","name":"result","nameLocation":"30347:6:32","nodeType":"VariableDeclaration","scope":7088,"src":"30339:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7072,"initialValue":{"arguments":[{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"30362:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7069,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7056,7090],"referencedDeclaration":7056,"src":"30356:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"30389:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7077,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"30431:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":7076,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"30414:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5615_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:32","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"30450:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"30459:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7074,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"30398:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"30398:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7066,"id":7087,"nodeType":"Return","src":"30382:83:32"}]}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"30076:143:32","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:32","nodeType":"FunctionDefinition","parameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"value","nameLocation":"30247:5:32","nodeType":"VariableDeclaration","scope":7090,"src":"30239:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7058,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7062,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:32","nodeType":"VariableDeclaration","scope":7090,"src":"30254:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":7061,"nodeType":"UserDefinedTypeName","pathNode":{"id":7060,"name":"Rounding","nameLocations":["30254:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"30254:8:32"},"referencedDeclaration":5615,"src":"30254:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:32"},"returnParameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7090,"src":"30296:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7064,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:32"},"scope":7224,"src":"30224:258:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7166,"nodeType":"Block","src":"30800:675:32","statements":[{"expression":{"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7098,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"30882:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7101,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"30902:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:32","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7099,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"30886:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"30886:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:32","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7108,"nodeType":"ExpressionStatement","src":"30882:64:32"},{"expression":{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7109,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31022:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7112,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"31044:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31049:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:32","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7110,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"31027:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"31027:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:32","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7122,"nodeType":"ExpressionStatement","src":"31022:56:32"},{"expression":{"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7123,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31153:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7126,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"31175:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7127,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31180:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:32","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7124,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"31158:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"31158:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:32","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7136,"nodeType":"ExpressionStatement","src":"31153:48:32"},{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7137,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31276:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"31298:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7141,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31303:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:32","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7138,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"31281:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"31281:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7150,"nodeType":"ExpressionStatement","src":"31276:44:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31426:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7157,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"31453:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7158,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"31458:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:32","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7155,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"31436:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"31436:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7097,"id":7165,"nodeType":"Return","src":"31418:50:32"}]},"documentation":{"id":7091,"nodeType":"StructuredDocumentation","src":"30488:246:32","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7167,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:32","nodeType":"FunctionDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7093,"mutability":"mutable","name":"x","nameLocation":"30763:1:32","nodeType":"VariableDeclaration","scope":7167,"src":"30755:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:32"},"returnParameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"r","nameLocation":"30797:1:32","nodeType":"VariableDeclaration","scope":7167,"src":"30789:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7095,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:32"},"scope":7224,"src":"30739:736:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7203,"nodeType":"Block","src":"31712:184:32","statements":[{"id":7202,"nodeType":"UncheckedBlock","src":"31722:168:32","statements":[{"assignments":[7179],"declarations":[{"constant":false,"id":7179,"mutability":"mutable","name":"result","nameLocation":"31754:6:32","nodeType":"VariableDeclaration","scope":7202,"src":"31746:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7178,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7183,"initialValue":{"arguments":[{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"31770:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7180,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7167,7204],"referencedDeclaration":7167,"src":"31763:6:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"31797:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7188,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"31839:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":7187,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"31822:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5615_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"31858:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"31873:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7185,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"31806:8:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:32","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"31806:15:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7177,"id":7201,"nodeType":"Return","src":"31790:89:32"}]}]},"documentation":{"id":7168,"nodeType":"StructuredDocumentation","src":"31481:144:32","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7204,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:32","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7170,"mutability":"mutable","name":"value","nameLocation":"31654:5:32","nodeType":"VariableDeclaration","scope":7204,"src":"31646:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7169,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7173,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:32","nodeType":"VariableDeclaration","scope":7204,"src":"31661:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":7172,"nodeType":"UserDefinedTypeName","pathNode":{"id":7171,"name":"Rounding","nameLocations":["31661:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"31661:8:32"},"referencedDeclaration":5615,"src":"31661:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:32"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7204,"src":"31703:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:32"},"scope":7224,"src":"31630:266:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7222,"nodeType":"Block","src":"32094:48:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7215,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"32117:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}],"id":7214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7213,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:32","typeDescriptions":{}}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:32","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7212,"id":7221,"nodeType":"Return","src":"32104:31:32"}]},"documentation":{"id":7205,"nodeType":"StructuredDocumentation","src":"31902:113:32","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7223,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:32","nodeType":"FunctionDefinition","parameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:32","nodeType":"VariableDeclaration","scope":7223,"src":"32046:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"},"typeName":{"id":7207,"nodeType":"UserDefinedTypeName","pathNode":{"id":7206,"name":"Rounding","nameLocations":["32046:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":5615,"src":"32046:8:32"},"referencedDeclaration":5615,"src":"32046:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5615","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:32"},"returnParameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7223,"src":"32088:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7210,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:32"},"scope":7224,"src":"32020:122:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7225,"src":"281:31863:32","usedErrors":[],"usedEvents":[]}],"src":"103:32042:32"},"id":32},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8989]},"id":8990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7226,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:33"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"218:550:33","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8989,"linearizedBaseContracts":[8989],"name":"SafeCast","nameLocation":"777:8:33","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7228,"nodeType":"StructuredDocumentation","src":"792:68:33","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7234,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:33","nodeType":"ErrorDefinition","parameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"bits","nameLocation":"908:4:33","nodeType":"VariableDeclaration","scope":7234,"src":"902:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7229,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"value","nameLocation":"922:5:33","nodeType":"VariableDeclaration","scope":7234,"src":"914:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7231,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:33"},"src":"865:64:33"},{"documentation":{"id":7235,"nodeType":"StructuredDocumentation","src":"935:75:33","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7239,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:33","nodeType":"ErrorDefinition","parameters":{"id":7238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7237,"mutability":"mutable","name":"value","nameLocation":"1056:5:33","nodeType":"VariableDeclaration","scope":7239,"src":"1049:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7236,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:33"},"src":"1015:48:33"},{"documentation":{"id":7240,"nodeType":"StructuredDocumentation","src":"1069:67:33","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7246,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:33","nodeType":"ErrorDefinition","parameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"bits","nameLocation":"1183:4:33","nodeType":"VariableDeclaration","scope":7246,"src":"1177:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7241,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7244,"mutability":"mutable","name":"value","nameLocation":"1196:5:33","nodeType":"VariableDeclaration","scope":7246,"src":"1189:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7243,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:33"},"src":"1141:62:33"},{"documentation":{"id":7247,"nodeType":"StructuredDocumentation","src":"1209:75:33","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7251,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:33","nodeType":"ErrorDefinition","parameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"value","nameLocation":"1331:5:33","nodeType":"VariableDeclaration","scope":7251,"src":"1323:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:33"},"src":"1289:49:33"},{"body":{"id":7278,"nodeType":"Block","src":"1695:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"1709:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7261,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7260,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:33","memberName":"max","nodeType":"MemberAccess","src":"1717:17:33","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7272,"nodeType":"IfStatement","src":"1705:105:33","trueBody":{"id":7271,"nodeType":"Block","src":"1736:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:33","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"1793:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7266,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"1757:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7270,"nodeType":"RevertStatement","src":"1750:49:33"}]}},{"expression":{"arguments":[{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"1834:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7273,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:33","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7258,"id":7277,"nodeType":"Return","src":"1819:21:33"}]},"documentation":{"id":7252,"nodeType":"StructuredDocumentation","src":"1344:280:33","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7279,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:33","nodeType":"FunctionDefinition","parameters":{"id":7255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"mutability":"mutable","name":"value","nameLocation":"1656:5:33","nodeType":"VariableDeclaration","scope":7279,"src":"1648:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:33"},"returnParameters":{"id":7258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7279,"src":"1686:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7256,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:33","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:33"},"scope":8989,"src":"1629:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7306,"nodeType":"Block","src":"2204:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"2218:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7289,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:33","memberName":"max","nodeType":"MemberAccess","src":"2226:17:33","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7300,"nodeType":"IfStatement","src":"2214:105:33","trueBody":{"id":7299,"nodeType":"Block","src":"2245:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:33","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"2302:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7294,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"2266:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7298,"nodeType":"RevertStatement","src":"2259:49:33"}]}},{"expression":{"arguments":[{"id":7303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"2343:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7301,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:33","typeDescriptions":{}}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7286,"id":7305,"nodeType":"Return","src":"2328:21:33"}]},"documentation":{"id":7280,"nodeType":"StructuredDocumentation","src":"1853:280:33","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:33","nodeType":"FunctionDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7282,"mutability":"mutable","name":"value","nameLocation":"2165:5:33","nodeType":"VariableDeclaration","scope":7307,"src":"2157:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:33"},"returnParameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7307,"src":"2195:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7284,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:33","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:33"},"scope":8989,"src":"2138:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7334,"nodeType":"Block","src":"2713:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"2727:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7317,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7316,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:33","memberName":"max","nodeType":"MemberAccess","src":"2735:17:33","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7328,"nodeType":"IfStatement","src":"2723:105:33","trueBody":{"id":7327,"nodeType":"Block","src":"2754:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:33","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"2811:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7322,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"2775:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7326,"nodeType":"RevertStatement","src":"2768:49:33"}]}},{"expression":{"arguments":[{"id":7331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"2852:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7329,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:33","typeDescriptions":{}}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7314,"id":7333,"nodeType":"Return","src":"2837:21:33"}]},"documentation":{"id":7308,"nodeType":"StructuredDocumentation","src":"2362:280:33","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7335,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:33","nodeType":"FunctionDefinition","parameters":{"id":7311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7310,"mutability":"mutable","name":"value","nameLocation":"2674:5:33","nodeType":"VariableDeclaration","scope":7335,"src":"2666:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:33"},"returnParameters":{"id":7314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7335,"src":"2704:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7312,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:33","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:33"},"scope":8989,"src":"2647:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7362,"nodeType":"Block","src":"3222:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"3236:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7345,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:33","memberName":"max","nodeType":"MemberAccess","src":"3244:17:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7356,"nodeType":"IfStatement","src":"3232:105:33","trueBody":{"id":7355,"nodeType":"Block","src":"3263:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:33","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"3320:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7350,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"3284:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7354,"nodeType":"RevertStatement","src":"3277:49:33"}]}},{"expression":{"arguments":[{"id":7359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"3361:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7357,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:33","typeDescriptions":{}}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7342,"id":7361,"nodeType":"Return","src":"3346:21:33"}]},"documentation":{"id":7336,"nodeType":"StructuredDocumentation","src":"2871:280:33","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7363,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:33","nodeType":"FunctionDefinition","parameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"value","nameLocation":"3183:5:33","nodeType":"VariableDeclaration","scope":7363,"src":"3175:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:33"},"returnParameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7363,"src":"3213:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7340,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:33","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:33"},"scope":8989,"src":"3156:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7390,"nodeType":"Block","src":"3731:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"3745:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7373,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:33","memberName":"max","nodeType":"MemberAccess","src":"3753:17:33","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7384,"nodeType":"IfStatement","src":"3741:105:33","trueBody":{"id":7383,"nodeType":"Block","src":"3772:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:33","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"3829:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7378,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"3793:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7382,"nodeType":"RevertStatement","src":"3786:49:33"}]}},{"expression":{"arguments":[{"id":7387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"3870:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7385,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:33","typeDescriptions":{}}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7370,"id":7389,"nodeType":"Return","src":"3855:21:33"}]},"documentation":{"id":7364,"nodeType":"StructuredDocumentation","src":"3380:280:33","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:33","nodeType":"FunctionDefinition","parameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7366,"mutability":"mutable","name":"value","nameLocation":"3692:5:33","nodeType":"VariableDeclaration","scope":7391,"src":"3684:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7365,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:33"},"returnParameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7391,"src":"3722:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7368,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:33","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:33"},"scope":8989,"src":"3665:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7418,"nodeType":"Block","src":"4240:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"4254:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7401,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:33","memberName":"max","nodeType":"MemberAccess","src":"4262:17:33","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7412,"nodeType":"IfStatement","src":"4250:105:33","trueBody":{"id":7411,"nodeType":"Block","src":"4281:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:33","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"4338:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7406,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"4302:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7410,"nodeType":"RevertStatement","src":"4295:49:33"}]}},{"expression":{"arguments":[{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"4379:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7413,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:33","typeDescriptions":{}}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7398,"id":7417,"nodeType":"Return","src":"4364:21:33"}]},"documentation":{"id":7392,"nodeType":"StructuredDocumentation","src":"3889:280:33","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7419,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:33","nodeType":"FunctionDefinition","parameters":{"id":7395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"mutability":"mutable","name":"value","nameLocation":"4201:5:33","nodeType":"VariableDeclaration","scope":7419,"src":"4193:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:33"},"returnParameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7419,"src":"4231:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7396,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:33","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:33"},"scope":8989,"src":"4174:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7446,"nodeType":"Block","src":"4749:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"4763:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7429,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7428,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:33","memberName":"max","nodeType":"MemberAccess","src":"4771:17:33","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7440,"nodeType":"IfStatement","src":"4759:105:33","trueBody":{"id":7439,"nodeType":"Block","src":"4790:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:33","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"4847:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7434,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"4811:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7438,"nodeType":"RevertStatement","src":"4804:49:33"}]}},{"expression":{"arguments":[{"id":7443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"4888:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7441,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:33","typeDescriptions":{}}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7426,"id":7445,"nodeType":"Return","src":"4873:21:33"}]},"documentation":{"id":7420,"nodeType":"StructuredDocumentation","src":"4398:280:33","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7447,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:33","nodeType":"FunctionDefinition","parameters":{"id":7423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"value","nameLocation":"4710:5:33","nodeType":"VariableDeclaration","scope":7447,"src":"4702:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7421,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:33"},"returnParameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7447,"src":"4740:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7424,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:33","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:33"},"scope":8989,"src":"4683:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7474,"nodeType":"Block","src":"5258:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"5272:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7457,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:33","memberName":"max","nodeType":"MemberAccess","src":"5280:17:33","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7468,"nodeType":"IfStatement","src":"5268:105:33","trueBody":{"id":7467,"nodeType":"Block","src":"5299:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:33","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"5356:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7462,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"5320:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7466,"nodeType":"RevertStatement","src":"5313:49:33"}]}},{"expression":{"arguments":[{"id":7471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"5397:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7469,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:33","typeDescriptions":{}}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7454,"id":7473,"nodeType":"Return","src":"5382:21:33"}]},"documentation":{"id":7448,"nodeType":"StructuredDocumentation","src":"4907:280:33","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7475,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:33","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"value","nameLocation":"5219:5:33","nodeType":"VariableDeclaration","scope":7475,"src":"5211:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7449,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:33"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7475,"src":"5249:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7452,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:33","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:33"},"scope":8989,"src":"5192:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7502,"nodeType":"Block","src":"5767:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"5781:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7485,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:33","memberName":"max","nodeType":"MemberAccess","src":"5789:17:33","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7496,"nodeType":"IfStatement","src":"5777:105:33","trueBody":{"id":7495,"nodeType":"Block","src":"5808:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:33","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"5865:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7490,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"5829:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7494,"nodeType":"RevertStatement","src":"5822:49:33"}]}},{"expression":{"arguments":[{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"5906:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7497,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:33","typeDescriptions":{}}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7482,"id":7501,"nodeType":"Return","src":"5891:21:33"}]},"documentation":{"id":7476,"nodeType":"StructuredDocumentation","src":"5416:280:33","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7503,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:33","nodeType":"FunctionDefinition","parameters":{"id":7479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7478,"mutability":"mutable","name":"value","nameLocation":"5728:5:33","nodeType":"VariableDeclaration","scope":7503,"src":"5720:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:33"},"returnParameters":{"id":7482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7503,"src":"5758:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7480,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:33","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:33"},"scope":8989,"src":"5701:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7530,"nodeType":"Block","src":"6276:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"6290:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7513,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7512,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:33","memberName":"max","nodeType":"MemberAccess","src":"6298:17:33","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7524,"nodeType":"IfStatement","src":"6286:105:33","trueBody":{"id":7523,"nodeType":"Block","src":"6317:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:33","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"6374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7518,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"6338:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7522,"nodeType":"RevertStatement","src":"6331:49:33"}]}},{"expression":{"arguments":[{"id":7527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"6415:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7525,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:33","typeDescriptions":{}}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7510,"id":7529,"nodeType":"Return","src":"6400:21:33"}]},"documentation":{"id":7504,"nodeType":"StructuredDocumentation","src":"5925:280:33","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7531,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:33","nodeType":"FunctionDefinition","parameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"value","nameLocation":"6237:5:33","nodeType":"VariableDeclaration","scope":7531,"src":"6229:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7505,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:33"},"returnParameters":{"id":7510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7531,"src":"6267:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7508,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:33","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:33"},"scope":8989,"src":"6210:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7558,"nodeType":"Block","src":"6785:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"6799:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7541,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7540,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:33","memberName":"max","nodeType":"MemberAccess","src":"6807:17:33","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7552,"nodeType":"IfStatement","src":"6795:105:33","trueBody":{"id":7551,"nodeType":"Block","src":"6826:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:33","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"6883:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7546,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"6847:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7550,"nodeType":"RevertStatement","src":"6840:49:33"}]}},{"expression":{"arguments":[{"id":7555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"6924:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7553,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:33","typeDescriptions":{}}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7538,"id":7557,"nodeType":"Return","src":"6909:21:33"}]},"documentation":{"id":7532,"nodeType":"StructuredDocumentation","src":"6434:280:33","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7559,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:33","nodeType":"FunctionDefinition","parameters":{"id":7535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7534,"mutability":"mutable","name":"value","nameLocation":"6746:5:33","nodeType":"VariableDeclaration","scope":7559,"src":"6738:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:33"},"returnParameters":{"id":7538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7559,"src":"6776:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7536,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:33","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:33"},"scope":8989,"src":"6719:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7586,"nodeType":"Block","src":"7294:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7562,"src":"7308:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7569,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:33","memberName":"max","nodeType":"MemberAccess","src":"7316:17:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7580,"nodeType":"IfStatement","src":"7304:105:33","trueBody":{"id":7579,"nodeType":"Block","src":"7335:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:33","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7562,"src":"7392:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7574,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"7356:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"RevertStatement","src":"7349:49:33"}]}},{"expression":{"arguments":[{"id":7583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7562,"src":"7433:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7581,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:33","typeDescriptions":{}}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7566,"id":7585,"nodeType":"Return","src":"7418:21:33"}]},"documentation":{"id":7560,"nodeType":"StructuredDocumentation","src":"6943:280:33","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7587,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:33","nodeType":"FunctionDefinition","parameters":{"id":7563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7562,"mutability":"mutable","name":"value","nameLocation":"7255:5:33","nodeType":"VariableDeclaration","scope":7587,"src":"7247:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7561,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:33"},"returnParameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7587,"src":"7285:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7564,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:33","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:33"},"scope":8989,"src":"7228:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7614,"nodeType":"Block","src":"7803:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"7817:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7597,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:33","memberName":"max","nodeType":"MemberAccess","src":"7825:17:33","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7608,"nodeType":"IfStatement","src":"7813:105:33","trueBody":{"id":7607,"nodeType":"Block","src":"7844:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:33","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"7901:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7602,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"7865:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"RevertStatement","src":"7858:49:33"}]}},{"expression":{"arguments":[{"id":7611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"7942:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7609,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:33","typeDescriptions":{}}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7594,"id":7613,"nodeType":"Return","src":"7927:21:33"}]},"documentation":{"id":7588,"nodeType":"StructuredDocumentation","src":"7452:280:33","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7615,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:33","nodeType":"FunctionDefinition","parameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"value","nameLocation":"7764:5:33","nodeType":"VariableDeclaration","scope":7615,"src":"7756:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7589,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:33"},"returnParameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7615,"src":"7794:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7592,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:33","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:33"},"scope":8989,"src":"7737:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7642,"nodeType":"Block","src":"8312:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"8326:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7625,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:33","memberName":"max","nodeType":"MemberAccess","src":"8334:17:33","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7636,"nodeType":"IfStatement","src":"8322:105:33","trueBody":{"id":7635,"nodeType":"Block","src":"8353:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:33","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"8410:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7630,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"8374:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7634,"nodeType":"RevertStatement","src":"8367:49:33"}]}},{"expression":{"arguments":[{"id":7639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"8451:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7637,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:33","typeDescriptions":{}}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7622,"id":7641,"nodeType":"Return","src":"8436:21:33"}]},"documentation":{"id":7616,"nodeType":"StructuredDocumentation","src":"7961:280:33","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7643,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:33","nodeType":"FunctionDefinition","parameters":{"id":7619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7618,"mutability":"mutable","name":"value","nameLocation":"8273:5:33","nodeType":"VariableDeclaration","scope":7643,"src":"8265:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7617,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:33"},"returnParameters":{"id":7622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7643,"src":"8303:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7620,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:33","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:33"},"scope":8989,"src":"8246:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7670,"nodeType":"Block","src":"8821:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"8835:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7653,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:33","memberName":"max","nodeType":"MemberAccess","src":"8843:17:33","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7664,"nodeType":"IfStatement","src":"8831:105:33","trueBody":{"id":7663,"nodeType":"Block","src":"8862:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:33","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"8919:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7658,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"8883:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7662,"nodeType":"RevertStatement","src":"8876:49:33"}]}},{"expression":{"arguments":[{"id":7667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"8960:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7665,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:33","typeDescriptions":{}}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7650,"id":7669,"nodeType":"Return","src":"8945:21:33"}]},"documentation":{"id":7644,"nodeType":"StructuredDocumentation","src":"8470:280:33","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7671,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:33","nodeType":"FunctionDefinition","parameters":{"id":7647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"value","nameLocation":"8782:5:33","nodeType":"VariableDeclaration","scope":7671,"src":"8774:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7645,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:33"},"returnParameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7671,"src":"8812:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7648,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:33","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:33"},"scope":8989,"src":"8755:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7698,"nodeType":"Block","src":"9330:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"9344:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7681,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:33","memberName":"max","nodeType":"MemberAccess","src":"9352:17:33","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7692,"nodeType":"IfStatement","src":"9340:105:33","trueBody":{"id":7691,"nodeType":"Block","src":"9371:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"9428:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7686,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"9392:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7690,"nodeType":"RevertStatement","src":"9385:49:33"}]}},{"expression":{"arguments":[{"id":7695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"9469:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7693,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:33","typeDescriptions":{}}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7678,"id":7697,"nodeType":"Return","src":"9454:21:33"}]},"documentation":{"id":7672,"nodeType":"StructuredDocumentation","src":"8979:280:33","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7699,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:33","nodeType":"FunctionDefinition","parameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"value","nameLocation":"9291:5:33","nodeType":"VariableDeclaration","scope":7699,"src":"9283:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7673,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:33"},"returnParameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7699,"src":"9321:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7676,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:33","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:33"},"scope":8989,"src":"9264:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7726,"nodeType":"Block","src":"9839:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"9853:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7709,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:33","memberName":"max","nodeType":"MemberAccess","src":"9861:17:33","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7720,"nodeType":"IfStatement","src":"9849:105:33","trueBody":{"id":7719,"nodeType":"Block","src":"9880:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:33","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"9937:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7714,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"9901:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7718,"nodeType":"RevertStatement","src":"9894:49:33"}]}},{"expression":{"arguments":[{"id":7723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"9978:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7721,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:33","typeDescriptions":{}}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7706,"id":7725,"nodeType":"Return","src":"9963:21:33"}]},"documentation":{"id":7700,"nodeType":"StructuredDocumentation","src":"9488:280:33","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7727,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:33","nodeType":"FunctionDefinition","parameters":{"id":7703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7702,"mutability":"mutable","name":"value","nameLocation":"9800:5:33","nodeType":"VariableDeclaration","scope":7727,"src":"9792:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7701,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:33"},"returnParameters":{"id":7706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7727,"src":"9830:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7704,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:33","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:33"},"scope":8989,"src":"9773:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7754,"nodeType":"Block","src":"10348:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"10362:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7737,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:33","memberName":"max","nodeType":"MemberAccess","src":"10370:17:33","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7748,"nodeType":"IfStatement","src":"10358:105:33","trueBody":{"id":7747,"nodeType":"Block","src":"10389:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:33","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"10446:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7742,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"10410:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7746,"nodeType":"RevertStatement","src":"10403:49:33"}]}},{"expression":{"arguments":[{"id":7751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"10487:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7749,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:33","typeDescriptions":{}}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7734,"id":7753,"nodeType":"Return","src":"10472:21:33"}]},"documentation":{"id":7728,"nodeType":"StructuredDocumentation","src":"9997:280:33","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7755,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:33","nodeType":"FunctionDefinition","parameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7730,"mutability":"mutable","name":"value","nameLocation":"10309:5:33","nodeType":"VariableDeclaration","scope":7755,"src":"10301:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:33"},"returnParameters":{"id":7734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7755,"src":"10339:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7732,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:33","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:33"},"scope":8989,"src":"10282:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7782,"nodeType":"Block","src":"10857:152:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"10871:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7765,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:33","memberName":"max","nodeType":"MemberAccess","src":"10879:17:33","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7776,"nodeType":"IfStatement","src":"10867:105:33","trueBody":{"id":7775,"nodeType":"Block","src":"10898:74:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:33","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"10955:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7770,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"10919:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7774,"nodeType":"RevertStatement","src":"10912:49:33"}]}},{"expression":{"arguments":[{"id":7779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"10996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7777,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:33","typeDescriptions":{}}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7762,"id":7781,"nodeType":"Return","src":"10981:21:33"}]},"documentation":{"id":7756,"nodeType":"StructuredDocumentation","src":"10506:280:33","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7783,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:33","nodeType":"FunctionDefinition","parameters":{"id":7759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7758,"mutability":"mutable","name":"value","nameLocation":"10818:5:33","nodeType":"VariableDeclaration","scope":7783,"src":"10810:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7757,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:33"},"returnParameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7783,"src":"10848:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7760,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:33","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:33"},"scope":8989,"src":"10791:218:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7810,"nodeType":"Block","src":"11360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"11374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7793,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7792,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:33","memberName":"max","nodeType":"MemberAccess","src":"11382:16:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7804,"nodeType":"IfStatement","src":"11370:103:33","trueBody":{"id":7803,"nodeType":"Block","src":"11400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"11456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7798,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"11421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"RevertStatement","src":"11414:48:33"}]}},{"expression":{"arguments":[{"id":7807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"11496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7805,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:33","typeDescriptions":{}}},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7790,"id":7809,"nodeType":"Return","src":"11482:20:33"}]},"documentation":{"id":7784,"nodeType":"StructuredDocumentation","src":"11015:276:33","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7811,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7786,"mutability":"mutable","name":"value","nameLocation":"11322:5:33","nodeType":"VariableDeclaration","scope":7811,"src":"11314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:33"},"returnParameters":{"id":7790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7811,"src":"11352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7788,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:33","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:33"},"scope":8989,"src":"11296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7838,"nodeType":"Block","src":"11860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"11874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7821,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7820,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:33","memberName":"max","nodeType":"MemberAccess","src":"11882:16:33","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7832,"nodeType":"IfStatement","src":"11870:103:33","trueBody":{"id":7831,"nodeType":"Block","src":"11900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"11956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7826,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"11921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7830,"nodeType":"RevertStatement","src":"11914:48:33"}]}},{"expression":{"arguments":[{"id":7835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7814,"src":"11996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7833,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:33","typeDescriptions":{}}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7818,"id":7837,"nodeType":"Return","src":"11982:20:33"}]},"documentation":{"id":7812,"nodeType":"StructuredDocumentation","src":"11515:276:33","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7839,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7814,"mutability":"mutable","name":"value","nameLocation":"11822:5:33","nodeType":"VariableDeclaration","scope":7839,"src":"11814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7813,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:33"},"returnParameters":{"id":7818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7839,"src":"11852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7816,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:33","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:33"},"scope":8989,"src":"11796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7866,"nodeType":"Block","src":"12360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"12374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7849,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7848,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:33","memberName":"max","nodeType":"MemberAccess","src":"12382:16:33","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7860,"nodeType":"IfStatement","src":"12370:103:33","trueBody":{"id":7859,"nodeType":"Block","src":"12400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"12456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7854,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"12421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7858,"nodeType":"RevertStatement","src":"12414:48:33"}]}},{"expression":{"arguments":[{"id":7863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"12496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7861,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:33","typeDescriptions":{}}},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7846,"id":7865,"nodeType":"Return","src":"12482:20:33"}]},"documentation":{"id":7840,"nodeType":"StructuredDocumentation","src":"12015:276:33","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7842,"mutability":"mutable","name":"value","nameLocation":"12322:5:33","nodeType":"VariableDeclaration","scope":7867,"src":"12314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7841,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:33"},"returnParameters":{"id":7846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7867,"src":"12352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7844,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:33","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:33"},"scope":8989,"src":"12296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7894,"nodeType":"Block","src":"12860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"12874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7877,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:33","memberName":"max","nodeType":"MemberAccess","src":"12882:16:33","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7888,"nodeType":"IfStatement","src":"12870:103:33","trueBody":{"id":7887,"nodeType":"Block","src":"12900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"12956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7882,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"12921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7886,"nodeType":"RevertStatement","src":"12914:48:33"}]}},{"expression":{"arguments":[{"id":7891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"12996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7889,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:33","typeDescriptions":{}}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7874,"id":7893,"nodeType":"Return","src":"12982:20:33"}]},"documentation":{"id":7868,"nodeType":"StructuredDocumentation","src":"12515:276:33","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7870,"mutability":"mutable","name":"value","nameLocation":"12822:5:33","nodeType":"VariableDeclaration","scope":7895,"src":"12814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7869,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:33"},"returnParameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7895,"src":"12852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7872,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:33","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:33"},"scope":8989,"src":"12796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7922,"nodeType":"Block","src":"13360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"13374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7905,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7904,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:33","memberName":"max","nodeType":"MemberAccess","src":"13382:16:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7916,"nodeType":"IfStatement","src":"13370:103:33","trueBody":{"id":7915,"nodeType":"Block","src":"13400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"13456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7910,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"13421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7914,"nodeType":"RevertStatement","src":"13414:48:33"}]}},{"expression":{"arguments":[{"id":7919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"13496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7917,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:33","typeDescriptions":{}}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7902,"id":7921,"nodeType":"Return","src":"13482:20:33"}]},"documentation":{"id":7896,"nodeType":"StructuredDocumentation","src":"13015:276:33","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7923,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7898,"mutability":"mutable","name":"value","nameLocation":"13322:5:33","nodeType":"VariableDeclaration","scope":7923,"src":"13314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7897,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:33"},"returnParameters":{"id":7902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7923,"src":"13352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7900,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:33","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:33"},"scope":8989,"src":"13296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7950,"nodeType":"Block","src":"13860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"13874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7933,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7932,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:33","memberName":"max","nodeType":"MemberAccess","src":"13882:16:33","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7944,"nodeType":"IfStatement","src":"13870:103:33","trueBody":{"id":7943,"nodeType":"Block","src":"13900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"13956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7938,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"13921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7942,"nodeType":"RevertStatement","src":"13914:48:33"}]}},{"expression":{"arguments":[{"id":7947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"13996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7945,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:33","typeDescriptions":{}}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7930,"id":7949,"nodeType":"Return","src":"13982:20:33"}]},"documentation":{"id":7924,"nodeType":"StructuredDocumentation","src":"13515:276:33","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7951,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"value","nameLocation":"13822:5:33","nodeType":"VariableDeclaration","scope":7951,"src":"13814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7925,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:33"},"returnParameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7951,"src":"13852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7928,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:33","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:33"},"scope":8989,"src":"13796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7978,"nodeType":"Block","src":"14360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"14374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7961,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7960,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:33","memberName":"max","nodeType":"MemberAccess","src":"14382:16:33","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7972,"nodeType":"IfStatement","src":"14370:103:33","trueBody":{"id":7971,"nodeType":"Block","src":"14400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"14456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7966,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"14421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7970,"nodeType":"RevertStatement","src":"14414:48:33"}]}},{"expression":{"arguments":[{"id":7975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"14496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7973,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:33","typeDescriptions":{}}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7958,"id":7977,"nodeType":"Return","src":"14482:20:33"}]},"documentation":{"id":7952,"nodeType":"StructuredDocumentation","src":"14015:276:33","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7979,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:33","nodeType":"FunctionDefinition","parameters":{"id":7955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"value","nameLocation":"14322:5:33","nodeType":"VariableDeclaration","scope":7979,"src":"14314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7953,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:33"},"returnParameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7979,"src":"14352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7956,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:33","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:33"},"scope":8989,"src":"14296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8006,"nodeType":"Block","src":"14860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"14874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7989,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7988,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:33","memberName":"max","nodeType":"MemberAccess","src":"14882:16:33","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8000,"nodeType":"IfStatement","src":"14870:103:33","trueBody":{"id":7999,"nodeType":"Block","src":"14900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"14956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7994,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"14921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7998,"nodeType":"RevertStatement","src":"14914:48:33"}]}},{"expression":{"arguments":[{"id":8003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"14996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8001,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:33","typeDescriptions":{}}},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7986,"id":8005,"nodeType":"Return","src":"14982:20:33"}]},"documentation":{"id":7980,"nodeType":"StructuredDocumentation","src":"14515:276:33","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8007,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:33","nodeType":"FunctionDefinition","parameters":{"id":7983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7982,"mutability":"mutable","name":"value","nameLocation":"14822:5:33","nodeType":"VariableDeclaration","scope":8007,"src":"14814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7981,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:33"},"returnParameters":{"id":7986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8007,"src":"14852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7984,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:33","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:33"},"scope":8989,"src":"14796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8034,"nodeType":"Block","src":"15360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"15374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8017,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8016,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:33","memberName":"max","nodeType":"MemberAccess","src":"15382:16:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8028,"nodeType":"IfStatement","src":"15370:103:33","trueBody":{"id":8027,"nodeType":"Block","src":"15400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"15456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8022,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"15421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8026,"nodeType":"RevertStatement","src":"15414:48:33"}]}},{"expression":{"arguments":[{"id":8031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"15496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8029,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:33","typeDescriptions":{}}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8014,"id":8033,"nodeType":"Return","src":"15482:20:33"}]},"documentation":{"id":8008,"nodeType":"StructuredDocumentation","src":"15015:276:33","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8035,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:33","nodeType":"FunctionDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8010,"mutability":"mutable","name":"value","nameLocation":"15322:5:33","nodeType":"VariableDeclaration","scope":8035,"src":"15314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8009,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:33"},"returnParameters":{"id":8014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8035,"src":"15352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8012,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:33","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:33"},"scope":8989,"src":"15296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8062,"nodeType":"Block","src":"15860:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"15874:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8045,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8044,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:33","memberName":"max","nodeType":"MemberAccess","src":"15882:16:33","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8056,"nodeType":"IfStatement","src":"15870:103:33","trueBody":{"id":8055,"nodeType":"Block","src":"15900:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:33","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"15956:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8050,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"15921:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8054,"nodeType":"RevertStatement","src":"15914:48:33"}]}},{"expression":{"arguments":[{"id":8059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"15996:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8057,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:33","typeDescriptions":{}}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8042,"id":8061,"nodeType":"Return","src":"15982:20:33"}]},"documentation":{"id":8036,"nodeType":"StructuredDocumentation","src":"15515:276:33","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8063,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:33","nodeType":"FunctionDefinition","parameters":{"id":8039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8038,"mutability":"mutable","name":"value","nameLocation":"15822:5:33","nodeType":"VariableDeclaration","scope":8063,"src":"15814:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8037,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:33"},"returnParameters":{"id":8042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8063,"src":"15852:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8040,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:33","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:33"},"scope":8989,"src":"15796:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8090,"nodeType":"Block","src":"16360:149:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"16374:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8073,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8072,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:33","memberName":"max","nodeType":"MemberAccess","src":"16382:16:33","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8084,"nodeType":"IfStatement","src":"16370:103:33","trueBody":{"id":8083,"nodeType":"Block","src":"16400:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"16456:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8078,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"16421:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8082,"nodeType":"RevertStatement","src":"16414:48:33"}]}},{"expression":{"arguments":[{"id":8087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"16496:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8085,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:33","typeDescriptions":{}}},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8070,"id":8089,"nodeType":"Return","src":"16482:20:33"}]},"documentation":{"id":8064,"nodeType":"StructuredDocumentation","src":"16015:276:33","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8091,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:33","nodeType":"FunctionDefinition","parameters":{"id":8067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8066,"mutability":"mutable","name":"value","nameLocation":"16322:5:33","nodeType":"VariableDeclaration","scope":8091,"src":"16314:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8065,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:33"},"returnParameters":{"id":8070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8091,"src":"16352:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8068,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:33","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:33"},"scope":8989,"src":"16296:213:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8118,"nodeType":"Block","src":"16854:146:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"16868:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8101,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8100,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:33","memberName":"max","nodeType":"MemberAccess","src":"16876:15:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8112,"nodeType":"IfStatement","src":"16864:101:33","trueBody":{"id":8111,"nodeType":"Block","src":"16893:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"16948:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8106,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"16914:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8110,"nodeType":"RevertStatement","src":"16907:47:33"}]}},{"expression":{"arguments":[{"id":8115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"16987:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8113,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:33","typeDescriptions":{}}},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8098,"id":8117,"nodeType":"Return","src":"16974:19:33"}]},"documentation":{"id":8092,"nodeType":"StructuredDocumentation","src":"16515:272:33","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:33","nodeType":"FunctionDefinition","parameters":{"id":8095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8094,"mutability":"mutable","name":"value","nameLocation":"16817:5:33","nodeType":"VariableDeclaration","scope":8119,"src":"16809:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8093,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:33"},"returnParameters":{"id":8098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8119,"src":"16847:5:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8096,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:33"},"scope":8989,"src":"16792:208:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8141,"nodeType":"Block","src":"17236:128:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"17250:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8135,"nodeType":"IfStatement","src":"17246:81:33","trueBody":{"id":8134,"nodeType":"Block","src":"17261:66:33","statements":[{"errorCall":{"arguments":[{"id":8131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"17310:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8130,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"17282:27:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":8132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8133,"nodeType":"RevertStatement","src":"17275:41:33"}]}},{"expression":{"arguments":[{"id":8138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"17351:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:33","typeDescriptions":{}}},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8126,"id":8140,"nodeType":"Return","src":"17336:21:33"}]},"documentation":{"id":8120,"nodeType":"StructuredDocumentation","src":"17006:160:33","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:33","nodeType":"FunctionDefinition","parameters":{"id":8123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8122,"mutability":"mutable","name":"value","nameLocation":"17197:5:33","nodeType":"VariableDeclaration","scope":8142,"src":"17190:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8121,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:33"},"returnParameters":{"id":8126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8142,"src":"17227:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8124,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:33"},"scope":8989,"src":"17171:193:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8167,"nodeType":"Block","src":"17761:150:33","statements":[{"expression":{"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"17771:10:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"17791:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8151,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:33","typeDescriptions":{}}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8156,"nodeType":"ExpressionStatement","src":"17771:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8148,"src":"17811:10:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"17825:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8166,"nodeType":"IfStatement","src":"17807:98:33","trueBody":{"id":8165,"nodeType":"Block","src":"17832:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:33","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"17888:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8160,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"17853:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8164,"nodeType":"RevertStatement","src":"17846:48:33"}]}}]},"documentation":{"id":8143,"nodeType":"StructuredDocumentation","src":"17370:312:33","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8168,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:33","nodeType":"FunctionDefinition","parameters":{"id":8146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8145,"mutability":"mutable","name":"value","nameLocation":"17712:5:33","nodeType":"VariableDeclaration","scope":8168,"src":"17705:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8144,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:33"},"returnParameters":{"id":8149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8148,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:33","nodeType":"VariableDeclaration","scope":8168,"src":"17742:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8147,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:33","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:33"},"scope":8989,"src":"17687:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8193,"nodeType":"Block","src":"18308:150:33","statements":[{"expression":{"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"18318:10:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"18338:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8177,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:33","typeDescriptions":{}}},"id":8180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8182,"nodeType":"ExpressionStatement","src":"18318:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"18358:10:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"18372:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8192,"nodeType":"IfStatement","src":"18354:98:33","trueBody":{"id":8191,"nodeType":"Block","src":"18379:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:33","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"18435:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8186,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"18400:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8190,"nodeType":"RevertStatement","src":"18393:48:33"}]}}]},"documentation":{"id":8169,"nodeType":"StructuredDocumentation","src":"17917:312:33","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:33","nodeType":"FunctionDefinition","parameters":{"id":8172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8171,"mutability":"mutable","name":"value","nameLocation":"18259:5:33","nodeType":"VariableDeclaration","scope":8194,"src":"18252:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8170,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:33"},"returnParameters":{"id":8175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8174,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:33","nodeType":"VariableDeclaration","scope":8194,"src":"18289:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8173,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:33","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:33"},"scope":8989,"src":"18234:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8219,"nodeType":"Block","src":"18855:150:33","statements":[{"expression":{"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"18865:10:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"18885:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8203,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:33","typeDescriptions":{}}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8208,"nodeType":"ExpressionStatement","src":"18865:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"18905:10:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"18919:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8218,"nodeType":"IfStatement","src":"18901:98:33","trueBody":{"id":8217,"nodeType":"Block","src":"18926:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:33","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8197,"src":"18982:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8212,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"18947:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8216,"nodeType":"RevertStatement","src":"18940:48:33"}]}}]},"documentation":{"id":8195,"nodeType":"StructuredDocumentation","src":"18464:312:33","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8220,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:33","nodeType":"FunctionDefinition","parameters":{"id":8198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8197,"mutability":"mutable","name":"value","nameLocation":"18806:5:33","nodeType":"VariableDeclaration","scope":8220,"src":"18799:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8196,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:33"},"returnParameters":{"id":8201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8200,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:33","nodeType":"VariableDeclaration","scope":8220,"src":"18836:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8199,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:33","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:33"},"scope":8989,"src":"18781:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8245,"nodeType":"Block","src":"19402:150:33","statements":[{"expression":{"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"19412:10:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"19432:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8229,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:33","typeDescriptions":{}}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8234,"nodeType":"ExpressionStatement","src":"19412:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"19452:10:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"19466:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8244,"nodeType":"IfStatement","src":"19448:98:33","trueBody":{"id":8243,"nodeType":"Block","src":"19473:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:33","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"19529:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8238,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"19494:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8242,"nodeType":"RevertStatement","src":"19487:48:33"}]}}]},"documentation":{"id":8221,"nodeType":"StructuredDocumentation","src":"19011:312:33","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8246,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:33","nodeType":"FunctionDefinition","parameters":{"id":8224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8223,"mutability":"mutable","name":"value","nameLocation":"19353:5:33","nodeType":"VariableDeclaration","scope":8246,"src":"19346:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8222,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:33"},"returnParameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:33","nodeType":"VariableDeclaration","scope":8246,"src":"19383:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8225,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:33","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:33"},"scope":8989,"src":"19328:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8271,"nodeType":"Block","src":"19949:150:33","statements":[{"expression":{"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"19959:10:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"19979:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8255,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:33","typeDescriptions":{}}},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8260,"nodeType":"ExpressionStatement","src":"19959:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"19999:10:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"20013:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8270,"nodeType":"IfStatement","src":"19995:98:33","trueBody":{"id":8269,"nodeType":"Block","src":"20020:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:33","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"20076:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8264,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"20041:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8268,"nodeType":"RevertStatement","src":"20034:48:33"}]}}]},"documentation":{"id":8247,"nodeType":"StructuredDocumentation","src":"19558:312:33","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8272,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:33","nodeType":"FunctionDefinition","parameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"value","nameLocation":"19900:5:33","nodeType":"VariableDeclaration","scope":8272,"src":"19893:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8248,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:33"},"returnParameters":{"id":8253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8252,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:33","nodeType":"VariableDeclaration","scope":8272,"src":"19930:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8251,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:33","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:33"},"scope":8989,"src":"19875:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8297,"nodeType":"Block","src":"20496:150:33","statements":[{"expression":{"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"20506:10:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"20526:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8281,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:33","typeDescriptions":{}}},"id":8284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8286,"nodeType":"ExpressionStatement","src":"20506:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"20546:10:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"20560:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8296,"nodeType":"IfStatement","src":"20542:98:33","trueBody":{"id":8295,"nodeType":"Block","src":"20567:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:33","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"20623:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8290,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"20588:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8294,"nodeType":"RevertStatement","src":"20581:48:33"}]}}]},"documentation":{"id":8273,"nodeType":"StructuredDocumentation","src":"20105:312:33","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8298,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:33","nodeType":"FunctionDefinition","parameters":{"id":8276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8275,"mutability":"mutable","name":"value","nameLocation":"20447:5:33","nodeType":"VariableDeclaration","scope":8298,"src":"20440:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8274,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:33"},"returnParameters":{"id":8279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8278,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:33","nodeType":"VariableDeclaration","scope":8298,"src":"20477:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8277,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:33","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:33"},"scope":8989,"src":"20422:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8323,"nodeType":"Block","src":"21043:150:33","statements":[{"expression":{"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8304,"src":"21053:10:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"21073:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8307,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:33","typeDescriptions":{}}},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8312,"nodeType":"ExpressionStatement","src":"21053:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8304,"src":"21093:10:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"21107:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8322,"nodeType":"IfStatement","src":"21089:98:33","trueBody":{"id":8321,"nodeType":"Block","src":"21114:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:33","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"21170:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8316,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"21135:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8320,"nodeType":"RevertStatement","src":"21128:48:33"}]}}]},"documentation":{"id":8299,"nodeType":"StructuredDocumentation","src":"20652:312:33","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8324,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:33","nodeType":"FunctionDefinition","parameters":{"id":8302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8301,"mutability":"mutable","name":"value","nameLocation":"20994:5:33","nodeType":"VariableDeclaration","scope":8324,"src":"20987:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8300,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:33"},"returnParameters":{"id":8305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8304,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:33","nodeType":"VariableDeclaration","scope":8324,"src":"21024:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8303,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:33","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:33"},"scope":8989,"src":"20969:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8349,"nodeType":"Block","src":"21590:150:33","statements":[{"expression":{"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"21600:10:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"21620:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8333,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:33","typeDescriptions":{}}},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8338,"nodeType":"ExpressionStatement","src":"21600:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"21640:10:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"21654:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8348,"nodeType":"IfStatement","src":"21636:98:33","trueBody":{"id":8347,"nodeType":"Block","src":"21661:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:33","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"21717:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8342,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"21682:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8346,"nodeType":"RevertStatement","src":"21675:48:33"}]}}]},"documentation":{"id":8325,"nodeType":"StructuredDocumentation","src":"21199:312:33","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8350,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:33","nodeType":"FunctionDefinition","parameters":{"id":8328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8327,"mutability":"mutable","name":"value","nameLocation":"21541:5:33","nodeType":"VariableDeclaration","scope":8350,"src":"21534:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8326,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:33"},"returnParameters":{"id":8331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8330,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:33","nodeType":"VariableDeclaration","scope":8350,"src":"21571:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8329,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:33","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:33"},"scope":8989,"src":"21516:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8375,"nodeType":"Block","src":"22137:150:33","statements":[{"expression":{"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"22147:10:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"22167:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8359,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:33","typeDescriptions":{}}},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8364,"nodeType":"ExpressionStatement","src":"22147:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"22187:10:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"22201:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8374,"nodeType":"IfStatement","src":"22183:98:33","trueBody":{"id":8373,"nodeType":"Block","src":"22208:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:33","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"22264:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8368,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"22229:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8372,"nodeType":"RevertStatement","src":"22222:48:33"}]}}]},"documentation":{"id":8351,"nodeType":"StructuredDocumentation","src":"21746:312:33","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8376,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:33","nodeType":"FunctionDefinition","parameters":{"id":8354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8353,"mutability":"mutable","name":"value","nameLocation":"22088:5:33","nodeType":"VariableDeclaration","scope":8376,"src":"22081:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8352,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:33"},"returnParameters":{"id":8357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8356,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:33","nodeType":"VariableDeclaration","scope":8376,"src":"22118:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8355,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:33","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:33"},"scope":8989,"src":"22063:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8401,"nodeType":"Block","src":"22684:150:33","statements":[{"expression":{"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"22694:10:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"22714:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8385,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:33","typeDescriptions":{}}},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8390,"nodeType":"ExpressionStatement","src":"22694:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8382,"src":"22734:10:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"22748:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8400,"nodeType":"IfStatement","src":"22730:98:33","trueBody":{"id":8399,"nodeType":"Block","src":"22755:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:33","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"22811:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8394,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"22776:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8398,"nodeType":"RevertStatement","src":"22769:48:33"}]}}]},"documentation":{"id":8377,"nodeType":"StructuredDocumentation","src":"22293:312:33","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8402,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:33","nodeType":"FunctionDefinition","parameters":{"id":8380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8379,"mutability":"mutable","name":"value","nameLocation":"22635:5:33","nodeType":"VariableDeclaration","scope":8402,"src":"22628:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8378,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:33"},"returnParameters":{"id":8383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8382,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:33","nodeType":"VariableDeclaration","scope":8402,"src":"22665:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8381,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:33","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:33"},"scope":8989,"src":"22610:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8427,"nodeType":"Block","src":"23231:150:33","statements":[{"expression":{"id":8415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"23241:10:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"23261:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8411,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:33","typeDescriptions":{}}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8416,"nodeType":"ExpressionStatement","src":"23241:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"23281:10:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"23295:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8426,"nodeType":"IfStatement","src":"23277:98:33","trueBody":{"id":8425,"nodeType":"Block","src":"23302:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:33","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"23358:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8420,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"23323:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8424,"nodeType":"RevertStatement","src":"23316:48:33"}]}}]},"documentation":{"id":8403,"nodeType":"StructuredDocumentation","src":"22840:312:33","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8428,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:33","nodeType":"FunctionDefinition","parameters":{"id":8406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8405,"mutability":"mutable","name":"value","nameLocation":"23182:5:33","nodeType":"VariableDeclaration","scope":8428,"src":"23175:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8404,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:33"},"returnParameters":{"id":8409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8408,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:33","nodeType":"VariableDeclaration","scope":8428,"src":"23212:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8407,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:33","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:33"},"scope":8989,"src":"23157:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8453,"nodeType":"Block","src":"23778:150:33","statements":[{"expression":{"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"23788:10:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"23808:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8437,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:33","typeDescriptions":{}}},"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8442,"nodeType":"ExpressionStatement","src":"23788:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"23828:10:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"23842:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8452,"nodeType":"IfStatement","src":"23824:98:33","trueBody":{"id":8451,"nodeType":"Block","src":"23849:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:33","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"23905:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8446,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"23870:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8450,"nodeType":"RevertStatement","src":"23863:48:33"}]}}]},"documentation":{"id":8429,"nodeType":"StructuredDocumentation","src":"23387:312:33","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8454,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:33","nodeType":"FunctionDefinition","parameters":{"id":8432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8431,"mutability":"mutable","name":"value","nameLocation":"23729:5:33","nodeType":"VariableDeclaration","scope":8454,"src":"23722:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8430,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:33"},"returnParameters":{"id":8435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:33","nodeType":"VariableDeclaration","scope":8454,"src":"23759:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8433,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:33","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:33"},"scope":8989,"src":"23704:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8479,"nodeType":"Block","src":"24325:150:33","statements":[{"expression":{"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"24335:10:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"24355:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8463,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:33","typeDescriptions":{}}},"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8468,"nodeType":"ExpressionStatement","src":"24335:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"24375:10:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"24389:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8478,"nodeType":"IfStatement","src":"24371:98:33","trueBody":{"id":8477,"nodeType":"Block","src":"24396:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:33","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8457,"src":"24452:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8472,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"24417:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8476,"nodeType":"RevertStatement","src":"24410:48:33"}]}}]},"documentation":{"id":8455,"nodeType":"StructuredDocumentation","src":"23934:312:33","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8480,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:33","nodeType":"FunctionDefinition","parameters":{"id":8458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8457,"mutability":"mutable","name":"value","nameLocation":"24276:5:33","nodeType":"VariableDeclaration","scope":8480,"src":"24269:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8456,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:33"},"returnParameters":{"id":8461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8460,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:33","nodeType":"VariableDeclaration","scope":8480,"src":"24306:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8459,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:33","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:33"},"scope":8989,"src":"24251:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8505,"nodeType":"Block","src":"24872:150:33","statements":[{"expression":{"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"24882:10:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"24902:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8489,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:33","typeDescriptions":{}}},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8494,"nodeType":"ExpressionStatement","src":"24882:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"24922:10:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"24936:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8504,"nodeType":"IfStatement","src":"24918:98:33","trueBody":{"id":8503,"nodeType":"Block","src":"24943:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:33","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"24999:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8498,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"24964:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8502,"nodeType":"RevertStatement","src":"24957:48:33"}]}}]},"documentation":{"id":8481,"nodeType":"StructuredDocumentation","src":"24481:312:33","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8506,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:33","nodeType":"FunctionDefinition","parameters":{"id":8484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8483,"mutability":"mutable","name":"value","nameLocation":"24823:5:33","nodeType":"VariableDeclaration","scope":8506,"src":"24816:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8482,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:33"},"returnParameters":{"id":8487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8486,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:33","nodeType":"VariableDeclaration","scope":8506,"src":"24853:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8485,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:33","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:33"},"scope":8989,"src":"24798:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8531,"nodeType":"Block","src":"25419:150:33","statements":[{"expression":{"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"25429:10:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8509,"src":"25449:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8515,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:33","typeDescriptions":{}}},"id":8518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8520,"nodeType":"ExpressionStatement","src":"25429:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"25469:10:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8509,"src":"25483:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8530,"nodeType":"IfStatement","src":"25465:98:33","trueBody":{"id":8529,"nodeType":"Block","src":"25490:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:33","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8509,"src":"25546:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8524,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"25511:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8528,"nodeType":"RevertStatement","src":"25504:48:33"}]}}]},"documentation":{"id":8507,"nodeType":"StructuredDocumentation","src":"25028:312:33","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:33","nodeType":"FunctionDefinition","parameters":{"id":8510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8509,"mutability":"mutable","name":"value","nameLocation":"25370:5:33","nodeType":"VariableDeclaration","scope":8532,"src":"25363:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8508,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:33"},"returnParameters":{"id":8513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8512,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:33","nodeType":"VariableDeclaration","scope":8532,"src":"25400:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8511,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:33","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:33"},"scope":8989,"src":"25345:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8557,"nodeType":"Block","src":"25966:150:33","statements":[{"expression":{"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"25976:10:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8535,"src":"25996:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8541,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:33","typeDescriptions":{}}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8546,"nodeType":"ExpressionStatement","src":"25976:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"26016:10:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8535,"src":"26030:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8556,"nodeType":"IfStatement","src":"26012:98:33","trueBody":{"id":8555,"nodeType":"Block","src":"26037:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:33","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8535,"src":"26093:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8550,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"26058:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8554,"nodeType":"RevertStatement","src":"26051:48:33"}]}}]},"documentation":{"id":8533,"nodeType":"StructuredDocumentation","src":"25575:312:33","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8558,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:33","nodeType":"FunctionDefinition","parameters":{"id":8536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8535,"mutability":"mutable","name":"value","nameLocation":"25917:5:33","nodeType":"VariableDeclaration","scope":8558,"src":"25910:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8534,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:33"},"returnParameters":{"id":8539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8538,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:33","nodeType":"VariableDeclaration","scope":8558,"src":"25947:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8537,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:33","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:33"},"scope":8989,"src":"25892:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8583,"nodeType":"Block","src":"26513:150:33","statements":[{"expression":{"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"26523:10:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8561,"src":"26543:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8567,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:33","typeDescriptions":{}}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8572,"nodeType":"ExpressionStatement","src":"26523:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"26563:10:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8561,"src":"26577:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8582,"nodeType":"IfStatement","src":"26559:98:33","trueBody":{"id":8581,"nodeType":"Block","src":"26584:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:33","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8561,"src":"26640:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8576,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"26605:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8580,"nodeType":"RevertStatement","src":"26598:48:33"}]}}]},"documentation":{"id":8559,"nodeType":"StructuredDocumentation","src":"26122:312:33","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8584,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:33","nodeType":"FunctionDefinition","parameters":{"id":8562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8561,"mutability":"mutable","name":"value","nameLocation":"26464:5:33","nodeType":"VariableDeclaration","scope":8584,"src":"26457:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8560,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:33"},"returnParameters":{"id":8565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8564,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:33","nodeType":"VariableDeclaration","scope":8584,"src":"26494:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8563,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:33","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:33"},"scope":8989,"src":"26439:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8609,"nodeType":"Block","src":"27060:150:33","statements":[{"expression":{"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"27070:10:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"27090:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8593,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:33","typeDescriptions":{}}},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8598,"nodeType":"ExpressionStatement","src":"27070:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"27110:10:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"27124:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8608,"nodeType":"IfStatement","src":"27106:98:33","trueBody":{"id":8607,"nodeType":"Block","src":"27131:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:33","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8587,"src":"27187:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8602,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"27152:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8606,"nodeType":"RevertStatement","src":"27145:48:33"}]}}]},"documentation":{"id":8585,"nodeType":"StructuredDocumentation","src":"26669:312:33","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8610,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:33","nodeType":"FunctionDefinition","parameters":{"id":8588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8587,"mutability":"mutable","name":"value","nameLocation":"27011:5:33","nodeType":"VariableDeclaration","scope":8610,"src":"27004:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8586,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:33"},"returnParameters":{"id":8591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8590,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:33","nodeType":"VariableDeclaration","scope":8610,"src":"27041:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8589,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:33","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:33"},"scope":8989,"src":"26986:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8635,"nodeType":"Block","src":"27607:150:33","statements":[{"expression":{"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"27617:10:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"27637:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8619,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:33","typeDescriptions":{}}},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8624,"nodeType":"ExpressionStatement","src":"27617:26:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"27657:10:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"27671:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8634,"nodeType":"IfStatement","src":"27653:98:33","trueBody":{"id":8633,"nodeType":"Block","src":"27678:73:33","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:33","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"27734:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8628,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"27699:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8632,"nodeType":"RevertStatement","src":"27692:48:33"}]}}]},"documentation":{"id":8611,"nodeType":"StructuredDocumentation","src":"27216:312:33","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8636,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:33","nodeType":"FunctionDefinition","parameters":{"id":8614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8613,"mutability":"mutable","name":"value","nameLocation":"27558:5:33","nodeType":"VariableDeclaration","scope":8636,"src":"27551:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8612,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:33"},"returnParameters":{"id":8617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8616,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:33","nodeType":"VariableDeclaration","scope":8636,"src":"27588:17:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8615,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:33","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:33"},"scope":8989,"src":"27533:224:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8661,"nodeType":"Block","src":"28147:148:33","statements":[{"expression":{"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"28157:10:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8639,"src":"28176:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8645,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:33","typeDescriptions":{}}},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8650,"nodeType":"ExpressionStatement","src":"28157:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"28196:10:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8639,"src":"28210:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8660,"nodeType":"IfStatement","src":"28192:97:33","trueBody":{"id":8659,"nodeType":"Block","src":"28217:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:33","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8639,"src":"28272:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8654,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"28238:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8658,"nodeType":"RevertStatement","src":"28231:47:33"}]}}]},"documentation":{"id":8637,"nodeType":"StructuredDocumentation","src":"27763:307:33","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8662,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:33","nodeType":"FunctionDefinition","parameters":{"id":8640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8639,"mutability":"mutable","name":"value","nameLocation":"28099:5:33","nodeType":"VariableDeclaration","scope":8662,"src":"28092:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8638,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:33"},"returnParameters":{"id":8643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8642,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:33","nodeType":"VariableDeclaration","scope":8662,"src":"28129:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8641,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:33","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:33"},"scope":8989,"src":"28075:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8687,"nodeType":"Block","src":"28685:148:33","statements":[{"expression":{"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"28695:10:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"28714:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8671,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:33","typeDescriptions":{}}},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8676,"nodeType":"ExpressionStatement","src":"28695:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8668,"src":"28734:10:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"28748:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8686,"nodeType":"IfStatement","src":"28730:97:33","trueBody":{"id":8685,"nodeType":"Block","src":"28755:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:33","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"28810:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8680,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"28776:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8684,"nodeType":"RevertStatement","src":"28769:47:33"}]}}]},"documentation":{"id":8663,"nodeType":"StructuredDocumentation","src":"28301:307:33","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8688,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:33","nodeType":"FunctionDefinition","parameters":{"id":8666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8665,"mutability":"mutable","name":"value","nameLocation":"28637:5:33","nodeType":"VariableDeclaration","scope":8688,"src":"28630:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8664,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:33"},"returnParameters":{"id":8669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8668,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:33","nodeType":"VariableDeclaration","scope":8688,"src":"28667:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8667,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:33","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:33"},"scope":8989,"src":"28613:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8713,"nodeType":"Block","src":"29223:148:33","statements":[{"expression":{"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"29233:10:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"29252:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8697,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:33","typeDescriptions":{}}},"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8702,"nodeType":"ExpressionStatement","src":"29233:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"29272:10:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"29286:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8712,"nodeType":"IfStatement","src":"29268:97:33","trueBody":{"id":8711,"nodeType":"Block","src":"29293:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:33","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"29348:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8706,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"29314:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8710,"nodeType":"RevertStatement","src":"29307:47:33"}]}}]},"documentation":{"id":8689,"nodeType":"StructuredDocumentation","src":"28839:307:33","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8714,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:33","nodeType":"FunctionDefinition","parameters":{"id":8692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8691,"mutability":"mutable","name":"value","nameLocation":"29175:5:33","nodeType":"VariableDeclaration","scope":8714,"src":"29168:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8690,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:33"},"returnParameters":{"id":8695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8694,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:33","nodeType":"VariableDeclaration","scope":8714,"src":"29205:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8693,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:33","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:33"},"scope":8989,"src":"29151:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8739,"nodeType":"Block","src":"29761:148:33","statements":[{"expression":{"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"29771:10:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"29790:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8723,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:33","typeDescriptions":{}}},"id":8726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8728,"nodeType":"ExpressionStatement","src":"29771:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"29810:10:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"29824:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8738,"nodeType":"IfStatement","src":"29806:97:33","trueBody":{"id":8737,"nodeType":"Block","src":"29831:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:33","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8717,"src":"29886:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8732,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"29852:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8736,"nodeType":"RevertStatement","src":"29845:47:33"}]}}]},"documentation":{"id":8715,"nodeType":"StructuredDocumentation","src":"29377:307:33","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:33","nodeType":"FunctionDefinition","parameters":{"id":8718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8717,"mutability":"mutable","name":"value","nameLocation":"29713:5:33","nodeType":"VariableDeclaration","scope":8740,"src":"29706:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8716,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:33"},"returnParameters":{"id":8721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8720,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:33","nodeType":"VariableDeclaration","scope":8740,"src":"29743:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8719,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:33","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:33"},"scope":8989,"src":"29689:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8765,"nodeType":"Block","src":"30299:148:33","statements":[{"expression":{"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"30309:10:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"30328:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8749,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:33","typeDescriptions":{}}},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8754,"nodeType":"ExpressionStatement","src":"30309:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"30348:10:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"30362:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8764,"nodeType":"IfStatement","src":"30344:97:33","trueBody":{"id":8763,"nodeType":"Block","src":"30369:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:33","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"30424:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8758,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"30390:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8762,"nodeType":"RevertStatement","src":"30383:47:33"}]}}]},"documentation":{"id":8741,"nodeType":"StructuredDocumentation","src":"29915:307:33","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8766,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:33","nodeType":"FunctionDefinition","parameters":{"id":8744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8743,"mutability":"mutable","name":"value","nameLocation":"30251:5:33","nodeType":"VariableDeclaration","scope":8766,"src":"30244:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8742,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:33"},"returnParameters":{"id":8747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8746,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:33","nodeType":"VariableDeclaration","scope":8766,"src":"30281:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8745,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:33","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:33"},"scope":8989,"src":"30227:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8791,"nodeType":"Block","src":"30837:148:33","statements":[{"expression":{"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8772,"src":"30847:10:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"30866:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8775,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:33","typeDescriptions":{}}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8780,"nodeType":"ExpressionStatement","src":"30847:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8772,"src":"30886:10:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"30900:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8790,"nodeType":"IfStatement","src":"30882:97:33","trueBody":{"id":8789,"nodeType":"Block","src":"30907:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:33","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"30962:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8784,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"30928:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8788,"nodeType":"RevertStatement","src":"30921:47:33"}]}}]},"documentation":{"id":8767,"nodeType":"StructuredDocumentation","src":"30453:307:33","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:33","nodeType":"FunctionDefinition","parameters":{"id":8770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8769,"mutability":"mutable","name":"value","nameLocation":"30789:5:33","nodeType":"VariableDeclaration","scope":8792,"src":"30782:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8768,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:33"},"returnParameters":{"id":8773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8772,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:33","nodeType":"VariableDeclaration","scope":8792,"src":"30819:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8771,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:33","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:33"},"scope":8989,"src":"30765:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8817,"nodeType":"Block","src":"31375:148:33","statements":[{"expression":{"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"31385:10:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8795,"src":"31404:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8801,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:33","typeDescriptions":{}}},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8806,"nodeType":"ExpressionStatement","src":"31385:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"31424:10:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8795,"src":"31438:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8816,"nodeType":"IfStatement","src":"31420:97:33","trueBody":{"id":8815,"nodeType":"Block","src":"31445:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:33","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8795,"src":"31500:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"31466:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8814,"nodeType":"RevertStatement","src":"31459:47:33"}]}}]},"documentation":{"id":8793,"nodeType":"StructuredDocumentation","src":"30991:307:33","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:33","nodeType":"FunctionDefinition","parameters":{"id":8796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8795,"mutability":"mutable","name":"value","nameLocation":"31327:5:33","nodeType":"VariableDeclaration","scope":8818,"src":"31320:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8794,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:33"},"returnParameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:33","nodeType":"VariableDeclaration","scope":8818,"src":"31357:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8797,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:33","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:33"},"scope":8989,"src":"31303:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8843,"nodeType":"Block","src":"31913:148:33","statements":[{"expression":{"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"31923:10:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"31942:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8827,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:33","typeDescriptions":{}}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8832,"nodeType":"ExpressionStatement","src":"31923:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8824,"src":"31962:10:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"31976:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8842,"nodeType":"IfStatement","src":"31958:97:33","trueBody":{"id":8841,"nodeType":"Block","src":"31983:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:33","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"32038:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"32004:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8840,"nodeType":"RevertStatement","src":"31997:47:33"}]}}]},"documentation":{"id":8819,"nodeType":"StructuredDocumentation","src":"31529:307:33","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:33","nodeType":"FunctionDefinition","parameters":{"id":8822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8821,"mutability":"mutable","name":"value","nameLocation":"31865:5:33","nodeType":"VariableDeclaration","scope":8844,"src":"31858:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8820,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:33"},"returnParameters":{"id":8825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8824,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:33","nodeType":"VariableDeclaration","scope":8844,"src":"31895:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8823,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:33","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:33"},"scope":8989,"src":"31841:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8869,"nodeType":"Block","src":"32451:148:33","statements":[{"expression":{"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8850,"src":"32461:10:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"32480:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8853,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:33","typeDescriptions":{}}},"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8858,"nodeType":"ExpressionStatement","src":"32461:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8850,"src":"32500:10:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"32514:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8868,"nodeType":"IfStatement","src":"32496:97:33","trueBody":{"id":8867,"nodeType":"Block","src":"32521:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:33","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8847,"src":"32576:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"32542:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8866,"nodeType":"RevertStatement","src":"32535:47:33"}]}}]},"documentation":{"id":8845,"nodeType":"StructuredDocumentation","src":"32067:307:33","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:33","nodeType":"FunctionDefinition","parameters":{"id":8848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8847,"mutability":"mutable","name":"value","nameLocation":"32403:5:33","nodeType":"VariableDeclaration","scope":8870,"src":"32396:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8846,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:33"},"returnParameters":{"id":8851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8850,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:33","nodeType":"VariableDeclaration","scope":8870,"src":"32433:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8849,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:33","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:33"},"scope":8989,"src":"32379:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8895,"nodeType":"Block","src":"32989:148:33","statements":[{"expression":{"id":8883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8876,"src":"32999:10:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"33018:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8879,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:33","typeDescriptions":{}}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8884,"nodeType":"ExpressionStatement","src":"32999:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8876,"src":"33038:10:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"33052:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8894,"nodeType":"IfStatement","src":"33034:97:33","trueBody":{"id":8893,"nodeType":"Block","src":"33059:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:33","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"33114:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"33080:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8892,"nodeType":"RevertStatement","src":"33073:47:33"}]}}]},"documentation":{"id":8871,"nodeType":"StructuredDocumentation","src":"32605:307:33","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:33","nodeType":"FunctionDefinition","parameters":{"id":8874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8873,"mutability":"mutable","name":"value","nameLocation":"32941:5:33","nodeType":"VariableDeclaration","scope":8896,"src":"32934:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8872,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:33"},"returnParameters":{"id":8877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8876,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:33","nodeType":"VariableDeclaration","scope":8896,"src":"32971:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8875,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:33","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:33"},"scope":8989,"src":"32917:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8921,"nodeType":"Block","src":"33527:148:33","statements":[{"expression":{"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"33537:10:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"33556:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8905,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:33","typeDescriptions":{}}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8910,"nodeType":"ExpressionStatement","src":"33537:25:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"33576:10:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"33590:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8920,"nodeType":"IfStatement","src":"33572:97:33","trueBody":{"id":8919,"nodeType":"Block","src":"33597:72:33","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:33","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8899,"src":"33652:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"33618:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8918,"nodeType":"RevertStatement","src":"33611:47:33"}]}}]},"documentation":{"id":8897,"nodeType":"StructuredDocumentation","src":"33143:307:33","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:33","nodeType":"FunctionDefinition","parameters":{"id":8900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8899,"mutability":"mutable","name":"value","nameLocation":"33479:5:33","nodeType":"VariableDeclaration","scope":8922,"src":"33472:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8898,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:33"},"returnParameters":{"id":8903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8902,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:33","nodeType":"VariableDeclaration","scope":8922,"src":"33509:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8901,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:33","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:33"},"scope":8989,"src":"33455:220:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8947,"nodeType":"Block","src":"34058:146:33","statements":[{"expression":{"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"34068:10:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"34086:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8931,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:33","typeDescriptions":{}}},"id":8934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8936,"nodeType":"ExpressionStatement","src":"34068:24:33"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"34106:10:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"34120:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8946,"nodeType":"IfStatement","src":"34102:96:33","trueBody":{"id":8945,"nodeType":"Block","src":"34127:71:33","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:33","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8925,"src":"34181:5:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"34148:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8944,"nodeType":"RevertStatement","src":"34141:46:33"}]}}]},"documentation":{"id":8923,"nodeType":"StructuredDocumentation","src":"33681:302:33","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:33","nodeType":"FunctionDefinition","parameters":{"id":8926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8925,"mutability":"mutable","name":"value","nameLocation":"34011:5:33","nodeType":"VariableDeclaration","scope":8948,"src":"34004:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8924,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:33"},"returnParameters":{"id":8929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8928,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:33","nodeType":"VariableDeclaration","scope":8948,"src":"34041:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8927,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:33","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:33"},"scope":8989,"src":"33988:216:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8977,"nodeType":"Block","src":"34444:250:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"34557:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8960,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:33","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:33","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:33","memberName":"max","nodeType":"MemberAccess","src":"34573:16:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8957,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:33","typeDescriptions":{}}},"id":8964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8971,"nodeType":"IfStatement","src":"34553:105:33","trueBody":{"id":8970,"nodeType":"Block","src":"34592:66:33","statements":[{"errorCall":{"arguments":[{"id":8967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"34641:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8966,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"34613:27:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8969,"nodeType":"RevertStatement","src":"34606:41:33"}]}},{"expression":{"arguments":[{"id":8974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8951,"src":"34681:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8972,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:33","typeDescriptions":{}}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8955,"id":8976,"nodeType":"Return","src":"34667:20:33"}]},"documentation":{"id":8949,"nodeType":"StructuredDocumentation","src":"34210:165:33","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:33","nodeType":"FunctionDefinition","parameters":{"id":8952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8951,"mutability":"mutable","name":"value","nameLocation":"34406:5:33","nodeType":"VariableDeclaration","scope":8978,"src":"34398:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8950,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:33"},"returnParameters":{"id":8955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8978,"src":"34436:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8953,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:33","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:33"},"scope":8989,"src":"34380:314:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8987,"nodeType":"Block","src":"34853:87:33","statements":[{"AST":{"nativeSrc":"34888:46:33","nodeType":"YulBlock","src":"34888:46:33","statements":[{"nativeSrc":"34902:22:33","nodeType":"YulAssignment","src":"34902:22:33","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:33","nodeType":"YulIdentifier","src":"34921:1:33"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:33","nodeType":"YulIdentifier","src":"34914:6:33"},"nativeSrc":"34914:9:33","nodeType":"YulFunctionCall","src":"34914:9:33"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:33","nodeType":"YulIdentifier","src":"34907:6:33"},"nativeSrc":"34907:17:33","nodeType":"YulFunctionCall","src":"34907:17:33"},"variableNames":[{"name":"u","nativeSrc":"34902:1:33","nodeType":"YulIdentifier","src":"34902:1:33"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8981,"isOffset":false,"isSlot":false,"src":"34921:1:33","valueSize":1},{"declaration":8984,"isOffset":false,"isSlot":false,"src":"34902:1:33","valueSize":1}],"flags":["memory-safe"],"id":8986,"nodeType":"InlineAssembly","src":"34863:71:33"}]},"documentation":{"id":8979,"nodeType":"StructuredDocumentation","src":"34700:90:33","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8988,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:33","nodeType":"FunctionDefinition","parameters":{"id":8982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8981,"mutability":"mutable","name":"b","nameLocation":"34816:1:33","nodeType":"VariableDeclaration","scope":8988,"src":"34811:6:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8980,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:33"},"returnParameters":{"id":8985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8984,"mutability":"mutable","name":"u","nameLocation":"34850:1:33","nodeType":"VariableDeclaration","scope":8988,"src":"34842:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8983,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:33"},"scope":8989,"src":"34795:145:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8990,"src":"769:34173:33","usedErrors":[7234,7239,7246,7251],"usedEvents":[]}],"src":"192:34751:33"},"id":33},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8989],"SignedMath":[9133]},"id":9134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8991,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:34"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9134,"sourceUnit":8990,"src":"135:40:34","symbolAliases":[{"foreign":{"id":8992,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"143:8:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8994,"nodeType":"StructuredDocumentation","src":"177:80:34","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9133,"linearizedBaseContracts":[9133],"name":"SignedMath","nameLocation":"266:10:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":9023,"nodeType":"Block","src":"746:215:34","statements":[{"id":9022,"nodeType":"UncheckedBlock","src":"756:199:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9001,"src":"894:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"900:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9001,"src":"904:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9015,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"932:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"916:8:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8989_$","typeString":"type(library SafeCast)"}},"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:34","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8988,"src":"916:15:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9011,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:34","typeDescriptions":{}}},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9005,"id":9021,"nodeType":"Return","src":"887:57:34"}]}]},"documentation":{"id":8995,"nodeType":"StructuredDocumentation","src":"283:374:34","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9024,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:34","nodeType":"FunctionDefinition","parameters":{"id":9002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8997,"mutability":"mutable","name":"condition","nameLocation":"684:9:34","nodeType":"VariableDeclaration","scope":9024,"src":"679:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8996,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8999,"mutability":"mutable","name":"a","nameLocation":"702:1:34","nodeType":"VariableDeclaration","scope":9024,"src":"695:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8998,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9001,"mutability":"mutable","name":"b","nameLocation":"712:1:34","nodeType":"VariableDeclaration","scope":9024,"src":"705:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9000,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:34"},"returnParameters":{"id":9005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9024,"src":"738:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9003,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:34"},"scope":9133,"src":"662:299:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9042,"nodeType":"Block","src":"1102:44:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"1127:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9036,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"1131:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9027,"src":"1134:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"1137:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9034,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"1119:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9033,"id":9041,"nodeType":"Return","src":"1112:27:34"}]},"documentation":{"id":9025,"nodeType":"StructuredDocumentation","src":"967:66:34","text":" @dev Returns the largest of two signed numbers."},"id":9043,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:34","nodeType":"FunctionDefinition","parameters":{"id":9030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9027,"mutability":"mutable","name":"a","nameLocation":"1058:1:34","nodeType":"VariableDeclaration","scope":9043,"src":"1051:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9026,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9029,"mutability":"mutable","name":"b","nameLocation":"1068:1:34","nodeType":"VariableDeclaration","scope":9043,"src":"1061:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9028,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:34"},"returnParameters":{"id":9033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9043,"src":"1094:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9031,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:34"},"scope":9133,"src":"1038:108:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9061,"nodeType":"Block","src":"1288:44:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"1313:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"1317:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9057,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9046,"src":"1320:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9058,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9048,"src":"1323:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9053,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"1305:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9052,"id":9060,"nodeType":"Return","src":"1298:27:34"}]},"documentation":{"id":9044,"nodeType":"StructuredDocumentation","src":"1152:67:34","text":" @dev Returns the smallest of two signed numbers."},"id":9062,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:34","nodeType":"FunctionDefinition","parameters":{"id":9049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9046,"mutability":"mutable","name":"a","nameLocation":"1244:1:34","nodeType":"VariableDeclaration","scope":9062,"src":"1237:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9045,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9048,"mutability":"mutable","name":"b","nameLocation":"1254:1:34","nodeType":"VariableDeclaration","scope":9062,"src":"1247:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9047,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:34"},"returnParameters":{"id":9052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9062,"src":"1280:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9050,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:34"},"scope":9133,"src":"1224:108:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9105,"nodeType":"Block","src":"1537:162:34","statements":[{"assignments":[9073],"declarations":[{"constant":false,"id":9073,"mutability":"mutable","name":"x","nameLocation":"1606:1:34","nodeType":"VariableDeclaration","scope":9105,"src":"1599:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9072,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9086,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"1611:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9075,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9067,"src":"1615:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"1622:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9067,"src":"1626:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:34"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9087,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"1651:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9092,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"1671:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:34","typeDescriptions":{}}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:34","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9088,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:34","typeDescriptions":{}}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"1685:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9098,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9067,"src":"1689:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9071,"id":9104,"nodeType":"Return","src":"1644:48:34"}]},"documentation":{"id":9063,"nodeType":"StructuredDocumentation","src":"1338:126:34","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9106,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:34","nodeType":"FunctionDefinition","parameters":{"id":9068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9065,"mutability":"mutable","name":"a","nameLocation":"1493:1:34","nodeType":"VariableDeclaration","scope":9106,"src":"1486:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9064,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9067,"mutability":"mutable","name":"b","nameLocation":"1503:1:34","nodeType":"VariableDeclaration","scope":9106,"src":"1496:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9066,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:34"},"returnParameters":{"id":9071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9106,"src":"1529:6:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9069,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:34"},"scope":9133,"src":"1469:230:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9131,"nodeType":"Block","src":"1843:767:34","statements":[{"id":9130,"nodeType":"UncheckedBlock","src":"1853:751:34","statements":[{"assignments":[9115],"declarations":[{"constant":false,"id":9115,"mutability":"mutable","name":"mask","nameLocation":"2424:4:34","nodeType":"VariableDeclaration","scope":9130,"src":"2417:11:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9114,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9119,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9116,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9109,"src":"2431:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:34","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9122,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9109,"src":"2576:1:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9123,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"2580:4:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9126,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"2588:4:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:34","typeDescriptions":{}}},"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9113,"id":9129,"nodeType":"Return","src":"2560:33:34"}]}]},"documentation":{"id":9107,"nodeType":"StructuredDocumentation","src":"1705:78:34","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9132,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:34","nodeType":"FunctionDefinition","parameters":{"id":9110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9109,"mutability":"mutable","name":"n","nameLocation":"1808:1:34","nodeType":"VariableDeclaration","scope":9132,"src":"1801:8:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9108,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:34","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:34"},"returnParameters":{"id":9113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9132,"src":"1834:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:34"},"scope":9133,"src":"1788:822:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9134,"src":"258:2354:34","usedErrors":[],"usedEvents":[]}],"src":"109:2504:34"},"id":34},"contracts/DAOContract.sol":{"ast":{"absolutePath":"contracts/DAOContract.sol","exportedSymbols":{"Context":[3967],"DAOContract":[9147],"Ownable":[1746]},"id":9148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9135,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:35"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9148,"sourceUnit":1747,"src":"58:52:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9137,"name":"Ownable","nameLocations":["136:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"136:7:35"},"id":9138,"nodeType":"InheritanceSpecifier","src":"136:7:35"}],"canonicalName":"DAOContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9147,"linearizedBaseContracts":[9147,1746,3967],"name":"DAOContract","nameLocation":"121:11:35","nodeType":"ContractDefinition","nodes":[{"body":{"id":9145,"nodeType":"Block","src":"184:2:35","statements":[]},"id":9146,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"172:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"176:6:35","memberName":"sender","nodeType":"MemberAccess","src":"172:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9143,"kind":"baseConstructorSpecifier","modifierName":{"id":9140,"name":"Ownable","nameLocations":["164:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"164:7:35"},"nodeType":"ModifierInvocation","src":"164:19:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9139,"nodeType":"ParameterList","parameters":[],"src":"161:2:35"},"returnParameters":{"id":9144,"nodeType":"ParameterList","parameters":[],"src":"184:0:35"},"scope":9147,"src":"150:36:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9148,"src":"112:132:35","usedErrors":[1612,1617],"usedEvents":[1623]}],"src":"32:213:35"},"id":35},"contracts/KofiCoin.sol":{"ast":{"absolutePath":"contracts/KofiCoin.sol","exportedSymbols":{"AccessControlUpgradeable":[362],"ContextUpgradeable":[1475],"ERC165Upgradeable":[1515],"ERC1967Utils":[2240],"ERC20Upgradeable":[1429],"IAccessControl":[1598],"IERC1822Proxiable":[1809],"IERC20":[2328],"IERC20Errors":[1851],"IERC20Metadata":[2354],"Initializable":[630],"KofiCoin":[9229],"UUPSUpgradeable":[812]},"id":9230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9149,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:36"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":9150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9230,"sourceUnit":1430,"src":"58:78:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":9151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9230,"sourceUnit":363,"src":"137:81:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":9152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9230,"sourceUnit":813,"src":"219:77:36","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9153,"name":"ERC20Upgradeable","nameLocations":["319:16:36"],"nodeType":"IdentifierPath","referencedDeclaration":1429,"src":"319:16:36"},"id":9154,"nodeType":"InheritanceSpecifier","src":"319:16:36"},{"baseName":{"id":9155,"name":"AccessControlUpgradeable","nameLocations":["337:24:36"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"337:24:36"},"id":9156,"nodeType":"InheritanceSpecifier","src":"337:24:36"},{"baseName":{"id":9157,"name":"UUPSUpgradeable","nameLocations":["363:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":812,"src":"363:15:36"},"id":9158,"nodeType":"InheritanceSpecifier","src":"363:15:36"}],"canonicalName":"KofiCoin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9229,"linearizedBaseContracts":[9229,812,1809,362,1515,5603,1598,1429,1851,2354,2328,1475,630],"name":"KofiCoin","nameLocation":"307:8:36","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":9163,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"409:11:36","nodeType":"VariableDeclaration","scope":9229,"src":"385:62:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"385:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":9161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"433:13:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":9160,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"423:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"423:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f72c0d8b","id":9168,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"477:13:36","nodeType":"VariableDeclaration","scope":9229,"src":"453:66:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"453:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":9166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"503:15:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":9165,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"493:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"493:26:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":9201,"nodeType":"Block","src":"580:245:36","statements":[{"expression":{"arguments":[{"hexValue":"4b6f666920436f696e","id":9176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"603:11:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_f442f37c6b049acbde171e47e2253dcaa8d20696dc30b003bc5712d0cd4c32b6","typeString":"literal_string \"Kofi Coin\""},"value":"Kofi Coin"},{"hexValue":"4b4f4649","id":9177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"616:6:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6242d477deb057ab2a675f8376358bb6d23cac65533c7d5c8d6908aefd037bb","typeString":"literal_string \"KOFI\""},"value":"KOFI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f442f37c6b049acbde171e47e2253dcaa8d20696dc30b003bc5712d0cd4c32b6","typeString":"literal_string \"Kofi Coin\""},{"typeIdentifier":"t_stringliteral_c6242d477deb057ab2a675f8376358bb6d23cac65533c7d5c8d6908aefd037bb","typeString":"literal_string \"KOFI\""}],"id":9175,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"590:12:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"590:33:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9179,"nodeType":"ExpressionStatement","src":"590:33:36"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9180,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"633:20:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:22:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9182,"nodeType":"ExpressionStatement","src":"633:22:36"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9183,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"665:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"665:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9185,"nodeType":"ExpressionStatement","src":"665:24:36"},{"expression":{"arguments":[{"id":9187,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"710:18:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9188,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"730:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9186,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"699:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"699:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9190,"nodeType":"ExpressionStatement","src":"699:37:36"},{"expression":{"arguments":[{"id":9192,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"757:11:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9193,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"770:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9191,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"746:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"746:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9195,"nodeType":"ExpressionStatement","src":"746:30:36"},{"expression":{"arguments":[{"id":9197,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9168,"src":"797:13:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9198,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"812:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9196,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"786:10:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"786:32:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9200,"nodeType":"ExpressionStatement","src":"786:32:36"}]},"functionSelector":"c4d66de8","id":9202,"implemented":true,"kind":"function","modifiers":[{"id":9173,"kind":"modifierInvocation","modifierName":{"id":9172,"name":"initializer","nameLocations":["568:11:36"],"nodeType":"IdentifierPath","referencedDeclaration":470,"src":"568:11:36"},"nodeType":"ModifierInvocation","src":"568:11:36"}],"name":"initialize","nameLocation":"535:10:36","nodeType":"FunctionDefinition","parameters":{"id":9171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9170,"mutability":"mutable","name":"admin","nameLocation":"554:5:36","nodeType":"VariableDeclaration","scope":9202,"src":"546:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9169,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"545:15:36"},"returnParameters":{"id":9174,"nodeType":"ParameterList","parameters":[],"src":"580:0:36"},"scope":9229,"src":"526:299:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9217,"nodeType":"Block","src":"902:34:36","statements":[{"expression":{"arguments":[{"id":9213,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"918:2:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9214,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"922:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9212,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"912:5:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9216,"nodeType":"ExpressionStatement","src":"912:17:36"}]},"functionSelector":"40c10f19","id":9218,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9209,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9163,"src":"889:11:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9210,"kind":"modifierInvocation","modifierName":{"id":9208,"name":"onlyRole","nameLocations":["880:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"880:8:36"},"nodeType":"ModifierInvocation","src":"880:21:36"}],"name":"mint","nameLocation":"840:4:36","nodeType":"FunctionDefinition","parameters":{"id":9207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9204,"mutability":"mutable","name":"to","nameLocation":"853:2:36","nodeType":"VariableDeclaration","scope":9218,"src":"845:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9203,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9206,"mutability":"mutable","name":"amount","nameLocation":"865:6:36","nodeType":"VariableDeclaration","scope":9218,"src":"857:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9205,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"844:28:36"},"returnParameters":{"id":9211,"nodeType":"ParameterList","parameters":[],"src":"902:0:36"},"scope":9229,"src":"831:105:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[766],"body":{"id":9227,"nodeType":"Block","src":"1038:2:36","statements":[]},"id":9228,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9224,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9168,"src":"1023:13:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9225,"kind":"modifierInvocation","modifierName":{"id":9223,"name":"onlyRole","nameLocations":["1014:8:36"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1014:8:36"},"nodeType":"ModifierInvocation","src":"1014:23:36"}],"name":"_authorizeUpgrade","nameLocation":"951:17:36","nodeType":"FunctionDefinition","overrides":{"id":9222,"nodeType":"OverrideSpecifier","overrides":[],"src":"1005:8:36"},"parameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"newImplementation","nameLocation":"977:17:36","nodeType":"VariableDeclaration","scope":9228,"src":"969:25:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9219,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"968:27:36"},"returnParameters":{"id":9226,"nodeType":"ParameterList","parameters":[],"src":"1038:0:36"},"scope":9229,"src":"942:98:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9230,"src":"298:744:36","usedErrors":[379,382,657,662,1525,1528,1821,1826,1831,1840,1845,1850,1966,1979,3687,3980],"usedEvents":[387,1537,1546,1555,1758,2262,2271]}],"src":"32:1011:36"},"id":36},"contracts/LearningModuleNFT.sol":{"ast":{"absolutePath":"contracts/LearningModuleNFT.sol","exportedSymbols":{"Context":[3967],"ERC721":[3311],"ERC721URIStorage":[3572],"IERC165":[5603],"IERC4906":[1795],"LearningModuleNFT":[9293],"Ownable":[1746],"Strings":[5567]},"id":9294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9231,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:37"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":9232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9294,"sourceUnit":3573,"src":"58:78:37","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9294,"sourceUnit":1747,"src":"137:52:37","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9234,"name":"ERC721URIStorage","nameLocations":["221:16:37"],"nodeType":"IdentifierPath","referencedDeclaration":3572,"src":"221:16:37"},"id":9235,"nodeType":"InheritanceSpecifier","src":"221:16:37"},{"baseName":{"id":9236,"name":"Ownable","nameLocations":["239:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"239:7:37"},"id":9237,"nodeType":"InheritanceSpecifier","src":"239:7:37"}],"canonicalName":"LearningModuleNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9293,"linearizedBaseContracts":[9293,1746,3572,3311,1899,3600,1795,3428,5591,5603,3967],"name":"LearningModuleNFT","nameLocation":"200:17:37","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"75794a3c","id":9239,"mutability":"mutable","name":"nextTokenId","nameLocation":"268:11:37","nodeType":"VariableDeclaration","scope":9293,"src":"253:26:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9238,"name":"uint256","nodeType":"ElementaryTypeName","src":"253:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"38e21cce","id":9243,"mutability":"mutable","name":"hasMinted","nameLocation":"317:9:37","nodeType":"VariableDeclaration","scope":9293,"src":"285:41:37","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9242,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9240,"name":"address","nodeType":"ElementaryTypeName","src":"293:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"285:24:37","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9241,"name":"bool","nodeType":"ElementaryTypeName","src":"304:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":9254,"nodeType":"Block","src":"406:2:37","statements":[]},"id":9255,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c6561726e696e67204d6f64756c65204e4654","id":9246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"354:21:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_ddde980a4429caaabcafcfcafd155b5b98e244e4ff59d4e0d0e3c1803eb5e7bd","typeString":"literal_string \"Learning Module NFT\""},"value":"Learning Module NFT"},{"hexValue":"4c4d4e4654","id":9247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"377:7:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_889a276eebf8e1828b2d131407b13d544a8f9beb3fc545e703fe19f722f3053a","typeString":"literal_string \"LMNFT\""},"value":"LMNFT"}],"id":9248,"kind":"baseConstructorSpecifier","modifierName":{"id":9245,"name":"ERC721","nameLocations":["347:6:37"],"nodeType":"IdentifierPath","referencedDeclaration":3311,"src":"347:6:37"},"nodeType":"ModifierInvocation","src":"347:38:37"},{"arguments":[{"expression":{"id":9250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"394:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"398:6:37","memberName":"sender","nodeType":"MemberAccess","src":"394:10:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9252,"kind":"baseConstructorSpecifier","modifierName":{"id":9249,"name":"Ownable","nameLocations":["386:7:37"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"386:7:37"},"nodeType":"ModifierInvocation","src":"386:19:37"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9244,"nodeType":"ParameterList","parameters":[],"src":"344:2:37"},"returnParameters":{"id":9253,"nodeType":"ParameterList","parameters":[],"src":"406:0:37"},"scope":9293,"src":"333:75:37","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9291,"nodeType":"Block","src":"478:187:37","statements":[{"expression":{"arguments":[{"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"496:14:37","subExpression":{"baseExpression":{"id":9265,"name":"hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"497:9:37","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9267,"indexExpression":{"id":9266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"507:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"497:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206d696e746564","id":9269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"512:16:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59","typeString":"literal_string \"Already minted\""},"value":"Already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59","typeString":"literal_string \"Already minted\""}],"id":9264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"488:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"488:41:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9271,"nodeType":"ExpressionStatement","src":"488:41:37"},{"expression":{"arguments":[{"id":9273,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"549:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9274,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9239,"src":"553:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9272,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2989,3019],"referencedDeclaration":2989,"src":"539:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:26:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9276,"nodeType":"ExpressionStatement","src":"539:26:37"},{"expression":{"arguments":[{"id":9278,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9239,"src":"588:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9279,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"601:3:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9277,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"575:12:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"575:30:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9281,"nodeType":"ExpressionStatement","src":"575:30:37"},{"expression":{"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9282,"name":"hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"615:9:37","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9284,"indexExpression":{"id":9283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"625:2:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"615:13:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"631:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"615:20:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9287,"nodeType":"ExpressionStatement","src":"615:20:37"},{"expression":{"id":9289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"645:13:37","subExpression":{"id":9288,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9239,"src":"645:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9290,"nodeType":"ExpressionStatement","src":"645:13:37"}]},"functionSelector":"d0def521","id":9292,"implemented":true,"kind":"function","modifiers":[{"id":9262,"kind":"modifierInvocation","modifierName":{"id":9261,"name":"onlyOwner","nameLocations":["468:9:37"],"nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"468:9:37"},"nodeType":"ModifierInvocation","src":"468:9:37"}],"name":"mint","nameLocation":"423:4:37","nodeType":"FunctionDefinition","parameters":{"id":9260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9257,"mutability":"mutable","name":"to","nameLocation":"436:2:37","nodeType":"VariableDeclaration","scope":9292,"src":"428:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9256,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9259,"mutability":"mutable","name":"uri","nameLocation":"454:3:37","nodeType":"VariableDeclaration","scope":9292,"src":"440:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9258,"name":"string","nodeType":"ElementaryTypeName","src":"440:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"427:31:37"},"returnParameters":{"id":9263,"nodeType":"ParameterList","parameters":[],"src":"478:0:37"},"scope":9293,"src":"414:251:37","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9294,"src":"191:476:37","usedErrors":[1612,1617,1857,1862,1871,1876,1881,1888,1893,1898],"usedEvents":[1623,1787,1794,3327,3336,3345]}],"src":"32:636:37"},"id":37},"contracts/Marketplace.sol":{"ast":{"absolutePath":"contracts/Marketplace.sol","exportedSymbols":{"Context":[3967],"Marketplace":[9307],"Ownable":[1746]},"id":9308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9295,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:38"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9308,"sourceUnit":1747,"src":"58:52:38","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9297,"name":"Ownable","nameLocations":["136:7:38"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"136:7:38"},"id":9298,"nodeType":"InheritanceSpecifier","src":"136:7:38"}],"canonicalName":"Marketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9307,"linearizedBaseContracts":[9307,1746,3967],"name":"Marketplace","nameLocation":"121:11:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":9305,"nodeType":"Block","src":"184:2:38","statements":[]},"id":9306,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9301,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"172:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"176:6:38","memberName":"sender","nodeType":"MemberAccess","src":"172:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9303,"kind":"baseConstructorSpecifier","modifierName":{"id":9300,"name":"Ownable","nameLocations":["164:7:38"],"nodeType":"IdentifierPath","referencedDeclaration":1746,"src":"164:7:38"},"nodeType":"ModifierInvocation","src":"164:19:38"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9299,"nodeType":"ParameterList","parameters":[],"src":"161:2:38"},"returnParameters":{"id":9304,"nodeType":"ParameterList","parameters":[],"src":"184:0:38"},"scope":9307,"src":"150:36:38","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9308,"src":"112:131:38","usedErrors":[1612,1617],"usedEvents":[1623]}],"src":"32:212:38"},"id":38}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1607,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb84f4162c9378d8ed2a6a1835f127e486f2fe2094ee32a46e3b0b897ae2318f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB DUP5 DELEGATECALL AND 0x2C SWAP4 PUSH25 0xD8ED2A6A1835F127E486F2FE2094EE32A46E3B0B897AE2318F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"496:5741:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb84f4162c9378d8ed2a6a1835f127e486f2fe2094ee32a46e3b0b897ae2318f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB DUP5 DELEGATECALL AND 0x2C SWAP4 PUSH25 0xD8ED2A6A1835F127E486F2FE2094EE32A46E3B0B897AE2318F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"496:5741:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2387,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2389,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2393,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2397,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2401,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2407,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x2b27b58570ff2456c7e65022a356c7e4f205bfabf95d0e870855a86587bb1356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51268bd4266abe09ec07cac04b84c63ed97d2f847fd821e681428b1df7991b1\",\"dweb:/ipfs/QmQBHj8tsrtiXBdegQZeqcxmBEQd2PMzPSKQ5jUELedEHb\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2387,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2389,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2393,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2397,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2401,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2407,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3474,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab3252749978b9d2bfeaed81f36adcf6e485cad586be50d3d5271522f2d53d7e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB ORIGIN MSTORE PUSH21 0x9978B9D2BFEAED81F36ADCF6E485CAD586BE50D3D5 0x27 ISZERO 0x22 CALLCODE 0xD5 RETURNDATASIZE PUSH31 0x64736F6C634300081800330000000000000000000000000000000000000000 ","sourceMap":"431:1488:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab3252749978b9d2bfeaed81f36adcf6e485cad586be50d3d5271522f2d53d7e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB ORIGIN MSTORE PUSH21 0x9978B9D2BFEAED81F36ADCF6E485CAD586BE50D3D5 0x27 ISZERO 0x22 CALLCODE 0xD5 RETURNDATASIZE PUSH31 0x64736F6C634300081800330000000000000000000000000000000000000000 ","sourceMap":"431:1488:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029ea6fa0e741d1731878585dfb9362c526f67b0e84e963abc2c54a0905eef4b164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xEA PUSH16 0xA0E741D1731878585DFB9362C526F67B 0xE DUP5 0xE9 PUSH4 0xABC2C54A MULMOD SDIV 0xEE DELEGATECALL 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"233:5815:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029ea6fa0e741d1731878585dfb9362c526f67b0e84e963abc2c54a0905eef4b164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xEA PUSH16 0xA0E741D1731878585DFB9362C526F67B 0xE DUP5 0xE9 PUSH4 0xABC2C54A MULMOD SDIV 0xEE DELEGATECALL 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"233:5815:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a39e0259bf1fadd02a6b22eef51f3c1d149f0374ea0d3c3be8bbbe1c39d156d864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP15 MUL MSIZE 0xBF 0x1F 0xAD 0xD0 0x2A PUSH12 0x22EEF51F3C1D149F0374EA0D EXTCODECOPY EXTCODESIZE 0xE8 0xBB 0xBE SHR CODECOPY 0xD1 JUMP 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a39e0259bf1fadd02a6b22eef51f3c1d149f0374ea0d3c3be8bbbe1c39d156d864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP15 MUL MSIZE 0xBF 0x1F 0xAD 0xD0 0x2A PUSH12 0x22EEF51F3C1D149F0374EA0D EXTCODECOPY EXTCODESIZE 0xE8 0xBB 0xBE SHR CODECOPY 0xD1 JUMP 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077124401dfaf97cd08e586bc2b3443f93be8e32f34d83a0070dc4d71d29e014964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x124401DFAF97CD08E586BC2B3443F93BE8E32F34D83A0070 0xDC 0x4D PUSH18 0xD29E014964736F6C63430008180033000000 ","sourceMap":"657:1315:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077124401dfaf97cd08e586bc2b3443f93be8e32f34d83a0070dc4d71d29e014964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x124401DFAF97CD08E586BC2B3443F93BE8E32F34D83A0070 0xDC 0x4D PUSH18 0xD29E014964736F6C63430008180033000000 ","sourceMap":"657:1315:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5dd3f8b3c50549444134de1db0cd4dde85c3f10f2eb57a20735a9ab2f17497b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDD EXTCODEHASH DUP12 EXTCODECOPY POP SLOAD SWAP5 PREVRANDAO SGT 0x4D 0xE1 0xDB 0xC 0xD4 0xDD 0xE8 TLOAD EXTCODEHASH LT CALLCODE 0xEB JUMPI LOG2 SMOD CALLDATALOAD 0xA9 0xAB 0x2F OR BLOBHASH PUSH28 0x64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"1407:2774:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5dd3f8b3c50549444134de1db0cd4dde85c3f10f2eb57a20735a9ab2f17497b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDD EXTCODEHASH DUP12 EXTCODECOPY POP SLOAD SWAP5 PREVRANDAO SGT 0x4D 0xE1 0xDB 0xC 0xD4 0xDD 0xE8 TLOAD EXTCODEHASH LT CALLCODE 0xEB JUMPI LOG2 SMOD CALLDATALOAD 0xA9 0xAB 0x2F OR BLOBHASH PUSH28 0x64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"1407:2774:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037d3b42d25d6befa467fddcfcd8974788a2e9935e130ea40f2e664f52585e0f364736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xD3 0xB4 0x2D 0x25 0xD6 0xBE STATICCALL CHAINID PUSH32 0xDDCFCD8974788A2E9935E130EA40F2E664F52585E0F364736F6C634300081800 CALLER ","sourceMap":"297:18980:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037d3b42d25d6befa467fddcfcd8974788a2e9935e130ea40f2e664f52585e0f364736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xD3 0xB4 0x2D 0x25 0xD6 0xBE STATICCALL CHAINID PUSH32 0xDDCFCD8974788A2E9935E130EA40F2E664F52585E0F364736F6C634300081800 CALLER ","sourceMap":"297:18980:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b7b41f54597a34a30fbcb9caa7557b2f85918a264c26e26cdfc0122e9fc879064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH28 0x41F54597A34A30FBCB9CAA7557B2F85918A264C26E26CDFC0122E9FC DUP8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b7b41f54597a34a30fbcb9caa7557b2f85918a264c26e26cdfc0122e9fc879064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH28 0x41F54597A34A30FBCB9CAA7557B2F85918A264C26E26CDFC0122E9FC DUP8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f566bcc33798f030e57f140ce005b7099829e7434ae2c81bd24cfd7eb2b16a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CREATE2 PUSH7 0xBCC33798F030E5 PUSH32 0x140CE005B7099829E7434AE2C81BD24CFD7EB2B16A64736F6C63430008180033 ","sourceMap":"769:34173:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f566bcc33798f030e57f140ce005b7099829e7434ae2c81bd24cfd7eb2b16a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CREATE2 PUSH7 0xBCC33798F030E5 PUSH32 0x140CE005B7099829E7434AE2C81BD24CFD7EB2B16A64736F6C63430008180033 ","sourceMap":"769:34173:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c3e0ffabae6a6dd7d8ebfd76c1e4e6548f6f9a595cbaddd45c2b7c532cc107c64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR RETURNDATACOPY 0xF STATICCALL 0xBA 0xE6 0xA6 0xDD PUSH30 0x8EBFD76C1E4E6548F6F9A595CBADDD45C2B7C532CC107C64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"258:2354:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c3e0ffabae6a6dd7d8ebfd76c1e4e6548f6f9a595cbaddd45c2b7c532cc107c64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR RETURNDATACOPY 0xF STATICCALL 0xBA 0xE6 0xA6 0xDD PUSH30 0x8EBFD76C1E4E6548F6F9A595CBADDD45C2B7C532CC107C64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"258:2354:34:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/DAOContract.sol":{"DAOContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1649":{"entryPoint":null,"id":1649,"parameterSlots":1,"returnSlots":0},"@_9146":{"entryPoint":null,"id":9146,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_1745":{"entryPoint":153,"id":1745,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:590:39","nodeType":"YulBlock","src":"0:590:39","statements":[{"body":{"nativeSrc":"52:81:39","nodeType":"YulBlock","src":"52:81:39","statements":[{"nativeSrc":"62:65:39","nodeType":"YulAssignment","src":"62:65:39","value":{"arguments":[{"name":"value","nativeSrc":"77:5:39","nodeType":"YulIdentifier","src":"77:5:39"},{"kind":"number","nativeSrc":"84:42:39","nodeType":"YulLiteral","src":"84:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:39","nodeType":"YulIdentifier","src":"73:3:39"},"nativeSrc":"73:54:39","nodeType":"YulFunctionCall","src":"73:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:39","nodeType":"YulIdentifier","src":"62:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:39","nodeType":"YulTypedName","src":"34:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:39","nodeType":"YulTypedName","src":"44:7:39","type":""}],"src":"7:126:39"},{"body":{"nativeSrc":"184:51:39","nodeType":"YulBlock","src":"184:51:39","statements":[{"nativeSrc":"194:35:39","nodeType":"YulAssignment","src":"194:35:39","value":{"arguments":[{"name":"value","nativeSrc":"223:5:39","nodeType":"YulIdentifier","src":"223:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:39","nodeType":"YulIdentifier","src":"205:17:39"},"nativeSrc":"205:24:39","nodeType":"YulFunctionCall","src":"205:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:39","nodeType":"YulIdentifier","src":"194:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:39","nodeType":"YulTypedName","src":"166:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:39","nodeType":"YulTypedName","src":"176:7:39","type":""}],"src":"139:96:39"},{"body":{"nativeSrc":"306:53:39","nodeType":"YulBlock","src":"306:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:39","nodeType":"YulIdentifier","src":"323:3:39"},{"arguments":[{"name":"value","nativeSrc":"346:5:39","nodeType":"YulIdentifier","src":"346:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:39","nodeType":"YulIdentifier","src":"328:17:39"},"nativeSrc":"328:24:39","nodeType":"YulFunctionCall","src":"328:24:39"}],"functionName":{"name":"mstore","nativeSrc":"316:6:39","nodeType":"YulIdentifier","src":"316:6:39"},"nativeSrc":"316:37:39","nodeType":"YulFunctionCall","src":"316:37:39"},"nativeSrc":"316:37:39","nodeType":"YulExpressionStatement","src":"316:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:39","nodeType":"YulTypedName","src":"294:5:39","type":""},{"name":"pos","nativeSrc":"301:3:39","nodeType":"YulTypedName","src":"301:3:39","type":""}],"src":"241:118:39"},{"body":{"nativeSrc":"463:124:39","nodeType":"YulBlock","src":"463:124:39","statements":[{"nativeSrc":"473:26:39","nodeType":"YulAssignment","src":"473:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:39","nodeType":"YulIdentifier","src":"485:9:39"},{"kind":"number","nativeSrc":"496:2:39","nodeType":"YulLiteral","src":"496:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:39","nodeType":"YulIdentifier","src":"481:3:39"},"nativeSrc":"481:18:39","nodeType":"YulFunctionCall","src":"481:18:39"},"variableNames":[{"name":"tail","nativeSrc":"473:4:39","nodeType":"YulIdentifier","src":"473:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:39","nodeType":"YulIdentifier","src":"553:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:39","nodeType":"YulIdentifier","src":"566:9:39"},{"kind":"number","nativeSrc":"577:1:39","nodeType":"YulLiteral","src":"577:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:39","nodeType":"YulIdentifier","src":"562:3:39"},"nativeSrc":"562:17:39","nodeType":"YulFunctionCall","src":"562:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:39","nodeType":"YulIdentifier","src":"509:43:39"},"nativeSrc":"509:71:39","nodeType":"YulFunctionCall","src":"509:71:39"},"nativeSrc":"509:71:39","nodeType":"YulExpressionStatement","src":"509:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:39","nodeType":"YulTypedName","src":"435:9:39","type":""},{"name":"value0","nativeSrc":"447:6:39","nodeType":"YulTypedName","src":"447:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:39","nodeType":"YulTypedName","src":"458:4:39","type":""}],"src":"365:222:39"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610390806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b60405161006591906102e1565b60405180910390f35b6100886004803603810190610083919061032d565b6100c7565b005b61009261014d565b61009c60006101d4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101415760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013891906102e1565b60405180910390fd5b61014a816101d4565b50565b610155610298565b73ffffffffffffffffffffffffffffffffffffffff1661017361009e565b73ffffffffffffffffffffffffffffffffffffffff16146101d257610196610298565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016101c991906102e1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102cb826102a0565b9050919050565b6102db816102c0565b82525050565b60006020820190506102f660008301846102d2565b92915050565b600080fd5b61030a816102c0565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b600060208284031215610343576103426102fc565b5b600061035184828501610318565b9150509291505056fea2646970667358221220aa223dd957c0beadac90d042213ecb264e19973ec1782b3768675f6f5c89c2fd64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x390 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x9C PUSH1 0x0 PUSH2 0x1D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x14D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x1D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x155 PUSH2 0x298 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173 PUSH2 0x9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D2 JUMPI PUSH2 0x196 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x327 DUP2 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x343 JUMPI PUSH2 0x342 PUSH2 0x2FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP5 DUP3 DUP6 ADD PUSH2 0x318 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0x22 RETURNDATASIZE 0xD9 JUMPI 0xC0 0xBE 0xAD 0xAC SWAP1 0xD0 TIMESTAMP 0x21 RETURNDATACOPY 0xCB 0x26 0x4E NOT SWAP8 RETURNDATACOPY 0xC1 PUSH25 0x2B3768675F6F5C89C2FD64736F6C6343000818003300000000 ","sourceMap":"112:132:35:-:0;;;150:36;;;;;;;;;;172:10;1297:1:7;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;112:132:35;;2912:187:7;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:39:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;112:132:35:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1683":{"entryPoint":333,"id":1683,"parameterSlots":0,"returnSlots":0},"@_msgSender_3949":{"entryPoint":664,"id":3949,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1745":{"entryPoint":468,"id":1745,"parameterSlots":1,"returnSlots":0},"@owner_1666":{"entryPoint":158,"id":1666,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1697":{"entryPoint":138,"id":1697,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1725":{"entryPoint":199,"id":1725,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":737,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":704,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":764,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":769,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1525:39","nodeType":"YulBlock","src":"0:1525:39","statements":[{"body":{"nativeSrc":"52:81:39","nodeType":"YulBlock","src":"52:81:39","statements":[{"nativeSrc":"62:65:39","nodeType":"YulAssignment","src":"62:65:39","value":{"arguments":[{"name":"value","nativeSrc":"77:5:39","nodeType":"YulIdentifier","src":"77:5:39"},{"kind":"number","nativeSrc":"84:42:39","nodeType":"YulLiteral","src":"84:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:39","nodeType":"YulIdentifier","src":"73:3:39"},"nativeSrc":"73:54:39","nodeType":"YulFunctionCall","src":"73:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:39","nodeType":"YulIdentifier","src":"62:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:39","nodeType":"YulTypedName","src":"34:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:39","nodeType":"YulTypedName","src":"44:7:39","type":""}],"src":"7:126:39"},{"body":{"nativeSrc":"184:51:39","nodeType":"YulBlock","src":"184:51:39","statements":[{"nativeSrc":"194:35:39","nodeType":"YulAssignment","src":"194:35:39","value":{"arguments":[{"name":"value","nativeSrc":"223:5:39","nodeType":"YulIdentifier","src":"223:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:39","nodeType":"YulIdentifier","src":"205:17:39"},"nativeSrc":"205:24:39","nodeType":"YulFunctionCall","src":"205:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:39","nodeType":"YulIdentifier","src":"194:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:39","nodeType":"YulTypedName","src":"166:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:39","nodeType":"YulTypedName","src":"176:7:39","type":""}],"src":"139:96:39"},{"body":{"nativeSrc":"306:53:39","nodeType":"YulBlock","src":"306:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:39","nodeType":"YulIdentifier","src":"323:3:39"},{"arguments":[{"name":"value","nativeSrc":"346:5:39","nodeType":"YulIdentifier","src":"346:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:39","nodeType":"YulIdentifier","src":"328:17:39"},"nativeSrc":"328:24:39","nodeType":"YulFunctionCall","src":"328:24:39"}],"functionName":{"name":"mstore","nativeSrc":"316:6:39","nodeType":"YulIdentifier","src":"316:6:39"},"nativeSrc":"316:37:39","nodeType":"YulFunctionCall","src":"316:37:39"},"nativeSrc":"316:37:39","nodeType":"YulExpressionStatement","src":"316:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:39","nodeType":"YulTypedName","src":"294:5:39","type":""},{"name":"pos","nativeSrc":"301:3:39","nodeType":"YulTypedName","src":"301:3:39","type":""}],"src":"241:118:39"},{"body":{"nativeSrc":"463:124:39","nodeType":"YulBlock","src":"463:124:39","statements":[{"nativeSrc":"473:26:39","nodeType":"YulAssignment","src":"473:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:39","nodeType":"YulIdentifier","src":"485:9:39"},{"kind":"number","nativeSrc":"496:2:39","nodeType":"YulLiteral","src":"496:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:39","nodeType":"YulIdentifier","src":"481:3:39"},"nativeSrc":"481:18:39","nodeType":"YulFunctionCall","src":"481:18:39"},"variableNames":[{"name":"tail","nativeSrc":"473:4:39","nodeType":"YulIdentifier","src":"473:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:39","nodeType":"YulIdentifier","src":"553:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:39","nodeType":"YulIdentifier","src":"566:9:39"},{"kind":"number","nativeSrc":"577:1:39","nodeType":"YulLiteral","src":"577:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:39","nodeType":"YulIdentifier","src":"562:3:39"},"nativeSrc":"562:17:39","nodeType":"YulFunctionCall","src":"562:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:39","nodeType":"YulIdentifier","src":"509:43:39"},"nativeSrc":"509:71:39","nodeType":"YulFunctionCall","src":"509:71:39"},"nativeSrc":"509:71:39","nodeType":"YulExpressionStatement","src":"509:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:39","nodeType":"YulTypedName","src":"435:9:39","type":""},{"name":"value0","nativeSrc":"447:6:39","nodeType":"YulTypedName","src":"447:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:39","nodeType":"YulTypedName","src":"458:4:39","type":""}],"src":"365:222:39"},{"body":{"nativeSrc":"633:35:39","nodeType":"YulBlock","src":"633:35:39","statements":[{"nativeSrc":"643:19:39","nodeType":"YulAssignment","src":"643:19:39","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:39","nodeType":"YulLiteral","src":"659:2:39","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:39","nodeType":"YulIdentifier","src":"653:5:39"},"nativeSrc":"653:9:39","nodeType":"YulFunctionCall","src":"653:9:39"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:39","nodeType":"YulIdentifier","src":"643:6:39"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:39","nodeType":"YulTypedName","src":"626:6:39","type":""}],"src":"593:75:39"},{"body":{"nativeSrc":"763:28:39","nodeType":"YulBlock","src":"763:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:39","nodeType":"YulLiteral","src":"780:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:39","nodeType":"YulLiteral","src":"783:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:39","nodeType":"YulIdentifier","src":"773:6:39"},"nativeSrc":"773:12:39","nodeType":"YulFunctionCall","src":"773:12:39"},"nativeSrc":"773:12:39","nodeType":"YulExpressionStatement","src":"773:12:39"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:39","nodeType":"YulFunctionDefinition","src":"674:117:39"},{"body":{"nativeSrc":"886:28:39","nodeType":"YulBlock","src":"886:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:39","nodeType":"YulLiteral","src":"903:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:39","nodeType":"YulLiteral","src":"906:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:39","nodeType":"YulIdentifier","src":"896:6:39"},"nativeSrc":"896:12:39","nodeType":"YulFunctionCall","src":"896:12:39"},"nativeSrc":"896:12:39","nodeType":"YulExpressionStatement","src":"896:12:39"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:39","nodeType":"YulFunctionDefinition","src":"797:117:39"},{"body":{"nativeSrc":"963:79:39","nodeType":"YulBlock","src":"963:79:39","statements":[{"body":{"nativeSrc":"1020:16:39","nodeType":"YulBlock","src":"1020:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1029:1:39","nodeType":"YulLiteral","src":"1029:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"1032:1:39","nodeType":"YulLiteral","src":"1032:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1022:6:39","nodeType":"YulIdentifier","src":"1022:6:39"},"nativeSrc":"1022:12:39","nodeType":"YulFunctionCall","src":"1022:12:39"},"nativeSrc":"1022:12:39","nodeType":"YulExpressionStatement","src":"1022:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"986:5:39","nodeType":"YulIdentifier","src":"986:5:39"},{"arguments":[{"name":"value","nativeSrc":"1011:5:39","nodeType":"YulIdentifier","src":"1011:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"993:17:39","nodeType":"YulIdentifier","src":"993:17:39"},"nativeSrc":"993:24:39","nodeType":"YulFunctionCall","src":"993:24:39"}],"functionName":{"name":"eq","nativeSrc":"983:2:39","nodeType":"YulIdentifier","src":"983:2:39"},"nativeSrc":"983:35:39","nodeType":"YulFunctionCall","src":"983:35:39"}],"functionName":{"name":"iszero","nativeSrc":"976:6:39","nodeType":"YulIdentifier","src":"976:6:39"},"nativeSrc":"976:43:39","nodeType":"YulFunctionCall","src":"976:43:39"},"nativeSrc":"973:63:39","nodeType":"YulIf","src":"973:63:39"}]},"name":"validator_revert_t_address","nativeSrc":"920:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"956:5:39","nodeType":"YulTypedName","src":"956:5:39","type":""}],"src":"920:122:39"},{"body":{"nativeSrc":"1100:87:39","nodeType":"YulBlock","src":"1100:87:39","statements":[{"nativeSrc":"1110:29:39","nodeType":"YulAssignment","src":"1110:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"1132:6:39","nodeType":"YulIdentifier","src":"1132:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"1119:12:39","nodeType":"YulIdentifier","src":"1119:12:39"},"nativeSrc":"1119:20:39","nodeType":"YulFunctionCall","src":"1119:20:39"},"variableNames":[{"name":"value","nativeSrc":"1110:5:39","nodeType":"YulIdentifier","src":"1110:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1175:5:39","nodeType":"YulIdentifier","src":"1175:5:39"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1148:26:39","nodeType":"YulIdentifier","src":"1148:26:39"},"nativeSrc":"1148:33:39","nodeType":"YulFunctionCall","src":"1148:33:39"},"nativeSrc":"1148:33:39","nodeType":"YulExpressionStatement","src":"1148:33:39"}]},"name":"abi_decode_t_address","nativeSrc":"1048:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1078:6:39","nodeType":"YulTypedName","src":"1078:6:39","type":""},{"name":"end","nativeSrc":"1086:3:39","nodeType":"YulTypedName","src":"1086:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1094:5:39","nodeType":"YulTypedName","src":"1094:5:39","type":""}],"src":"1048:139:39"},{"body":{"nativeSrc":"1259:263:39","nodeType":"YulBlock","src":"1259:263:39","statements":[{"body":{"nativeSrc":"1305:83:39","nodeType":"YulBlock","src":"1305:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1307:77:39","nodeType":"YulIdentifier","src":"1307:77:39"},"nativeSrc":"1307:79:39","nodeType":"YulFunctionCall","src":"1307:79:39"},"nativeSrc":"1307:79:39","nodeType":"YulExpressionStatement","src":"1307:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1280:7:39","nodeType":"YulIdentifier","src":"1280:7:39"},{"name":"headStart","nativeSrc":"1289:9:39","nodeType":"YulIdentifier","src":"1289:9:39"}],"functionName":{"name":"sub","nativeSrc":"1276:3:39","nodeType":"YulIdentifier","src":"1276:3:39"},"nativeSrc":"1276:23:39","nodeType":"YulFunctionCall","src":"1276:23:39"},{"kind":"number","nativeSrc":"1301:2:39","nodeType":"YulLiteral","src":"1301:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1272:3:39","nodeType":"YulIdentifier","src":"1272:3:39"},"nativeSrc":"1272:32:39","nodeType":"YulFunctionCall","src":"1272:32:39"},"nativeSrc":"1269:119:39","nodeType":"YulIf","src":"1269:119:39"},{"nativeSrc":"1398:117:39","nodeType":"YulBlock","src":"1398:117:39","statements":[{"nativeSrc":"1413:15:39","nodeType":"YulVariableDeclaration","src":"1413:15:39","value":{"kind":"number","nativeSrc":"1427:1:39","nodeType":"YulLiteral","src":"1427:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1417:6:39","nodeType":"YulTypedName","src":"1417:6:39","type":""}]},{"nativeSrc":"1442:63:39","nodeType":"YulAssignment","src":"1442:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1477:9:39","nodeType":"YulIdentifier","src":"1477:9:39"},{"name":"offset","nativeSrc":"1488:6:39","nodeType":"YulIdentifier","src":"1488:6:39"}],"functionName":{"name":"add","nativeSrc":"1473:3:39","nodeType":"YulIdentifier","src":"1473:3:39"},"nativeSrc":"1473:22:39","nodeType":"YulFunctionCall","src":"1473:22:39"},{"name":"dataEnd","nativeSrc":"1497:7:39","nodeType":"YulIdentifier","src":"1497:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1452:20:39","nodeType":"YulIdentifier","src":"1452:20:39"},"nativeSrc":"1452:53:39","nodeType":"YulFunctionCall","src":"1452:53:39"},"variableNames":[{"name":"value0","nativeSrc":"1442:6:39","nodeType":"YulIdentifier","src":"1442:6:39"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1193:329:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1229:9:39","nodeType":"YulTypedName","src":"1229:9:39","type":""},{"name":"dataEnd","nativeSrc":"1240:7:39","nodeType":"YulTypedName","src":"1240:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1252:6:39","nodeType":"YulTypedName","src":"1252:6:39","type":""}],"src":"1193:329:39"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b60405161006591906102e1565b60405180910390f35b6100886004803603810190610083919061032d565b6100c7565b005b61009261014d565b61009c60006101d4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101415760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013891906102e1565b60405180910390fd5b61014a816101d4565b50565b610155610298565b73ffffffffffffffffffffffffffffffffffffffff1661017361009e565b73ffffffffffffffffffffffffffffffffffffffff16146101d257610196610298565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016101c991906102e1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102cb826102a0565b9050919050565b6102db816102c0565b82525050565b60006020820190506102f660008301846102d2565b92915050565b600080fd5b61030a816102c0565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b600060208284031215610343576103426102fc565b5b600061035184828501610318565b9150509291505056fea2646970667358221220aa223dd957c0beadac90d042213ecb264e19973ec1782b3768675f6f5c89c2fd64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x9C PUSH1 0x0 PUSH2 0x1D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x14D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x1D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x155 PUSH2 0x298 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173 PUSH2 0x9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D2 JUMPI PUSH2 0x196 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x327 DUP2 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x343 JUMPI PUSH2 0x342 PUSH2 0x2FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP5 DUP3 DUP6 ADD PUSH2 0x318 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0x22 RETURNDATASIZE 0xD9 JUMPI 0xC0 0xBE 0xAD 0xAC SWAP1 0xD0 TIMESTAMP 0x21 RETURNDATACOPY 0xCB 0x26 0x4E NOT SWAP8 RETURNDATACOPY 0xC1 PUSH25 0x2B3768675F6F5C89C2FD64736F6C6343000818003300000000 ","sourceMap":"112:132:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:7;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:25:-;709:7;735:10;728:17;;656:96;:::o;7:126:39:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAOContract.sol\":\"DAOContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DAOContract.sol\":{\"keccak256\":\"0xf720833dfbda1009e2fa8103c33590c01f86a31510ad4e8b0acf29cdf072f5b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3315af8c5b0a3ea170cc619c3d4f69443a3c56ed94e39aba1b3e5891dc8db9e\",\"dweb:/ipfs/QmUmRrmyPkVjG9ovn5geJVzgdnLN88NkZUa3Bzpw3prhfr\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1607,"contract":"contracts/DAOContract.sol:DAOContract","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"contracts/KofiCoin.sol":{"KofiCoin":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b506080516128ff61006d600039600081816112b60152818161130b01526114e901526128ff6000f3fe6080604052600436106101405760003560e01c806352d1902d116100b6578063ad3cb1cc1161006f578063ad3cb1cc14610489578063c4d66de8146104b4578063d5391393146104dd578063d547741f14610508578063dd62ed3e14610531578063f72c0d8b1461056e57610140565b806352d1902d1461035157806370a082311461037c57806391d14854146103b957806395d89b41146103f6578063a217fddf14610421578063a9059cbb1461044c57610140565b8063248a9ca311610108578063248a9ca3146102525780632f2ff15d1461028f578063313ce567146102b857806336568abe146102e357806340c10f191461030c5780634f1ef2861461033557610140565b806301ffc9a71461014557806306fdde0314610182578063095ea7b3146101ad57806318160ddd146101ea57806323b872dd14610215575b600080fd5b34801561015157600080fd5b5061016c60048036038101906101679190611e8c565b610599565b6040516101799190611ed4565b60405180910390f35b34801561018e57600080fd5b50610197610613565b6040516101a49190611f7f565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf9190612035565b6106b4565b6040516101e19190611ed4565b60405180910390f35b3480156101f657600080fd5b506101ff6106d7565b60405161020c9190612084565b60405180910390f35b34801561022157600080fd5b5061023c6004803603810190610237919061209f565b6106ef565b6040516102499190611ed4565b60405180910390f35b34801561025e57600080fd5b5061027960048036038101906102749190612128565b61071e565b6040516102869190612164565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b1919061217f565b61074c565b005b3480156102c457600080fd5b506102cd61076e565b6040516102da91906121db565b60405180910390f35b3480156102ef57600080fd5b5061030a6004803603810190610305919061217f565b610777565b005b34801561031857600080fd5b50610333600480360381019061032e9190612035565b6107f2565b005b61034f600480360381019061034a919061232b565b61082b565b005b34801561035d57600080fd5b5061036661084a565b6040516103739190612164565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e9190612387565b61087d565b6040516103b09190612084565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db919061217f565b6108d4565b6040516103ed9190611ed4565b60405180910390f35b34801561040257600080fd5b5061040b61094d565b6040516104189190611f7f565b60405180910390f35b34801561042d57600080fd5b506104366109ee565b6040516104439190612164565b60405180910390f35b34801561045857600080fd5b50610473600480360381019061046e9190612035565b6109f5565b6040516104809190611ed4565b60405180910390f35b34801561049557600080fd5b5061049e610a18565b6040516104ab9190611f7f565b60405180910390f35b3480156104c057600080fd5b506104db60048036038101906104d69190612387565b610a51565b005b3480156104e957600080fd5b506104f2610cbf565b6040516104ff9190612164565b60405180910390f35b34801561051457600080fd5b5061052f600480360381019061052a919061217f565b610ce3565b005b34801561053d57600080fd5b50610558600480360381019061055391906123b4565b610d05565b6040516105659190612084565b60405180910390f35b34801561057a57600080fd5b50610583610d9a565b6040516105909190612164565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061060c575061060b82610dbe565b5b9050919050565b6060600061061f610e28565b905080600301805461063090612423565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90612423565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050505091505090565b6000806106bf610e50565b90506106cc818585610e58565b600191505092915050565b6000806106e2610e28565b9050806002015491505090565b6000806106fa610e50565b9050610707858285610e6a565b610712858585610eff565b60019150509392505050565b600080610729610ff3565b905080600001600084815260200190815260200160002060010154915050919050565b6107558261071e565b61075e8161101b565b610768838361102f565b50505050565b60006012905090565b61077f610e50565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107e3576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ed8282611130565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661081c8161101b565b6108268383611232565b505050565b6108336112b4565b61083c8261139a565b61084682826113c8565b5050565b60006108546114e7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600080610888610e28565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6000806108df610ff3565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60606000610959610e28565b905080600401805461096a90612423565b80601f016020809104026020016040519081016040528092919081815260200182805461099690612423565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b505050505091505090565b6000801b81565b600080610a00610e50565b9050610a0d818585610eff565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6000610a5b61156e565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610aa95750825b9050600060018367ffffffffffffffff16148015610ade575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610aec575080155b15610b23576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610b735760018560000160086101000a81548160ff0219169083151502179055505b610be76040518060400160405280600981526020017f4b6f666920436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4b4f464900000000000000000000000000000000000000000000000000000000815250611582565b610bef611598565b610bf76115a2565b610c046000801b8761102f565b50610c2f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68761102f565b50610c5a7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38761102f565b508315610cb75760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610cae91906124ad565b60405180910390a15b505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610cec8261071e565b610cf58161101b565b610cff8383611130565b50505050565b600080610d10610e28565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b610e6583838360016115ac565b505050565b6000610e768484610d05565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ef95781811015610ee9578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ee0939291906124d7565b60405180910390fd5b610ef8848484840360006115ac565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f715760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f68919061250e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe35760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fda919061250e565b60405180910390fd5b610fee838383611792565b505050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b61102c81611027610e50565b6119d1565b50565b60008061103a610ff3565b905061104684846108d4565b61112457600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506110c0610e50565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061112a565b60009150505b92915050565b60008061113b610ff3565b905061114784846108d4565b1561122657600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111c2610e50565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600191505061122c565b60009150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a45760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161129b919061250e565b60405180910390fd5b6112b060008383611792565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061136157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611348611a22565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611398576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36113c48161101b565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561143057506040513d601f19601f8201168201806040525081019061142d919061253e565b60015b61147157816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611468919061250e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146114d857806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016114cf9190612164565b60405180910390fd5b6114e28383611a79565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461156c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080611579611aec565b90508091505090565b61158a611b17565b6115948282611b57565b5050565b6115a0611b17565b565b6115aa611b17565b565b60006115b6610e28565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361162a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611621919061250e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361169c5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611693919061250e565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550811561178b578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516117829190612084565b60405180910390a35b5050505050565b600061179c610e28565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117f257818160020160008282546117e6919061259a565b925050819055506118cb565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611881578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611878939291906124d7565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361191657818160020160008282540392505081905550611966565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119c39190612084565b60405180910390a350505050565b6119db82826108d4565b611a1e5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611a159291906125ce565b60405180910390fd5b5050565b6000611a507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611b94565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8282611b9e565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611adf57611ad98282611c6b565b50611ae8565b611ae7611cef565b5b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b611b1f611d2c565b611b55576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b5f611b17565b6000611b69610e28565b905082816003019081611b7c9190612799565b5081816004019081611b8e9190612799565b50505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03611bfa57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611bf1919061250e565b60405180910390fd5b80611c277f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611b94565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611c9591906128b2565b600060405180830381855af49150503d8060008114611cd0576040519150601f19603f3d011682016040523d82523d6000602084013e611cd5565b606091505b5091509150611ce5858383611d4c565b9250505092915050565b6000341115611d2a576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611d3661156e565b60000160089054906101000a900460ff16905090565b606082611d6157611d5c82611ddb565b611dd3565b60008251148015611d89575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611dcb57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611dc2919061250e565b60405180910390fd5b819050611dd4565b5b9392505050565b600081511115611dee5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e6981611e34565b8114611e7457600080fd5b50565b600081359050611e8681611e60565b92915050565b600060208284031215611ea257611ea1611e2a565b5b6000611eb084828501611e77565b91505092915050565b60008115159050919050565b611ece81611eb9565b82525050565b6000602082019050611ee96000830184611ec5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f29578082015181840152602081019050611f0e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f5182611eef565b611f5b8185611efa565b9350611f6b818560208601611f0b565b611f7481611f35565b840191505092915050565b60006020820190508181036000830152611f998184611f46565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fcc82611fa1565b9050919050565b611fdc81611fc1565b8114611fe757600080fd5b50565b600081359050611ff981611fd3565b92915050565b6000819050919050565b61201281611fff565b811461201d57600080fd5b50565b60008135905061202f81612009565b92915050565b6000806040838503121561204c5761204b611e2a565b5b600061205a85828601611fea565b925050602061206b85828601612020565b9150509250929050565b61207e81611fff565b82525050565b60006020820190506120996000830184612075565b92915050565b6000806000606084860312156120b8576120b7611e2a565b5b60006120c686828701611fea565b93505060206120d786828701611fea565b92505060406120e886828701612020565b9150509250925092565b6000819050919050565b612105816120f2565b811461211057600080fd5b50565b600081359050612122816120fc565b92915050565b60006020828403121561213e5761213d611e2a565b5b600061214c84828501612113565b91505092915050565b61215e816120f2565b82525050565b60006020820190506121796000830184612155565b92915050565b6000806040838503121561219657612195611e2a565b5b60006121a485828601612113565b92505060206121b585828601611fea565b9150509250929050565b600060ff82169050919050565b6121d5816121bf565b82525050565b60006020820190506121f060008301846121cc565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61223882611f35565b810181811067ffffffffffffffff8211171561225757612256612200565b5b80604052505050565b600061226a611e20565b9050612276828261222f565b919050565b600067ffffffffffffffff82111561229657612295612200565b5b61229f82611f35565b9050602081019050919050565b82818337600083830152505050565b60006122ce6122c98461227b565b612260565b9050828152602081018484840111156122ea576122e96121fb565b5b6122f58482856122ac565b509392505050565b600082601f830112612312576123116121f6565b5b81356123228482602086016122bb565b91505092915050565b6000806040838503121561234257612341611e2a565b5b600061235085828601611fea565b925050602083013567ffffffffffffffff81111561237157612370611e2f565b5b61237d858286016122fd565b9150509250929050565b60006020828403121561239d5761239c611e2a565b5b60006123ab84828501611fea565b91505092915050565b600080604083850312156123cb576123ca611e2a565b5b60006123d985828601611fea565b92505060206123ea85828601611fea565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061243b57607f821691505b60208210810361244e5761244d6123f4565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061249761249261248d84612454565b612472565b61245e565b9050919050565b6124a78161247c565b82525050565b60006020820190506124c2600083018461249e565b92915050565b6124d181611fc1565b82525050565b60006060820190506124ec60008301866124c8565b6124f96020830185612075565b6125066040830184612075565b949350505050565b600060208201905061252360008301846124c8565b92915050565b600081519050612538816120fc565b92915050565b60006020828403121561255457612553611e2a565b5b600061256284828501612529565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125a582611fff565b91506125b083611fff565b92508282019050808211156125c8576125c761256b565b5b92915050565b60006040820190506125e360008301856124c8565b6125f06020830184612155565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261261c565b612663868361261c565b95508019841693508086168417925050509392505050565b600061269661269161268c84611fff565b612472565b611fff565b9050919050565b6000819050919050565b6126b08361267b565b6126c46126bc8261269d565b848454612629565b825550505050565b600090565b6126d96126cc565b6126e48184846126a7565b505050565b5b81811015612708576126fd6000826126d1565b6001810190506126ea565b5050565b601f82111561274d5761271e816125f7565b6127278461260c565b81016020851015612736578190505b61274a6127428561260c565b8301826126e9565b50505b505050565b600082821c905092915050565b600061277060001984600802612752565b1980831691505092915050565b6000612789838361275f565b9150826002028217905092915050565b6127a282611eef565b67ffffffffffffffff8111156127bb576127ba612200565b5b6127c58254612423565b6127d082828561270c565b600060209050601f83116001811461280357600084156127f1578287015190505b6127fb858261277d565b865550612863565b601f198416612811866125f7565b60005b8281101561283957848901518255600182019150602085019450602081019050612814565b868310156128565784890151612852601f89168261275f565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600081905092915050565b600061288c8261286b565b6128968185612876565b93506128a6818560208601611f0b565b80840191505092915050565b60006128be8284612881565b91508190509291505056fea264697066735822122043a2f3221be8cfb5937e09aa9991e1b843ffe6096b178003caae655b17b5224364736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x28FF PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x12B6 ADD MSTORE DUP2 DUP2 PUSH2 0x130B ADD MSTORE PUSH2 0x14E9 ADD MSTORE PUSH2 0x28FF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x56E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x44C JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x335 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FF PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x60C JUMPI POP PUSH2 0x60B DUP3 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x61F PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x630 SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65C SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BF PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CC DUP2 DUP6 DUP6 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E2 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6FA PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH2 0x707 DUP6 DUP3 DUP6 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x712 DUP6 DUP6 DUP6 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x729 PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x768 DUP4 DUP4 PUSH2 0x102F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x77F PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7ED DUP3 DUP3 PUSH2 0x1130 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x81C DUP2 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x826 DUP4 DUP4 PUSH2 0x1232 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x833 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x83C DUP3 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x846 DUP3 DUP3 PUSH2 0x13C8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x854 PUSH2 0x14E7 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x888 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8DF PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x959 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x96A SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x996 SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA00 PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH2 0xA0D DUP2 DUP6 DUP6 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5B PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAA9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xADE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAEC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB73 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBE7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B6F666920436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B4F464900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1582 JUMP JUMPDEST PUSH2 0xBEF PUSH2 0x1598 JUMP JUMPDEST PUSH2 0xBF7 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0xC04 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x102F JUMP JUMPDEST POP PUSH2 0xC2F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP8 PUSH2 0x102F JUMP JUMPDEST POP PUSH2 0xC5A PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x102F JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xCEC DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0x101B JUMP JUMPDEST PUSH2 0xCFF DUP4 DUP4 PUSH2 0x1130 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD10 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE65 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE76 DUP5 DUP5 PUSH2 0xD05 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xEF9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEF8 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF71 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFEE DUP4 DUP4 DUP4 PUSH2 0x1792 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x1027 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x19D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x103A PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1046 DUP5 DUP5 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x1124 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10C0 PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x112A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x113B PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1147 DUP5 DUP5 PUSH2 0x8D4 JUMP JUMPDEST ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11C2 PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x122C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1792 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1361 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1348 PUSH2 0x1A22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x13C4 DUP2 PUSH2 0x101B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1430 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x142D SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1471 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x14D8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14E2 DUP4 DUP4 PUSH2 0x1A79 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x156C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1579 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x158A PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x1594 DUP3 DUP3 PUSH2 0x1B57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x1B17 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x15AA PUSH2 0x1B17 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B6 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1621 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x178B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179C PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F2 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17E6 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1881 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1916 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1966 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x19DB DUP3 DUP3 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x1A1E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A15 SWAP3 SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A50 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A82 DUP3 PUSH2 0x1B9E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1AD9 DUP3 DUP3 PUSH2 0x1C6B JUMP JUMPDEST POP PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1AE7 PUSH2 0x1CEF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1F PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B5F PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B69 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B7C SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BFA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF1 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1C27 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C95 SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CD0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CE5 DUP6 DUP4 DUP4 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D36 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1D61 JUMPI PUSH2 0x1D5C DUP3 PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1D89 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1DCB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1DEE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E69 DUP2 PUSH2 0x1E34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E86 DUP2 PUSH2 0x1E60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH2 0x1EA1 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1E77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ECE DUP2 PUSH2 0x1EB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F29 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F51 DUP3 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1F5B DUP2 DUP6 PUSH2 0x1EFA JUMP JUMPDEST SWAP4 POP PUSH2 0x1F6B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x1F74 DUP2 PUSH2 0x1F35 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F99 DUP2 DUP5 PUSH2 0x1F46 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCC DUP3 PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDC DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2012 DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP2 EQ PUSH2 0x201D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202F DUP2 PUSH2 0x2009 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x204C JUMPI PUSH2 0x204B PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205A DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x206B DUP6 DUP3 DUP7 ADD PUSH2 0x2020 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x207E DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2099 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2075 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20D7 DUP7 DUP3 DUP8 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20E8 DUP7 DUP3 DUP8 ADD PUSH2 0x2020 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2122 DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213E JUMPI PUSH2 0x213D PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214C DUP5 DUP3 DUP6 ADD PUSH2 0x2113 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x215E DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2196 JUMPI PUSH2 0x2195 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21A4 DUP6 DUP3 DUP7 ADD PUSH2 0x2113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D5 DUP2 PUSH2 0x21BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2238 DUP3 PUSH2 0x1F35 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x2200 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226A PUSH2 0x1E20 JUMP JUMPDEST SWAP1 POP PUSH2 0x2276 DUP3 DUP3 PUSH2 0x222F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2295 PUSH2 0x2200 JUMP JUMPDEST JUMPDEST PUSH2 0x229F DUP3 PUSH2 0x1F35 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CE PUSH2 0x22C9 DUP5 PUSH2 0x227B JUMP JUMPDEST PUSH2 0x2260 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22EA JUMPI PUSH2 0x22E9 PUSH2 0x21FB JUMP JUMPDEST JUMPDEST PUSH2 0x22F5 DUP5 DUP3 DUP6 PUSH2 0x22AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2312 JUMPI PUSH2 0x2311 PUSH2 0x21F6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2322 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2342 JUMPI PUSH2 0x2341 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2350 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2370 PUSH2 0x1E2F JUMP JUMPDEST JUMPDEST PUSH2 0x237D DUP6 DUP3 DUP7 ADD PUSH2 0x22FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x239D JUMPI PUSH2 0x239C PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23AB DUP5 DUP3 DUP6 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23EA DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x243B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x23F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2497 PUSH2 0x2492 PUSH2 0x248D DUP5 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x2472 JUMP JUMPDEST PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A7 DUP2 PUSH2 0x247C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x249E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24D1 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24EC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x24F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x2506 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2075 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2523 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2538 DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2562 DUP5 DUP3 DUP6 ADD PUSH2 0x2529 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25A5 DUP3 PUSH2 0x1FFF JUMP JUMPDEST SWAP2 POP PUSH2 0x25B0 DUP4 PUSH2 0x1FFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25C8 JUMPI PUSH2 0x25C7 PUSH2 0x256B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x25F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2155 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2659 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x2663 DUP7 DUP4 PUSH2 0x261C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2696 PUSH2 0x2691 PUSH2 0x268C DUP5 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x2472 JUMP JUMPDEST PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B0 DUP4 PUSH2 0x267B JUMP JUMPDEST PUSH2 0x26C4 PUSH2 0x26BC DUP3 PUSH2 0x269D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2629 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26D9 PUSH2 0x26CC JUMP JUMPDEST PUSH2 0x26E4 DUP2 DUP5 DUP5 PUSH2 0x26A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2708 JUMPI PUSH2 0x26FD PUSH1 0x0 DUP3 PUSH2 0x26D1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x274D JUMPI PUSH2 0x271E DUP2 PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x2727 DUP5 PUSH2 0x260C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2736 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x274A PUSH2 0x2742 DUP6 PUSH2 0x260C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26E9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2770 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2752 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 DUP4 DUP4 PUSH2 0x275F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27A2 DUP3 PUSH2 0x1EEF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2200 JUMP JUMPDEST JUMPDEST PUSH2 0x27C5 DUP3 SLOAD PUSH2 0x2423 JUMP JUMPDEST PUSH2 0x27D0 DUP3 DUP3 DUP6 PUSH2 0x270C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2803 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x27F1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x27FB DUP6 DUP3 PUSH2 0x277D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2811 DUP7 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2839 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2814 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2856 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2852 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x275F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288C DUP3 PUSH2 0x286B JUMP JUMPDEST PUSH2 0x2896 DUP2 DUP6 PUSH2 0x2876 JUMP JUMPDEST SWAP4 POP PUSH2 0x28A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BE DUP3 DUP5 PUSH2 0x2881 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER LOG2 RETURN 0x22 SHL 0xE8 0xCF 0xB5 SWAP4 PUSH31 0x9AA9991E1B843FFE6096B178003CAAE655B17B5224364736F6C6343000818 STOP CALLER ","sourceMap":"298:744:36:-:0;;;1171:4:2;1128:48;;;;;;;;;298:744:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_28":{"entryPoint":2542,"id":28,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_9163":{"entryPoint":3263,"id":9163,"parameterSlots":0,"returnSlots":0},"@UPGRADER_ROLE_9168":{"entryPoint":3482,"id":9168,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_654":{"entryPoint":2584,"id":654,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_63":{"entryPoint":5528,"id":63,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_880":{"entryPoint":5506,"id":880,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_908":{"entryPoint":6999,"id":908,"parameterSlots":2,"returnSlots":0},"@__UUPSUpgradeable_init_684":{"entryPoint":5538,"id":684,"parameterSlots":0,"returnSlots":0},"@_approve_1312":{"entryPoint":3672,"id":1312,"parameterSlots":3,"returnSlots":0},"@_approve_1380":{"entryPoint":5548,"id":1380,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_9228":{"entryPoint":5018,"id":9228,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_538":{"entryPoint":6935,"id":538,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2239":{"entryPoint":7407,"id":2239,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_760":{"entryPoint":5351,"id":760,"parameterSlots":0,"returnSlots":0},"@_checkProxy_744":{"entryPoint":4788,"id":744,"parameterSlots":0,"returnSlots":0},"@_checkRole_129":{"entryPoint":4123,"id":129,"parameterSlots":1,"returnSlots":0},"@_checkRole_150":{"entryPoint":6609,"id":150,"parameterSlots":2,"returnSlots":0},"@_getAccessControlStorage_46":{"entryPoint":4083,"id":46,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_864":{"entryPoint":3624,"id":864,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_629":{"entryPoint":5486,"id":629,"parameterSlots":0,"returnSlots":1},"@_grantRole_315":{"entryPoint":4143,"id":315,"parameterSlots":2,"returnSlots":1},"@_initializableStorageSlot_615":{"entryPoint":6892,"id":615,"parameterSlots":0,"returnSlots":1},"@_isInitializing_606":{"entryPoint":7468,"id":606,"parameterSlots":0,"returnSlots":1},"@_mint_1261":{"entryPoint":4658,"id":1261,"parameterSlots":2,"returnSlots":0},"@_msgSender_1457":{"entryPoint":3664,"id":1457,"parameterSlots":0,"returnSlots":1},"@_revert_3936":{"entryPoint":7643,"id":3936,"parameterSlots":1,"returnSlots":0},"@_revokeRole_361":{"entryPoint":4400,"id":361,"parameterSlots":2,"returnSlots":1},"@_setImplementation_2019":{"entryPoint":7070,"id":2019,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1428":{"entryPoint":3690,"id":1428,"parameterSlots":3,"returnSlots":0},"@_transfer_1136":{"entryPoint":3839,"id":1136,"parameterSlots":3,"returnSlots":0},"@_update_1228":{"entryPoint":6034,"id":1228,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_811":{"entryPoint":5064,"id":811,"parameterSlots":2,"returnSlots":0},"@allowance_1033":{"entryPoint":3333,"id":1033,"parameterSlots":2,"returnSlots":1},"@approve_1057":{"entryPoint":1716,"id":1057,"parameterSlots":2,"returnSlots":1},"@balanceOf_985":{"entryPoint":2173,"id":985,"parameterSlots":1,"returnSlots":1},"@decimals_949":{"entryPoint":1902,"id":949,"parameterSlots":0,"returnSlots":1},"@functionDelegateCall_3854":{"entryPoint":7275,"id":3854,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_4076":{"entryPoint":7060,"id":4076,"parameterSlots":1,"returnSlots":1},"@getImplementation_1992":{"entryPoint":6690,"id":1992,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_171":{"entryPoint":1822,"id":171,"parameterSlots":1,"returnSlots":1},"@grantRole_190":{"entryPoint":1868,"id":190,"parameterSlots":2,"returnSlots":0},"@hasRole_116":{"entryPoint":2260,"id":116,"parameterSlots":2,"returnSlots":1},"@initialize_9202":{"entryPoint":2641,"id":9202,"parameterSlots":1,"returnSlots":0},"@mint_9218":{"entryPoint":2034,"id":9218,"parameterSlots":2,"returnSlots":0},"@name_924":{"entryPoint":1555,"id":924,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_702":{"entryPoint":2122,"id":702,"parameterSlots":0,"returnSlots":1},"@renounceRole_232":{"entryPoint":1911,"id":232,"parameterSlots":2,"returnSlots":0},"@revokeRole_209":{"entryPoint":3299,"id":209,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1514":{"entryPoint":3518,"id":1514,"parameterSlots":1,"returnSlots":1},"@supportsInterface_91":{"entryPoint":1433,"id":91,"parameterSlots":1,"returnSlots":1},"@symbol_940":{"entryPoint":2381,"id":940,"parameterSlots":0,"returnSlots":1},"@totalSupply_965":{"entryPoint":1751,"id":965,"parameterSlots":0,"returnSlots":1},"@transferFrom_1089":{"entryPoint":1775,"id":1089,"parameterSlots":3,"returnSlots":1},"@transfer_1009":{"entryPoint":2549,"id":1009,"parameterSlots":2,"returnSlots":1},"@upgradeToAndCall_2055":{"entryPoint":6777,"id":2055,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_722":{"entryPoint":2091,"id":722,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_3894":{"entryPoint":7500,"id":3894,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8891,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":9513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9140,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8351,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":9003,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8245,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":9534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8575,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9416,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7877,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8533,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":9374,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8309,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8652,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":9678,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9431,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":9389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8667,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8800,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7712,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8827,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":9719,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":10347,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7919,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10358,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7930,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9626,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":9996,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":8129,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7865,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8434,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7732,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":9300,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8097,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8191,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":9310,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8639,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":9961,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":9340,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":9851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10137,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8876,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7947,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":9740,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9251,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10109,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8751,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9330,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10079,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9579,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9204,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8704,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":9885,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8694,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8699,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7727,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7722,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7989,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9756,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10066,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":9937,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":9769,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":9895,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8147,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8444,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7776,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8201,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":9932,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:19267:39","nodeType":"YulBlock","src":"0:19267:39","statements":[{"body":{"nativeSrc":"47:35:39","nodeType":"YulBlock","src":"47:35:39","statements":[{"nativeSrc":"57:19:39","nodeType":"YulAssignment","src":"57:19:39","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:39","nodeType":"YulLiteral","src":"73:2:39","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:39","nodeType":"YulIdentifier","src":"67:5:39"},"nativeSrc":"67:9:39","nodeType":"YulFunctionCall","src":"67:9:39"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:39","nodeType":"YulIdentifier","src":"57:6:39"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:39","nodeType":"YulTypedName","src":"40:6:39","type":""}],"src":"7:75:39"},{"body":{"nativeSrc":"177:28:39","nodeType":"YulBlock","src":"177:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:39","nodeType":"YulLiteral","src":"194:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:39","nodeType":"YulLiteral","src":"197:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:39","nodeType":"YulIdentifier","src":"187:6:39"},"nativeSrc":"187:12:39","nodeType":"YulFunctionCall","src":"187:12:39"},"nativeSrc":"187:12:39","nodeType":"YulExpressionStatement","src":"187:12:39"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:39","nodeType":"YulFunctionDefinition","src":"88:117:39"},{"body":{"nativeSrc":"300:28:39","nodeType":"YulBlock","src":"300:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:39","nodeType":"YulLiteral","src":"317:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:39","nodeType":"YulLiteral","src":"320:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:39","nodeType":"YulIdentifier","src":"310:6:39"},"nativeSrc":"310:12:39","nodeType":"YulFunctionCall","src":"310:12:39"},"nativeSrc":"310:12:39","nodeType":"YulExpressionStatement","src":"310:12:39"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:39","nodeType":"YulFunctionDefinition","src":"211:117:39"},{"body":{"nativeSrc":"378:105:39","nodeType":"YulBlock","src":"378:105:39","statements":[{"nativeSrc":"388:89:39","nodeType":"YulAssignment","src":"388:89:39","value":{"arguments":[{"name":"value","nativeSrc":"403:5:39","nodeType":"YulIdentifier","src":"403:5:39"},{"kind":"number","nativeSrc":"410:66:39","nodeType":"YulLiteral","src":"410:66:39","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:39","nodeType":"YulIdentifier","src":"399:3:39"},"nativeSrc":"399:78:39","nodeType":"YulFunctionCall","src":"399:78:39"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:39","nodeType":"YulIdentifier","src":"388:7:39"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:39","nodeType":"YulTypedName","src":"360:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:39","nodeType":"YulTypedName","src":"370:7:39","type":""}],"src":"334:149:39"},{"body":{"nativeSrc":"531:78:39","nodeType":"YulBlock","src":"531:78:39","statements":[{"body":{"nativeSrc":"587:16:39","nodeType":"YulBlock","src":"587:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:39","nodeType":"YulLiteral","src":"596:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:39","nodeType":"YulLiteral","src":"599:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:39","nodeType":"YulIdentifier","src":"589:6:39"},"nativeSrc":"589:12:39","nodeType":"YulFunctionCall","src":"589:12:39"},"nativeSrc":"589:12:39","nodeType":"YulExpressionStatement","src":"589:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:39","nodeType":"YulIdentifier","src":"554:5:39"},{"arguments":[{"name":"value","nativeSrc":"578:5:39","nodeType":"YulIdentifier","src":"578:5:39"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:39","nodeType":"YulIdentifier","src":"561:16:39"},"nativeSrc":"561:23:39","nodeType":"YulFunctionCall","src":"561:23:39"}],"functionName":{"name":"eq","nativeSrc":"551:2:39","nodeType":"YulIdentifier","src":"551:2:39"},"nativeSrc":"551:34:39","nodeType":"YulFunctionCall","src":"551:34:39"}],"functionName":{"name":"iszero","nativeSrc":"544:6:39","nodeType":"YulIdentifier","src":"544:6:39"},"nativeSrc":"544:42:39","nodeType":"YulFunctionCall","src":"544:42:39"},"nativeSrc":"541:62:39","nodeType":"YulIf","src":"541:62:39"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:39","nodeType":"YulTypedName","src":"524:5:39","type":""}],"src":"489:120:39"},{"body":{"nativeSrc":"666:86:39","nodeType":"YulBlock","src":"666:86:39","statements":[{"nativeSrc":"676:29:39","nodeType":"YulAssignment","src":"676:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:39","nodeType":"YulIdentifier","src":"698:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:39","nodeType":"YulIdentifier","src":"685:12:39"},"nativeSrc":"685:20:39","nodeType":"YulFunctionCall","src":"685:20:39"},"variableNames":[{"name":"value","nativeSrc":"676:5:39","nodeType":"YulIdentifier","src":"676:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:39","nodeType":"YulIdentifier","src":"740:5:39"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:39","nodeType":"YulIdentifier","src":"714:25:39"},"nativeSrc":"714:32:39","nodeType":"YulFunctionCall","src":"714:32:39"},"nativeSrc":"714:32:39","nodeType":"YulExpressionStatement","src":"714:32:39"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:39","nodeType":"YulTypedName","src":"644:6:39","type":""},{"name":"end","nativeSrc":"652:3:39","nodeType":"YulTypedName","src":"652:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:39","nodeType":"YulTypedName","src":"660:5:39","type":""}],"src":"615:137:39"},{"body":{"nativeSrc":"823:262:39","nodeType":"YulBlock","src":"823:262:39","statements":[{"body":{"nativeSrc":"869:83:39","nodeType":"YulBlock","src":"869:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:39","nodeType":"YulIdentifier","src":"871:77:39"},"nativeSrc":"871:79:39","nodeType":"YulFunctionCall","src":"871:79:39"},"nativeSrc":"871:79:39","nodeType":"YulExpressionStatement","src":"871:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:39","nodeType":"YulIdentifier","src":"844:7:39"},{"name":"headStart","nativeSrc":"853:9:39","nodeType":"YulIdentifier","src":"853:9:39"}],"functionName":{"name":"sub","nativeSrc":"840:3:39","nodeType":"YulIdentifier","src":"840:3:39"},"nativeSrc":"840:23:39","nodeType":"YulFunctionCall","src":"840:23:39"},{"kind":"number","nativeSrc":"865:2:39","nodeType":"YulLiteral","src":"865:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:39","nodeType":"YulIdentifier","src":"836:3:39"},"nativeSrc":"836:32:39","nodeType":"YulFunctionCall","src":"836:32:39"},"nativeSrc":"833:119:39","nodeType":"YulIf","src":"833:119:39"},{"nativeSrc":"962:116:39","nodeType":"YulBlock","src":"962:116:39","statements":[{"nativeSrc":"977:15:39","nodeType":"YulVariableDeclaration","src":"977:15:39","value":{"kind":"number","nativeSrc":"991:1:39","nodeType":"YulLiteral","src":"991:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:39","nodeType":"YulTypedName","src":"981:6:39","type":""}]},{"nativeSrc":"1006:62:39","nodeType":"YulAssignment","src":"1006:62:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:39","nodeType":"YulIdentifier","src":"1040:9:39"},{"name":"offset","nativeSrc":"1051:6:39","nodeType":"YulIdentifier","src":"1051:6:39"}],"functionName":{"name":"add","nativeSrc":"1036:3:39","nodeType":"YulIdentifier","src":"1036:3:39"},"nativeSrc":"1036:22:39","nodeType":"YulFunctionCall","src":"1036:22:39"},{"name":"dataEnd","nativeSrc":"1060:7:39","nodeType":"YulIdentifier","src":"1060:7:39"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:39","nodeType":"YulIdentifier","src":"1016:19:39"},"nativeSrc":"1016:52:39","nodeType":"YulFunctionCall","src":"1016:52:39"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:39","nodeType":"YulIdentifier","src":"1006:6:39"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:39","nodeType":"YulTypedName","src":"793:9:39","type":""},{"name":"dataEnd","nativeSrc":"804:7:39","nodeType":"YulTypedName","src":"804:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:39","nodeType":"YulTypedName","src":"816:6:39","type":""}],"src":"758:327:39"},{"body":{"nativeSrc":"1133:48:39","nodeType":"YulBlock","src":"1133:48:39","statements":[{"nativeSrc":"1143:32:39","nodeType":"YulAssignment","src":"1143:32:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:39","nodeType":"YulIdentifier","src":"1168:5:39"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:39","nodeType":"YulIdentifier","src":"1161:6:39"},"nativeSrc":"1161:13:39","nodeType":"YulFunctionCall","src":"1161:13:39"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:39","nodeType":"YulIdentifier","src":"1154:6:39"},"nativeSrc":"1154:21:39","nodeType":"YulFunctionCall","src":"1154:21:39"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:39","nodeType":"YulIdentifier","src":"1143:7:39"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:39","nodeType":"YulTypedName","src":"1115:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:39","nodeType":"YulTypedName","src":"1125:7:39","type":""}],"src":"1091:90:39"},{"body":{"nativeSrc":"1246:50:39","nodeType":"YulBlock","src":"1246:50:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:39","nodeType":"YulIdentifier","src":"1263:3:39"},{"arguments":[{"name":"value","nativeSrc":"1283:5:39","nodeType":"YulIdentifier","src":"1283:5:39"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:39","nodeType":"YulIdentifier","src":"1268:14:39"},"nativeSrc":"1268:21:39","nodeType":"YulFunctionCall","src":"1268:21:39"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:39","nodeType":"YulIdentifier","src":"1256:6:39"},"nativeSrc":"1256:34:39","nodeType":"YulFunctionCall","src":"1256:34:39"},"nativeSrc":"1256:34:39","nodeType":"YulExpressionStatement","src":"1256:34:39"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:39","nodeType":"YulTypedName","src":"1234:5:39","type":""},{"name":"pos","nativeSrc":"1241:3:39","nodeType":"YulTypedName","src":"1241:3:39","type":""}],"src":"1187:109:39"},{"body":{"nativeSrc":"1394:118:39","nodeType":"YulBlock","src":"1394:118:39","statements":[{"nativeSrc":"1404:26:39","nodeType":"YulAssignment","src":"1404:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:39","nodeType":"YulIdentifier","src":"1416:9:39"},{"kind":"number","nativeSrc":"1427:2:39","nodeType":"YulLiteral","src":"1427:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:39","nodeType":"YulIdentifier","src":"1412:3:39"},"nativeSrc":"1412:18:39","nodeType":"YulFunctionCall","src":"1412:18:39"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:39","nodeType":"YulIdentifier","src":"1404:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:39","nodeType":"YulIdentifier","src":"1478:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:39","nodeType":"YulIdentifier","src":"1491:9:39"},{"kind":"number","nativeSrc":"1502:1:39","nodeType":"YulLiteral","src":"1502:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:39","nodeType":"YulIdentifier","src":"1487:3:39"},"nativeSrc":"1487:17:39","nodeType":"YulFunctionCall","src":"1487:17:39"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:39","nodeType":"YulIdentifier","src":"1440:37:39"},"nativeSrc":"1440:65:39","nodeType":"YulFunctionCall","src":"1440:65:39"},"nativeSrc":"1440:65:39","nodeType":"YulExpressionStatement","src":"1440:65:39"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:39","nodeType":"YulTypedName","src":"1366:9:39","type":""},{"name":"value0","nativeSrc":"1378:6:39","nodeType":"YulTypedName","src":"1378:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:39","nodeType":"YulTypedName","src":"1389:4:39","type":""}],"src":"1302:210:39"},{"body":{"nativeSrc":"1577:40:39","nodeType":"YulBlock","src":"1577:40:39","statements":[{"nativeSrc":"1588:22:39","nodeType":"YulAssignment","src":"1588:22:39","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:39","nodeType":"YulIdentifier","src":"1604:5:39"}],"functionName":{"name":"mload","nativeSrc":"1598:5:39","nodeType":"YulIdentifier","src":"1598:5:39"},"nativeSrc":"1598:12:39","nodeType":"YulFunctionCall","src":"1598:12:39"},"variableNames":[{"name":"length","nativeSrc":"1588:6:39","nodeType":"YulIdentifier","src":"1588:6:39"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:39","nodeType":"YulTypedName","src":"1560:5:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:39","nodeType":"YulTypedName","src":"1570:6:39","type":""}],"src":"1518:99:39"},{"body":{"nativeSrc":"1719:73:39","nodeType":"YulBlock","src":"1719:73:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:39","nodeType":"YulIdentifier","src":"1736:3:39"},{"name":"length","nativeSrc":"1741:6:39","nodeType":"YulIdentifier","src":"1741:6:39"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:39","nodeType":"YulIdentifier","src":"1729:6:39"},"nativeSrc":"1729:19:39","nodeType":"YulFunctionCall","src":"1729:19:39"},"nativeSrc":"1729:19:39","nodeType":"YulExpressionStatement","src":"1729:19:39"},{"nativeSrc":"1757:29:39","nodeType":"YulAssignment","src":"1757:29:39","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:39","nodeType":"YulIdentifier","src":"1776:3:39"},{"kind":"number","nativeSrc":"1781:4:39","nodeType":"YulLiteral","src":"1781:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:39","nodeType":"YulIdentifier","src":"1772:3:39"},"nativeSrc":"1772:14:39","nodeType":"YulFunctionCall","src":"1772:14:39"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:39","nodeType":"YulIdentifier","src":"1757:11:39"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:39","nodeType":"YulTypedName","src":"1691:3:39","type":""},{"name":"length","nativeSrc":"1696:6:39","nodeType":"YulTypedName","src":"1696:6:39","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:39","nodeType":"YulTypedName","src":"1707:11:39","type":""}],"src":"1623:169:39"},{"body":{"nativeSrc":"1860:184:39","nodeType":"YulBlock","src":"1860:184:39","statements":[{"nativeSrc":"1870:10:39","nodeType":"YulVariableDeclaration","src":"1870:10:39","value":{"kind":"number","nativeSrc":"1879:1:39","nodeType":"YulLiteral","src":"1879:1:39","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:39","nodeType":"YulTypedName","src":"1874:1:39","type":""}]},{"body":{"nativeSrc":"1939:63:39","nodeType":"YulBlock","src":"1939:63:39","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:39","nodeType":"YulIdentifier","src":"1964:3:39"},{"name":"i","nativeSrc":"1969:1:39","nodeType":"YulIdentifier","src":"1969:1:39"}],"functionName":{"name":"add","nativeSrc":"1960:3:39","nodeType":"YulIdentifier","src":"1960:3:39"},"nativeSrc":"1960:11:39","nodeType":"YulFunctionCall","src":"1960:11:39"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:39","nodeType":"YulIdentifier","src":"1983:3:39"},{"name":"i","nativeSrc":"1988:1:39","nodeType":"YulIdentifier","src":"1988:1:39"}],"functionName":{"name":"add","nativeSrc":"1979:3:39","nodeType":"YulIdentifier","src":"1979:3:39"},"nativeSrc":"1979:11:39","nodeType":"YulFunctionCall","src":"1979:11:39"}],"functionName":{"name":"mload","nativeSrc":"1973:5:39","nodeType":"YulIdentifier","src":"1973:5:39"},"nativeSrc":"1973:18:39","nodeType":"YulFunctionCall","src":"1973:18:39"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:39","nodeType":"YulIdentifier","src":"1953:6:39"},"nativeSrc":"1953:39:39","nodeType":"YulFunctionCall","src":"1953:39:39"},"nativeSrc":"1953:39:39","nodeType":"YulExpressionStatement","src":"1953:39:39"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:39","nodeType":"YulIdentifier","src":"1900:1:39"},{"name":"length","nativeSrc":"1903:6:39","nodeType":"YulIdentifier","src":"1903:6:39"}],"functionName":{"name":"lt","nativeSrc":"1897:2:39","nodeType":"YulIdentifier","src":"1897:2:39"},"nativeSrc":"1897:13:39","nodeType":"YulFunctionCall","src":"1897:13:39"},"nativeSrc":"1889:113:39","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:39","nodeType":"YulBlock","src":"1911:19:39","statements":[{"nativeSrc":"1913:15:39","nodeType":"YulAssignment","src":"1913:15:39","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:39","nodeType":"YulIdentifier","src":"1922:1:39"},{"kind":"number","nativeSrc":"1925:2:39","nodeType":"YulLiteral","src":"1925:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:39","nodeType":"YulIdentifier","src":"1918:3:39"},"nativeSrc":"1918:10:39","nodeType":"YulFunctionCall","src":"1918:10:39"},"variableNames":[{"name":"i","nativeSrc":"1913:1:39","nodeType":"YulIdentifier","src":"1913:1:39"}]}]},"pre":{"nativeSrc":"1893:3:39","nodeType":"YulBlock","src":"1893:3:39","statements":[]},"src":"1889:113:39"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:39","nodeType":"YulIdentifier","src":"2022:3:39"},{"name":"length","nativeSrc":"2027:6:39","nodeType":"YulIdentifier","src":"2027:6:39"}],"functionName":{"name":"add","nativeSrc":"2018:3:39","nodeType":"YulIdentifier","src":"2018:3:39"},"nativeSrc":"2018:16:39","nodeType":"YulFunctionCall","src":"2018:16:39"},{"kind":"number","nativeSrc":"2036:1:39","nodeType":"YulLiteral","src":"2036:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:39","nodeType":"YulIdentifier","src":"2011:6:39"},"nativeSrc":"2011:27:39","nodeType":"YulFunctionCall","src":"2011:27:39"},"nativeSrc":"2011:27:39","nodeType":"YulExpressionStatement","src":"2011:27:39"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:39","nodeType":"YulTypedName","src":"1842:3:39","type":""},{"name":"dst","nativeSrc":"1847:3:39","nodeType":"YulTypedName","src":"1847:3:39","type":""},{"name":"length","nativeSrc":"1852:6:39","nodeType":"YulTypedName","src":"1852:6:39","type":""}],"src":"1798:246:39"},{"body":{"nativeSrc":"2098:54:39","nodeType":"YulBlock","src":"2098:54:39","statements":[{"nativeSrc":"2108:38:39","nodeType":"YulAssignment","src":"2108:38:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:39","nodeType":"YulIdentifier","src":"2126:5:39"},{"kind":"number","nativeSrc":"2133:2:39","nodeType":"YulLiteral","src":"2133:2:39","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:39","nodeType":"YulIdentifier","src":"2122:3:39"},"nativeSrc":"2122:14:39","nodeType":"YulFunctionCall","src":"2122:14:39"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:39","nodeType":"YulLiteral","src":"2142:2:39","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:39","nodeType":"YulIdentifier","src":"2138:3:39"},"nativeSrc":"2138:7:39","nodeType":"YulFunctionCall","src":"2138:7:39"}],"functionName":{"name":"and","nativeSrc":"2118:3:39","nodeType":"YulIdentifier","src":"2118:3:39"},"nativeSrc":"2118:28:39","nodeType":"YulFunctionCall","src":"2118:28:39"},"variableNames":[{"name":"result","nativeSrc":"2108:6:39","nodeType":"YulIdentifier","src":"2108:6:39"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:39","nodeType":"YulTypedName","src":"2081:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:39","nodeType":"YulTypedName","src":"2091:6:39","type":""}],"src":"2050:102:39"},{"body":{"nativeSrc":"2250:285:39","nodeType":"YulBlock","src":"2250:285:39","statements":[{"nativeSrc":"2260:53:39","nodeType":"YulVariableDeclaration","src":"2260:53:39","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:39","nodeType":"YulIdentifier","src":"2307:5:39"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:39","nodeType":"YulIdentifier","src":"2274:32:39"},"nativeSrc":"2274:39:39","nodeType":"YulFunctionCall","src":"2274:39:39"},"variables":[{"name":"length","nativeSrc":"2264:6:39","nodeType":"YulTypedName","src":"2264:6:39","type":""}]},{"nativeSrc":"2322:78:39","nodeType":"YulAssignment","src":"2322:78:39","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:39","nodeType":"YulIdentifier","src":"2388:3:39"},{"name":"length","nativeSrc":"2393:6:39","nodeType":"YulIdentifier","src":"2393:6:39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:39","nodeType":"YulIdentifier","src":"2329:58:39"},"nativeSrc":"2329:71:39","nodeType":"YulFunctionCall","src":"2329:71:39"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:39","nodeType":"YulIdentifier","src":"2322:3:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:39","nodeType":"YulIdentifier","src":"2448:5:39"},{"kind":"number","nativeSrc":"2455:4:39","nodeType":"YulLiteral","src":"2455:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:39","nodeType":"YulIdentifier","src":"2444:3:39"},"nativeSrc":"2444:16:39","nodeType":"YulFunctionCall","src":"2444:16:39"},{"name":"pos","nativeSrc":"2462:3:39","nodeType":"YulIdentifier","src":"2462:3:39"},{"name":"length","nativeSrc":"2467:6:39","nodeType":"YulIdentifier","src":"2467:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:39","nodeType":"YulIdentifier","src":"2409:34:39"},"nativeSrc":"2409:65:39","nodeType":"YulFunctionCall","src":"2409:65:39"},"nativeSrc":"2409:65:39","nodeType":"YulExpressionStatement","src":"2409:65:39"},{"nativeSrc":"2483:46:39","nodeType":"YulAssignment","src":"2483:46:39","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:39","nodeType":"YulIdentifier","src":"2494:3:39"},{"arguments":[{"name":"length","nativeSrc":"2521:6:39","nodeType":"YulIdentifier","src":"2521:6:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:39","nodeType":"YulIdentifier","src":"2499:21:39"},"nativeSrc":"2499:29:39","nodeType":"YulFunctionCall","src":"2499:29:39"}],"functionName":{"name":"add","nativeSrc":"2490:3:39","nodeType":"YulIdentifier","src":"2490:3:39"},"nativeSrc":"2490:39:39","nodeType":"YulFunctionCall","src":"2490:39:39"},"variableNames":[{"name":"end","nativeSrc":"2483:3:39","nodeType":"YulIdentifier","src":"2483:3:39"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:39","nodeType":"YulTypedName","src":"2231:5:39","type":""},{"name":"pos","nativeSrc":"2238:3:39","nodeType":"YulTypedName","src":"2238:3:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:39","nodeType":"YulTypedName","src":"2246:3:39","type":""}],"src":"2158:377:39"},{"body":{"nativeSrc":"2659:195:39","nodeType":"YulBlock","src":"2659:195:39","statements":[{"nativeSrc":"2669:26:39","nodeType":"YulAssignment","src":"2669:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:39","nodeType":"YulIdentifier","src":"2681:9:39"},{"kind":"number","nativeSrc":"2692:2:39","nodeType":"YulLiteral","src":"2692:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:39","nodeType":"YulIdentifier","src":"2677:3:39"},"nativeSrc":"2677:18:39","nodeType":"YulFunctionCall","src":"2677:18:39"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:39","nodeType":"YulIdentifier","src":"2669:4:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:39","nodeType":"YulIdentifier","src":"2716:9:39"},{"kind":"number","nativeSrc":"2727:1:39","nodeType":"YulLiteral","src":"2727:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:39","nodeType":"YulIdentifier","src":"2712:3:39"},"nativeSrc":"2712:17:39","nodeType":"YulFunctionCall","src":"2712:17:39"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:39","nodeType":"YulIdentifier","src":"2735:4:39"},{"name":"headStart","nativeSrc":"2741:9:39","nodeType":"YulIdentifier","src":"2741:9:39"}],"functionName":{"name":"sub","nativeSrc":"2731:3:39","nodeType":"YulIdentifier","src":"2731:3:39"},"nativeSrc":"2731:20:39","nodeType":"YulFunctionCall","src":"2731:20:39"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:39","nodeType":"YulIdentifier","src":"2705:6:39"},"nativeSrc":"2705:47:39","nodeType":"YulFunctionCall","src":"2705:47:39"},"nativeSrc":"2705:47:39","nodeType":"YulExpressionStatement","src":"2705:47:39"},{"nativeSrc":"2761:86:39","nodeType":"YulAssignment","src":"2761:86:39","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:39","nodeType":"YulIdentifier","src":"2833:6:39"},{"name":"tail","nativeSrc":"2842:4:39","nodeType":"YulIdentifier","src":"2842:4:39"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:39","nodeType":"YulIdentifier","src":"2769:63:39"},"nativeSrc":"2769:78:39","nodeType":"YulFunctionCall","src":"2769:78:39"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:39","nodeType":"YulIdentifier","src":"2761:4:39"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:39","nodeType":"YulTypedName","src":"2631:9:39","type":""},{"name":"value0","nativeSrc":"2643:6:39","nodeType":"YulTypedName","src":"2643:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:39","nodeType":"YulTypedName","src":"2654:4:39","type":""}],"src":"2541:313:39"},{"body":{"nativeSrc":"2905:81:39","nodeType":"YulBlock","src":"2905:81:39","statements":[{"nativeSrc":"2915:65:39","nodeType":"YulAssignment","src":"2915:65:39","value":{"arguments":[{"name":"value","nativeSrc":"2930:5:39","nodeType":"YulIdentifier","src":"2930:5:39"},{"kind":"number","nativeSrc":"2937:42:39","nodeType":"YulLiteral","src":"2937:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2926:3:39","nodeType":"YulIdentifier","src":"2926:3:39"},"nativeSrc":"2926:54:39","nodeType":"YulFunctionCall","src":"2926:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"2915:7:39","nodeType":"YulIdentifier","src":"2915:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2860:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2887:5:39","nodeType":"YulTypedName","src":"2887:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2897:7:39","nodeType":"YulTypedName","src":"2897:7:39","type":""}],"src":"2860:126:39"},{"body":{"nativeSrc":"3037:51:39","nodeType":"YulBlock","src":"3037:51:39","statements":[{"nativeSrc":"3047:35:39","nodeType":"YulAssignment","src":"3047:35:39","value":{"arguments":[{"name":"value","nativeSrc":"3076:5:39","nodeType":"YulIdentifier","src":"3076:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3058:17:39","nodeType":"YulIdentifier","src":"3058:17:39"},"nativeSrc":"3058:24:39","nodeType":"YulFunctionCall","src":"3058:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"3047:7:39","nodeType":"YulIdentifier","src":"3047:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"2992:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3019:5:39","nodeType":"YulTypedName","src":"3019:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3029:7:39","nodeType":"YulTypedName","src":"3029:7:39","type":""}],"src":"2992:96:39"},{"body":{"nativeSrc":"3137:79:39","nodeType":"YulBlock","src":"3137:79:39","statements":[{"body":{"nativeSrc":"3194:16:39","nodeType":"YulBlock","src":"3194:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3203:1:39","nodeType":"YulLiteral","src":"3203:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"3206:1:39","nodeType":"YulLiteral","src":"3206:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3196:6:39","nodeType":"YulIdentifier","src":"3196:6:39"},"nativeSrc":"3196:12:39","nodeType":"YulFunctionCall","src":"3196:12:39"},"nativeSrc":"3196:12:39","nodeType":"YulExpressionStatement","src":"3196:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3160:5:39","nodeType":"YulIdentifier","src":"3160:5:39"},{"arguments":[{"name":"value","nativeSrc":"3185:5:39","nodeType":"YulIdentifier","src":"3185:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3167:17:39","nodeType":"YulIdentifier","src":"3167:17:39"},"nativeSrc":"3167:24:39","nodeType":"YulFunctionCall","src":"3167:24:39"}],"functionName":{"name":"eq","nativeSrc":"3157:2:39","nodeType":"YulIdentifier","src":"3157:2:39"},"nativeSrc":"3157:35:39","nodeType":"YulFunctionCall","src":"3157:35:39"}],"functionName":{"name":"iszero","nativeSrc":"3150:6:39","nodeType":"YulIdentifier","src":"3150:6:39"},"nativeSrc":"3150:43:39","nodeType":"YulFunctionCall","src":"3150:43:39"},"nativeSrc":"3147:63:39","nodeType":"YulIf","src":"3147:63:39"}]},"name":"validator_revert_t_address","nativeSrc":"3094:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3130:5:39","nodeType":"YulTypedName","src":"3130:5:39","type":""}],"src":"3094:122:39"},{"body":{"nativeSrc":"3274:87:39","nodeType":"YulBlock","src":"3274:87:39","statements":[{"nativeSrc":"3284:29:39","nodeType":"YulAssignment","src":"3284:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"3306:6:39","nodeType":"YulIdentifier","src":"3306:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"3293:12:39","nodeType":"YulIdentifier","src":"3293:12:39"},"nativeSrc":"3293:20:39","nodeType":"YulFunctionCall","src":"3293:20:39"},"variableNames":[{"name":"value","nativeSrc":"3284:5:39","nodeType":"YulIdentifier","src":"3284:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3349:5:39","nodeType":"YulIdentifier","src":"3349:5:39"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3322:26:39","nodeType":"YulIdentifier","src":"3322:26:39"},"nativeSrc":"3322:33:39","nodeType":"YulFunctionCall","src":"3322:33:39"},"nativeSrc":"3322:33:39","nodeType":"YulExpressionStatement","src":"3322:33:39"}]},"name":"abi_decode_t_address","nativeSrc":"3222:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3252:6:39","nodeType":"YulTypedName","src":"3252:6:39","type":""},{"name":"end","nativeSrc":"3260:3:39","nodeType":"YulTypedName","src":"3260:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3268:5:39","nodeType":"YulTypedName","src":"3268:5:39","type":""}],"src":"3222:139:39"},{"body":{"nativeSrc":"3412:32:39","nodeType":"YulBlock","src":"3412:32:39","statements":[{"nativeSrc":"3422:16:39","nodeType":"YulAssignment","src":"3422:16:39","value":{"name":"value","nativeSrc":"3433:5:39","nodeType":"YulIdentifier","src":"3433:5:39"},"variableNames":[{"name":"cleaned","nativeSrc":"3422:7:39","nodeType":"YulIdentifier","src":"3422:7:39"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3367:77:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3394:5:39","nodeType":"YulTypedName","src":"3394:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3404:7:39","nodeType":"YulTypedName","src":"3404:7:39","type":""}],"src":"3367:77:39"},{"body":{"nativeSrc":"3493:79:39","nodeType":"YulBlock","src":"3493:79:39","statements":[{"body":{"nativeSrc":"3550:16:39","nodeType":"YulBlock","src":"3550:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3559:1:39","nodeType":"YulLiteral","src":"3559:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"3562:1:39","nodeType":"YulLiteral","src":"3562:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3552:6:39","nodeType":"YulIdentifier","src":"3552:6:39"},"nativeSrc":"3552:12:39","nodeType":"YulFunctionCall","src":"3552:12:39"},"nativeSrc":"3552:12:39","nodeType":"YulExpressionStatement","src":"3552:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3516:5:39","nodeType":"YulIdentifier","src":"3516:5:39"},{"arguments":[{"name":"value","nativeSrc":"3541:5:39","nodeType":"YulIdentifier","src":"3541:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3523:17:39","nodeType":"YulIdentifier","src":"3523:17:39"},"nativeSrc":"3523:24:39","nodeType":"YulFunctionCall","src":"3523:24:39"}],"functionName":{"name":"eq","nativeSrc":"3513:2:39","nodeType":"YulIdentifier","src":"3513:2:39"},"nativeSrc":"3513:35:39","nodeType":"YulFunctionCall","src":"3513:35:39"}],"functionName":{"name":"iszero","nativeSrc":"3506:6:39","nodeType":"YulIdentifier","src":"3506:6:39"},"nativeSrc":"3506:43:39","nodeType":"YulFunctionCall","src":"3506:43:39"},"nativeSrc":"3503:63:39","nodeType":"YulIf","src":"3503:63:39"}]},"name":"validator_revert_t_uint256","nativeSrc":"3450:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3486:5:39","nodeType":"YulTypedName","src":"3486:5:39","type":""}],"src":"3450:122:39"},{"body":{"nativeSrc":"3630:87:39","nodeType":"YulBlock","src":"3630:87:39","statements":[{"nativeSrc":"3640:29:39","nodeType":"YulAssignment","src":"3640:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"3662:6:39","nodeType":"YulIdentifier","src":"3662:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"3649:12:39","nodeType":"YulIdentifier","src":"3649:12:39"},"nativeSrc":"3649:20:39","nodeType":"YulFunctionCall","src":"3649:20:39"},"variableNames":[{"name":"value","nativeSrc":"3640:5:39","nodeType":"YulIdentifier","src":"3640:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3705:5:39","nodeType":"YulIdentifier","src":"3705:5:39"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3678:26:39","nodeType":"YulIdentifier","src":"3678:26:39"},"nativeSrc":"3678:33:39","nodeType":"YulFunctionCall","src":"3678:33:39"},"nativeSrc":"3678:33:39","nodeType":"YulExpressionStatement","src":"3678:33:39"}]},"name":"abi_decode_t_uint256","nativeSrc":"3578:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3608:6:39","nodeType":"YulTypedName","src":"3608:6:39","type":""},{"name":"end","nativeSrc":"3616:3:39","nodeType":"YulTypedName","src":"3616:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3624:5:39","nodeType":"YulTypedName","src":"3624:5:39","type":""}],"src":"3578:139:39"},{"body":{"nativeSrc":"3806:391:39","nodeType":"YulBlock","src":"3806:391:39","statements":[{"body":{"nativeSrc":"3852:83:39","nodeType":"YulBlock","src":"3852:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3854:77:39","nodeType":"YulIdentifier","src":"3854:77:39"},"nativeSrc":"3854:79:39","nodeType":"YulFunctionCall","src":"3854:79:39"},"nativeSrc":"3854:79:39","nodeType":"YulExpressionStatement","src":"3854:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3827:7:39","nodeType":"YulIdentifier","src":"3827:7:39"},{"name":"headStart","nativeSrc":"3836:9:39","nodeType":"YulIdentifier","src":"3836:9:39"}],"functionName":{"name":"sub","nativeSrc":"3823:3:39","nodeType":"YulIdentifier","src":"3823:3:39"},"nativeSrc":"3823:23:39","nodeType":"YulFunctionCall","src":"3823:23:39"},{"kind":"number","nativeSrc":"3848:2:39","nodeType":"YulLiteral","src":"3848:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3819:3:39","nodeType":"YulIdentifier","src":"3819:3:39"},"nativeSrc":"3819:32:39","nodeType":"YulFunctionCall","src":"3819:32:39"},"nativeSrc":"3816:119:39","nodeType":"YulIf","src":"3816:119:39"},{"nativeSrc":"3945:117:39","nodeType":"YulBlock","src":"3945:117:39","statements":[{"nativeSrc":"3960:15:39","nodeType":"YulVariableDeclaration","src":"3960:15:39","value":{"kind":"number","nativeSrc":"3974:1:39","nodeType":"YulLiteral","src":"3974:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3964:6:39","nodeType":"YulTypedName","src":"3964:6:39","type":""}]},{"nativeSrc":"3989:63:39","nodeType":"YulAssignment","src":"3989:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4024:9:39","nodeType":"YulIdentifier","src":"4024:9:39"},{"name":"offset","nativeSrc":"4035:6:39","nodeType":"YulIdentifier","src":"4035:6:39"}],"functionName":{"name":"add","nativeSrc":"4020:3:39","nodeType":"YulIdentifier","src":"4020:3:39"},"nativeSrc":"4020:22:39","nodeType":"YulFunctionCall","src":"4020:22:39"},{"name":"dataEnd","nativeSrc":"4044:7:39","nodeType":"YulIdentifier","src":"4044:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3999:20:39","nodeType":"YulIdentifier","src":"3999:20:39"},"nativeSrc":"3999:53:39","nodeType":"YulFunctionCall","src":"3999:53:39"},"variableNames":[{"name":"value0","nativeSrc":"3989:6:39","nodeType":"YulIdentifier","src":"3989:6:39"}]}]},{"nativeSrc":"4072:118:39","nodeType":"YulBlock","src":"4072:118:39","statements":[{"nativeSrc":"4087:16:39","nodeType":"YulVariableDeclaration","src":"4087:16:39","value":{"kind":"number","nativeSrc":"4101:2:39","nodeType":"YulLiteral","src":"4101:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4091:6:39","nodeType":"YulTypedName","src":"4091:6:39","type":""}]},{"nativeSrc":"4117:63:39","nodeType":"YulAssignment","src":"4117:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4152:9:39","nodeType":"YulIdentifier","src":"4152:9:39"},{"name":"offset","nativeSrc":"4163:6:39","nodeType":"YulIdentifier","src":"4163:6:39"}],"functionName":{"name":"add","nativeSrc":"4148:3:39","nodeType":"YulIdentifier","src":"4148:3:39"},"nativeSrc":"4148:22:39","nodeType":"YulFunctionCall","src":"4148:22:39"},{"name":"dataEnd","nativeSrc":"4172:7:39","nodeType":"YulIdentifier","src":"4172:7:39"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4127:20:39","nodeType":"YulIdentifier","src":"4127:20:39"},"nativeSrc":"4127:53:39","nodeType":"YulFunctionCall","src":"4127:53:39"},"variableNames":[{"name":"value1","nativeSrc":"4117:6:39","nodeType":"YulIdentifier","src":"4117:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3723:474:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3768:9:39","nodeType":"YulTypedName","src":"3768:9:39","type":""},{"name":"dataEnd","nativeSrc":"3779:7:39","nodeType":"YulTypedName","src":"3779:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3791:6:39","nodeType":"YulTypedName","src":"3791:6:39","type":""},{"name":"value1","nativeSrc":"3799:6:39","nodeType":"YulTypedName","src":"3799:6:39","type":""}],"src":"3723:474:39"},{"body":{"nativeSrc":"4268:53:39","nodeType":"YulBlock","src":"4268:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4285:3:39","nodeType":"YulIdentifier","src":"4285:3:39"},{"arguments":[{"name":"value","nativeSrc":"4308:5:39","nodeType":"YulIdentifier","src":"4308:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4290:17:39","nodeType":"YulIdentifier","src":"4290:17:39"},"nativeSrc":"4290:24:39","nodeType":"YulFunctionCall","src":"4290:24:39"}],"functionName":{"name":"mstore","nativeSrc":"4278:6:39","nodeType":"YulIdentifier","src":"4278:6:39"},"nativeSrc":"4278:37:39","nodeType":"YulFunctionCall","src":"4278:37:39"},"nativeSrc":"4278:37:39","nodeType":"YulExpressionStatement","src":"4278:37:39"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4203:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4256:5:39","nodeType":"YulTypedName","src":"4256:5:39","type":""},{"name":"pos","nativeSrc":"4263:3:39","nodeType":"YulTypedName","src":"4263:3:39","type":""}],"src":"4203:118:39"},{"body":{"nativeSrc":"4425:124:39","nodeType":"YulBlock","src":"4425:124:39","statements":[{"nativeSrc":"4435:26:39","nodeType":"YulAssignment","src":"4435:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"4447:9:39","nodeType":"YulIdentifier","src":"4447:9:39"},{"kind":"number","nativeSrc":"4458:2:39","nodeType":"YulLiteral","src":"4458:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4443:3:39","nodeType":"YulIdentifier","src":"4443:3:39"},"nativeSrc":"4443:18:39","nodeType":"YulFunctionCall","src":"4443:18:39"},"variableNames":[{"name":"tail","nativeSrc":"4435:4:39","nodeType":"YulIdentifier","src":"4435:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4515:6:39","nodeType":"YulIdentifier","src":"4515:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"4528:9:39","nodeType":"YulIdentifier","src":"4528:9:39"},{"kind":"number","nativeSrc":"4539:1:39","nodeType":"YulLiteral","src":"4539:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4524:3:39","nodeType":"YulIdentifier","src":"4524:3:39"},"nativeSrc":"4524:17:39","nodeType":"YulFunctionCall","src":"4524:17:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4471:43:39","nodeType":"YulIdentifier","src":"4471:43:39"},"nativeSrc":"4471:71:39","nodeType":"YulFunctionCall","src":"4471:71:39"},"nativeSrc":"4471:71:39","nodeType":"YulExpressionStatement","src":"4471:71:39"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4327:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4397:9:39","nodeType":"YulTypedName","src":"4397:9:39","type":""},{"name":"value0","nativeSrc":"4409:6:39","nodeType":"YulTypedName","src":"4409:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4420:4:39","nodeType":"YulTypedName","src":"4420:4:39","type":""}],"src":"4327:222:39"},{"body":{"nativeSrc":"4655:519:39","nodeType":"YulBlock","src":"4655:519:39","statements":[{"body":{"nativeSrc":"4701:83:39","nodeType":"YulBlock","src":"4701:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4703:77:39","nodeType":"YulIdentifier","src":"4703:77:39"},"nativeSrc":"4703:79:39","nodeType":"YulFunctionCall","src":"4703:79:39"},"nativeSrc":"4703:79:39","nodeType":"YulExpressionStatement","src":"4703:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4676:7:39","nodeType":"YulIdentifier","src":"4676:7:39"},{"name":"headStart","nativeSrc":"4685:9:39","nodeType":"YulIdentifier","src":"4685:9:39"}],"functionName":{"name":"sub","nativeSrc":"4672:3:39","nodeType":"YulIdentifier","src":"4672:3:39"},"nativeSrc":"4672:23:39","nodeType":"YulFunctionCall","src":"4672:23:39"},{"kind":"number","nativeSrc":"4697:2:39","nodeType":"YulLiteral","src":"4697:2:39","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4668:3:39","nodeType":"YulIdentifier","src":"4668:3:39"},"nativeSrc":"4668:32:39","nodeType":"YulFunctionCall","src":"4668:32:39"},"nativeSrc":"4665:119:39","nodeType":"YulIf","src":"4665:119:39"},{"nativeSrc":"4794:117:39","nodeType":"YulBlock","src":"4794:117:39","statements":[{"nativeSrc":"4809:15:39","nodeType":"YulVariableDeclaration","src":"4809:15:39","value":{"kind":"number","nativeSrc":"4823:1:39","nodeType":"YulLiteral","src":"4823:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4813:6:39","nodeType":"YulTypedName","src":"4813:6:39","type":""}]},{"nativeSrc":"4838:63:39","nodeType":"YulAssignment","src":"4838:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4873:9:39","nodeType":"YulIdentifier","src":"4873:9:39"},{"name":"offset","nativeSrc":"4884:6:39","nodeType":"YulIdentifier","src":"4884:6:39"}],"functionName":{"name":"add","nativeSrc":"4869:3:39","nodeType":"YulIdentifier","src":"4869:3:39"},"nativeSrc":"4869:22:39","nodeType":"YulFunctionCall","src":"4869:22:39"},{"name":"dataEnd","nativeSrc":"4893:7:39","nodeType":"YulIdentifier","src":"4893:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4848:20:39","nodeType":"YulIdentifier","src":"4848:20:39"},"nativeSrc":"4848:53:39","nodeType":"YulFunctionCall","src":"4848:53:39"},"variableNames":[{"name":"value0","nativeSrc":"4838:6:39","nodeType":"YulIdentifier","src":"4838:6:39"}]}]},{"nativeSrc":"4921:118:39","nodeType":"YulBlock","src":"4921:118:39","statements":[{"nativeSrc":"4936:16:39","nodeType":"YulVariableDeclaration","src":"4936:16:39","value":{"kind":"number","nativeSrc":"4950:2:39","nodeType":"YulLiteral","src":"4950:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4940:6:39","nodeType":"YulTypedName","src":"4940:6:39","type":""}]},{"nativeSrc":"4966:63:39","nodeType":"YulAssignment","src":"4966:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5001:9:39","nodeType":"YulIdentifier","src":"5001:9:39"},{"name":"offset","nativeSrc":"5012:6:39","nodeType":"YulIdentifier","src":"5012:6:39"}],"functionName":{"name":"add","nativeSrc":"4997:3:39","nodeType":"YulIdentifier","src":"4997:3:39"},"nativeSrc":"4997:22:39","nodeType":"YulFunctionCall","src":"4997:22:39"},{"name":"dataEnd","nativeSrc":"5021:7:39","nodeType":"YulIdentifier","src":"5021:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4976:20:39","nodeType":"YulIdentifier","src":"4976:20:39"},"nativeSrc":"4976:53:39","nodeType":"YulFunctionCall","src":"4976:53:39"},"variableNames":[{"name":"value1","nativeSrc":"4966:6:39","nodeType":"YulIdentifier","src":"4966:6:39"}]}]},{"nativeSrc":"5049:118:39","nodeType":"YulBlock","src":"5049:118:39","statements":[{"nativeSrc":"5064:16:39","nodeType":"YulVariableDeclaration","src":"5064:16:39","value":{"kind":"number","nativeSrc":"5078:2:39","nodeType":"YulLiteral","src":"5078:2:39","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5068:6:39","nodeType":"YulTypedName","src":"5068:6:39","type":""}]},{"nativeSrc":"5094:63:39","nodeType":"YulAssignment","src":"5094:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5129:9:39","nodeType":"YulIdentifier","src":"5129:9:39"},{"name":"offset","nativeSrc":"5140:6:39","nodeType":"YulIdentifier","src":"5140:6:39"}],"functionName":{"name":"add","nativeSrc":"5125:3:39","nodeType":"YulIdentifier","src":"5125:3:39"},"nativeSrc":"5125:22:39","nodeType":"YulFunctionCall","src":"5125:22:39"},{"name":"dataEnd","nativeSrc":"5149:7:39","nodeType":"YulIdentifier","src":"5149:7:39"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5104:20:39","nodeType":"YulIdentifier","src":"5104:20:39"},"nativeSrc":"5104:53:39","nodeType":"YulFunctionCall","src":"5104:53:39"},"variableNames":[{"name":"value2","nativeSrc":"5094:6:39","nodeType":"YulIdentifier","src":"5094:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4555:619:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4609:9:39","nodeType":"YulTypedName","src":"4609:9:39","type":""},{"name":"dataEnd","nativeSrc":"4620:7:39","nodeType":"YulTypedName","src":"4620:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4632:6:39","nodeType":"YulTypedName","src":"4632:6:39","type":""},{"name":"value1","nativeSrc":"4640:6:39","nodeType":"YulTypedName","src":"4640:6:39","type":""},{"name":"value2","nativeSrc":"4648:6:39","nodeType":"YulTypedName","src":"4648:6:39","type":""}],"src":"4555:619:39"},{"body":{"nativeSrc":"5225:32:39","nodeType":"YulBlock","src":"5225:32:39","statements":[{"nativeSrc":"5235:16:39","nodeType":"YulAssignment","src":"5235:16:39","value":{"name":"value","nativeSrc":"5246:5:39","nodeType":"YulIdentifier","src":"5246:5:39"},"variableNames":[{"name":"cleaned","nativeSrc":"5235:7:39","nodeType":"YulIdentifier","src":"5235:7:39"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5180:77:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5207:5:39","nodeType":"YulTypedName","src":"5207:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5217:7:39","nodeType":"YulTypedName","src":"5217:7:39","type":""}],"src":"5180:77:39"},{"body":{"nativeSrc":"5306:79:39","nodeType":"YulBlock","src":"5306:79:39","statements":[{"body":{"nativeSrc":"5363:16:39","nodeType":"YulBlock","src":"5363:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5372:1:39","nodeType":"YulLiteral","src":"5372:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"5375:1:39","nodeType":"YulLiteral","src":"5375:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5365:6:39","nodeType":"YulIdentifier","src":"5365:6:39"},"nativeSrc":"5365:12:39","nodeType":"YulFunctionCall","src":"5365:12:39"},"nativeSrc":"5365:12:39","nodeType":"YulExpressionStatement","src":"5365:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5329:5:39","nodeType":"YulIdentifier","src":"5329:5:39"},{"arguments":[{"name":"value","nativeSrc":"5354:5:39","nodeType":"YulIdentifier","src":"5354:5:39"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5336:17:39","nodeType":"YulIdentifier","src":"5336:17:39"},"nativeSrc":"5336:24:39","nodeType":"YulFunctionCall","src":"5336:24:39"}],"functionName":{"name":"eq","nativeSrc":"5326:2:39","nodeType":"YulIdentifier","src":"5326:2:39"},"nativeSrc":"5326:35:39","nodeType":"YulFunctionCall","src":"5326:35:39"}],"functionName":{"name":"iszero","nativeSrc":"5319:6:39","nodeType":"YulIdentifier","src":"5319:6:39"},"nativeSrc":"5319:43:39","nodeType":"YulFunctionCall","src":"5319:43:39"},"nativeSrc":"5316:63:39","nodeType":"YulIf","src":"5316:63:39"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5263:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5299:5:39","nodeType":"YulTypedName","src":"5299:5:39","type":""}],"src":"5263:122:39"},{"body":{"nativeSrc":"5443:87:39","nodeType":"YulBlock","src":"5443:87:39","statements":[{"nativeSrc":"5453:29:39","nodeType":"YulAssignment","src":"5453:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"5475:6:39","nodeType":"YulIdentifier","src":"5475:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"5462:12:39","nodeType":"YulIdentifier","src":"5462:12:39"},"nativeSrc":"5462:20:39","nodeType":"YulFunctionCall","src":"5462:20:39"},"variableNames":[{"name":"value","nativeSrc":"5453:5:39","nodeType":"YulIdentifier","src":"5453:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5518:5:39","nodeType":"YulIdentifier","src":"5518:5:39"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5491:26:39","nodeType":"YulIdentifier","src":"5491:26:39"},"nativeSrc":"5491:33:39","nodeType":"YulFunctionCall","src":"5491:33:39"},"nativeSrc":"5491:33:39","nodeType":"YulExpressionStatement","src":"5491:33:39"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5391:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5421:6:39","nodeType":"YulTypedName","src":"5421:6:39","type":""},{"name":"end","nativeSrc":"5429:3:39","nodeType":"YulTypedName","src":"5429:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5437:5:39","nodeType":"YulTypedName","src":"5437:5:39","type":""}],"src":"5391:139:39"},{"body":{"nativeSrc":"5602:263:39","nodeType":"YulBlock","src":"5602:263:39","statements":[{"body":{"nativeSrc":"5648:83:39","nodeType":"YulBlock","src":"5648:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5650:77:39","nodeType":"YulIdentifier","src":"5650:77:39"},"nativeSrc":"5650:79:39","nodeType":"YulFunctionCall","src":"5650:79:39"},"nativeSrc":"5650:79:39","nodeType":"YulExpressionStatement","src":"5650:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5623:7:39","nodeType":"YulIdentifier","src":"5623:7:39"},{"name":"headStart","nativeSrc":"5632:9:39","nodeType":"YulIdentifier","src":"5632:9:39"}],"functionName":{"name":"sub","nativeSrc":"5619:3:39","nodeType":"YulIdentifier","src":"5619:3:39"},"nativeSrc":"5619:23:39","nodeType":"YulFunctionCall","src":"5619:23:39"},{"kind":"number","nativeSrc":"5644:2:39","nodeType":"YulLiteral","src":"5644:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5615:3:39","nodeType":"YulIdentifier","src":"5615:3:39"},"nativeSrc":"5615:32:39","nodeType":"YulFunctionCall","src":"5615:32:39"},"nativeSrc":"5612:119:39","nodeType":"YulIf","src":"5612:119:39"},{"nativeSrc":"5741:117:39","nodeType":"YulBlock","src":"5741:117:39","statements":[{"nativeSrc":"5756:15:39","nodeType":"YulVariableDeclaration","src":"5756:15:39","value":{"kind":"number","nativeSrc":"5770:1:39","nodeType":"YulLiteral","src":"5770:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5760:6:39","nodeType":"YulTypedName","src":"5760:6:39","type":""}]},{"nativeSrc":"5785:63:39","nodeType":"YulAssignment","src":"5785:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5820:9:39","nodeType":"YulIdentifier","src":"5820:9:39"},{"name":"offset","nativeSrc":"5831:6:39","nodeType":"YulIdentifier","src":"5831:6:39"}],"functionName":{"name":"add","nativeSrc":"5816:3:39","nodeType":"YulIdentifier","src":"5816:3:39"},"nativeSrc":"5816:22:39","nodeType":"YulFunctionCall","src":"5816:22:39"},{"name":"dataEnd","nativeSrc":"5840:7:39","nodeType":"YulIdentifier","src":"5840:7:39"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5795:20:39","nodeType":"YulIdentifier","src":"5795:20:39"},"nativeSrc":"5795:53:39","nodeType":"YulFunctionCall","src":"5795:53:39"},"variableNames":[{"name":"value0","nativeSrc":"5785:6:39","nodeType":"YulIdentifier","src":"5785:6:39"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5536:329:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5572:9:39","nodeType":"YulTypedName","src":"5572:9:39","type":""},{"name":"dataEnd","nativeSrc":"5583:7:39","nodeType":"YulTypedName","src":"5583:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5595:6:39","nodeType":"YulTypedName","src":"5595:6:39","type":""}],"src":"5536:329:39"},{"body":{"nativeSrc":"5936:53:39","nodeType":"YulBlock","src":"5936:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5953:3:39","nodeType":"YulIdentifier","src":"5953:3:39"},{"arguments":[{"name":"value","nativeSrc":"5976:5:39","nodeType":"YulIdentifier","src":"5976:5:39"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5958:17:39","nodeType":"YulIdentifier","src":"5958:17:39"},"nativeSrc":"5958:24:39","nodeType":"YulFunctionCall","src":"5958:24:39"}],"functionName":{"name":"mstore","nativeSrc":"5946:6:39","nodeType":"YulIdentifier","src":"5946:6:39"},"nativeSrc":"5946:37:39","nodeType":"YulFunctionCall","src":"5946:37:39"},"nativeSrc":"5946:37:39","nodeType":"YulExpressionStatement","src":"5946:37:39"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5871:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5924:5:39","nodeType":"YulTypedName","src":"5924:5:39","type":""},{"name":"pos","nativeSrc":"5931:3:39","nodeType":"YulTypedName","src":"5931:3:39","type":""}],"src":"5871:118:39"},{"body":{"nativeSrc":"6093:124:39","nodeType":"YulBlock","src":"6093:124:39","statements":[{"nativeSrc":"6103:26:39","nodeType":"YulAssignment","src":"6103:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"6115:9:39","nodeType":"YulIdentifier","src":"6115:9:39"},{"kind":"number","nativeSrc":"6126:2:39","nodeType":"YulLiteral","src":"6126:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6111:3:39","nodeType":"YulIdentifier","src":"6111:3:39"},"nativeSrc":"6111:18:39","nodeType":"YulFunctionCall","src":"6111:18:39"},"variableNames":[{"name":"tail","nativeSrc":"6103:4:39","nodeType":"YulIdentifier","src":"6103:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6183:6:39","nodeType":"YulIdentifier","src":"6183:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"6196:9:39","nodeType":"YulIdentifier","src":"6196:9:39"},{"kind":"number","nativeSrc":"6207:1:39","nodeType":"YulLiteral","src":"6207:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6192:3:39","nodeType":"YulIdentifier","src":"6192:3:39"},"nativeSrc":"6192:17:39","nodeType":"YulFunctionCall","src":"6192:17:39"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6139:43:39","nodeType":"YulIdentifier","src":"6139:43:39"},"nativeSrc":"6139:71:39","nodeType":"YulFunctionCall","src":"6139:71:39"},"nativeSrc":"6139:71:39","nodeType":"YulExpressionStatement","src":"6139:71:39"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5995:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6065:9:39","nodeType":"YulTypedName","src":"6065:9:39","type":""},{"name":"value0","nativeSrc":"6077:6:39","nodeType":"YulTypedName","src":"6077:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6088:4:39","nodeType":"YulTypedName","src":"6088:4:39","type":""}],"src":"5995:222:39"},{"body":{"nativeSrc":"6306:391:39","nodeType":"YulBlock","src":"6306:391:39","statements":[{"body":{"nativeSrc":"6352:83:39","nodeType":"YulBlock","src":"6352:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6354:77:39","nodeType":"YulIdentifier","src":"6354:77:39"},"nativeSrc":"6354:79:39","nodeType":"YulFunctionCall","src":"6354:79:39"},"nativeSrc":"6354:79:39","nodeType":"YulExpressionStatement","src":"6354:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6327:7:39","nodeType":"YulIdentifier","src":"6327:7:39"},{"name":"headStart","nativeSrc":"6336:9:39","nodeType":"YulIdentifier","src":"6336:9:39"}],"functionName":{"name":"sub","nativeSrc":"6323:3:39","nodeType":"YulIdentifier","src":"6323:3:39"},"nativeSrc":"6323:23:39","nodeType":"YulFunctionCall","src":"6323:23:39"},{"kind":"number","nativeSrc":"6348:2:39","nodeType":"YulLiteral","src":"6348:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6319:3:39","nodeType":"YulIdentifier","src":"6319:3:39"},"nativeSrc":"6319:32:39","nodeType":"YulFunctionCall","src":"6319:32:39"},"nativeSrc":"6316:119:39","nodeType":"YulIf","src":"6316:119:39"},{"nativeSrc":"6445:117:39","nodeType":"YulBlock","src":"6445:117:39","statements":[{"nativeSrc":"6460:15:39","nodeType":"YulVariableDeclaration","src":"6460:15:39","value":{"kind":"number","nativeSrc":"6474:1:39","nodeType":"YulLiteral","src":"6474:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6464:6:39","nodeType":"YulTypedName","src":"6464:6:39","type":""}]},{"nativeSrc":"6489:63:39","nodeType":"YulAssignment","src":"6489:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6524:9:39","nodeType":"YulIdentifier","src":"6524:9:39"},{"name":"offset","nativeSrc":"6535:6:39","nodeType":"YulIdentifier","src":"6535:6:39"}],"functionName":{"name":"add","nativeSrc":"6520:3:39","nodeType":"YulIdentifier","src":"6520:3:39"},"nativeSrc":"6520:22:39","nodeType":"YulFunctionCall","src":"6520:22:39"},{"name":"dataEnd","nativeSrc":"6544:7:39","nodeType":"YulIdentifier","src":"6544:7:39"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6499:20:39","nodeType":"YulIdentifier","src":"6499:20:39"},"nativeSrc":"6499:53:39","nodeType":"YulFunctionCall","src":"6499:53:39"},"variableNames":[{"name":"value0","nativeSrc":"6489:6:39","nodeType":"YulIdentifier","src":"6489:6:39"}]}]},{"nativeSrc":"6572:118:39","nodeType":"YulBlock","src":"6572:118:39","statements":[{"nativeSrc":"6587:16:39","nodeType":"YulVariableDeclaration","src":"6587:16:39","value":{"kind":"number","nativeSrc":"6601:2:39","nodeType":"YulLiteral","src":"6601:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6591:6:39","nodeType":"YulTypedName","src":"6591:6:39","type":""}]},{"nativeSrc":"6617:63:39","nodeType":"YulAssignment","src":"6617:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6652:9:39","nodeType":"YulIdentifier","src":"6652:9:39"},{"name":"offset","nativeSrc":"6663:6:39","nodeType":"YulIdentifier","src":"6663:6:39"}],"functionName":{"name":"add","nativeSrc":"6648:3:39","nodeType":"YulIdentifier","src":"6648:3:39"},"nativeSrc":"6648:22:39","nodeType":"YulFunctionCall","src":"6648:22:39"},{"name":"dataEnd","nativeSrc":"6672:7:39","nodeType":"YulIdentifier","src":"6672:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6627:20:39","nodeType":"YulIdentifier","src":"6627:20:39"},"nativeSrc":"6627:53:39","nodeType":"YulFunctionCall","src":"6627:53:39"},"variableNames":[{"name":"value1","nativeSrc":"6617:6:39","nodeType":"YulIdentifier","src":"6617:6:39"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"6223:474:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6268:9:39","nodeType":"YulTypedName","src":"6268:9:39","type":""},{"name":"dataEnd","nativeSrc":"6279:7:39","nodeType":"YulTypedName","src":"6279:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6291:6:39","nodeType":"YulTypedName","src":"6291:6:39","type":""},{"name":"value1","nativeSrc":"6299:6:39","nodeType":"YulTypedName","src":"6299:6:39","type":""}],"src":"6223:474:39"},{"body":{"nativeSrc":"6746:43:39","nodeType":"YulBlock","src":"6746:43:39","statements":[{"nativeSrc":"6756:27:39","nodeType":"YulAssignment","src":"6756:27:39","value":{"arguments":[{"name":"value","nativeSrc":"6771:5:39","nodeType":"YulIdentifier","src":"6771:5:39"},{"kind":"number","nativeSrc":"6778:4:39","nodeType":"YulLiteral","src":"6778:4:39","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6767:3:39","nodeType":"YulIdentifier","src":"6767:3:39"},"nativeSrc":"6767:16:39","nodeType":"YulFunctionCall","src":"6767:16:39"},"variableNames":[{"name":"cleaned","nativeSrc":"6756:7:39","nodeType":"YulIdentifier","src":"6756:7:39"}]}]},"name":"cleanup_t_uint8","nativeSrc":"6703:86:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6728:5:39","nodeType":"YulTypedName","src":"6728:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6738:7:39","nodeType":"YulTypedName","src":"6738:7:39","type":""}],"src":"6703:86:39"},{"body":{"nativeSrc":"6856:51:39","nodeType":"YulBlock","src":"6856:51:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6873:3:39","nodeType":"YulIdentifier","src":"6873:3:39"},{"arguments":[{"name":"value","nativeSrc":"6894:5:39","nodeType":"YulIdentifier","src":"6894:5:39"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"6878:15:39","nodeType":"YulIdentifier","src":"6878:15:39"},"nativeSrc":"6878:22:39","nodeType":"YulFunctionCall","src":"6878:22:39"}],"functionName":{"name":"mstore","nativeSrc":"6866:6:39","nodeType":"YulIdentifier","src":"6866:6:39"},"nativeSrc":"6866:35:39","nodeType":"YulFunctionCall","src":"6866:35:39"},"nativeSrc":"6866:35:39","nodeType":"YulExpressionStatement","src":"6866:35:39"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"6795:112:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6844:5:39","nodeType":"YulTypedName","src":"6844:5:39","type":""},{"name":"pos","nativeSrc":"6851:3:39","nodeType":"YulTypedName","src":"6851:3:39","type":""}],"src":"6795:112:39"},{"body":{"nativeSrc":"7007:120:39","nodeType":"YulBlock","src":"7007:120:39","statements":[{"nativeSrc":"7017:26:39","nodeType":"YulAssignment","src":"7017:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"7029:9:39","nodeType":"YulIdentifier","src":"7029:9:39"},{"kind":"number","nativeSrc":"7040:2:39","nodeType":"YulLiteral","src":"7040:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7025:3:39","nodeType":"YulIdentifier","src":"7025:3:39"},"nativeSrc":"7025:18:39","nodeType":"YulFunctionCall","src":"7025:18:39"},"variableNames":[{"name":"tail","nativeSrc":"7017:4:39","nodeType":"YulIdentifier","src":"7017:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7093:6:39","nodeType":"YulIdentifier","src":"7093:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"7106:9:39","nodeType":"YulIdentifier","src":"7106:9:39"},{"kind":"number","nativeSrc":"7117:1:39","nodeType":"YulLiteral","src":"7117:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7102:3:39","nodeType":"YulIdentifier","src":"7102:3:39"},"nativeSrc":"7102:17:39","nodeType":"YulFunctionCall","src":"7102:17:39"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7053:39:39","nodeType":"YulIdentifier","src":"7053:39:39"},"nativeSrc":"7053:67:39","nodeType":"YulFunctionCall","src":"7053:67:39"},"nativeSrc":"7053:67:39","nodeType":"YulExpressionStatement","src":"7053:67:39"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"6913:214:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6979:9:39","nodeType":"YulTypedName","src":"6979:9:39","type":""},{"name":"value0","nativeSrc":"6991:6:39","nodeType":"YulTypedName","src":"6991:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7002:4:39","nodeType":"YulTypedName","src":"7002:4:39","type":""}],"src":"6913:214:39"},{"body":{"nativeSrc":"7222:28:39","nodeType":"YulBlock","src":"7222:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7239:1:39","nodeType":"YulLiteral","src":"7239:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7242:1:39","nodeType":"YulLiteral","src":"7242:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7232:6:39","nodeType":"YulIdentifier","src":"7232:6:39"},"nativeSrc":"7232:12:39","nodeType":"YulFunctionCall","src":"7232:12:39"},"nativeSrc":"7232:12:39","nodeType":"YulExpressionStatement","src":"7232:12:39"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7133:117:39","nodeType":"YulFunctionDefinition","src":"7133:117:39"},{"body":{"nativeSrc":"7345:28:39","nodeType":"YulBlock","src":"7345:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7362:1:39","nodeType":"YulLiteral","src":"7362:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7365:1:39","nodeType":"YulLiteral","src":"7365:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7355:6:39","nodeType":"YulIdentifier","src":"7355:6:39"},"nativeSrc":"7355:12:39","nodeType":"YulFunctionCall","src":"7355:12:39"},"nativeSrc":"7355:12:39","nodeType":"YulExpressionStatement","src":"7355:12:39"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7256:117:39","nodeType":"YulFunctionDefinition","src":"7256:117:39"},{"body":{"nativeSrc":"7407:152:39","nodeType":"YulBlock","src":"7407:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7424:1:39","nodeType":"YulLiteral","src":"7424:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7427:77:39","nodeType":"YulLiteral","src":"7427:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7417:6:39","nodeType":"YulIdentifier","src":"7417:6:39"},"nativeSrc":"7417:88:39","nodeType":"YulFunctionCall","src":"7417:88:39"},"nativeSrc":"7417:88:39","nodeType":"YulExpressionStatement","src":"7417:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7521:1:39","nodeType":"YulLiteral","src":"7521:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"7524:4:39","nodeType":"YulLiteral","src":"7524:4:39","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"7514:6:39","nodeType":"YulIdentifier","src":"7514:6:39"},"nativeSrc":"7514:15:39","nodeType":"YulFunctionCall","src":"7514:15:39"},"nativeSrc":"7514:15:39","nodeType":"YulExpressionStatement","src":"7514:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7545:1:39","nodeType":"YulLiteral","src":"7545:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7548:4:39","nodeType":"YulLiteral","src":"7548:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7538:6:39","nodeType":"YulIdentifier","src":"7538:6:39"},"nativeSrc":"7538:15:39","nodeType":"YulFunctionCall","src":"7538:15:39"},"nativeSrc":"7538:15:39","nodeType":"YulExpressionStatement","src":"7538:15:39"}]},"name":"panic_error_0x41","nativeSrc":"7379:180:39","nodeType":"YulFunctionDefinition","src":"7379:180:39"},{"body":{"nativeSrc":"7608:238:39","nodeType":"YulBlock","src":"7608:238:39","statements":[{"nativeSrc":"7618:58:39","nodeType":"YulVariableDeclaration","src":"7618:58:39","value":{"arguments":[{"name":"memPtr","nativeSrc":"7640:6:39","nodeType":"YulIdentifier","src":"7640:6:39"},{"arguments":[{"name":"size","nativeSrc":"7670:4:39","nodeType":"YulIdentifier","src":"7670:4:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7648:21:39","nodeType":"YulIdentifier","src":"7648:21:39"},"nativeSrc":"7648:27:39","nodeType":"YulFunctionCall","src":"7648:27:39"}],"functionName":{"name":"add","nativeSrc":"7636:3:39","nodeType":"YulIdentifier","src":"7636:3:39"},"nativeSrc":"7636:40:39","nodeType":"YulFunctionCall","src":"7636:40:39"},"variables":[{"name":"newFreePtr","nativeSrc":"7622:10:39","nodeType":"YulTypedName","src":"7622:10:39","type":""}]},{"body":{"nativeSrc":"7787:22:39","nodeType":"YulBlock","src":"7787:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7789:16:39","nodeType":"YulIdentifier","src":"7789:16:39"},"nativeSrc":"7789:18:39","nodeType":"YulFunctionCall","src":"7789:18:39"},"nativeSrc":"7789:18:39","nodeType":"YulExpressionStatement","src":"7789:18:39"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7730:10:39","nodeType":"YulIdentifier","src":"7730:10:39"},{"kind":"number","nativeSrc":"7742:18:39","nodeType":"YulLiteral","src":"7742:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7727:2:39","nodeType":"YulIdentifier","src":"7727:2:39"},"nativeSrc":"7727:34:39","nodeType":"YulFunctionCall","src":"7727:34:39"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7766:10:39","nodeType":"YulIdentifier","src":"7766:10:39"},{"name":"memPtr","nativeSrc":"7778:6:39","nodeType":"YulIdentifier","src":"7778:6:39"}],"functionName":{"name":"lt","nativeSrc":"7763:2:39","nodeType":"YulIdentifier","src":"7763:2:39"},"nativeSrc":"7763:22:39","nodeType":"YulFunctionCall","src":"7763:22:39"}],"functionName":{"name":"or","nativeSrc":"7724:2:39","nodeType":"YulIdentifier","src":"7724:2:39"},"nativeSrc":"7724:62:39","nodeType":"YulFunctionCall","src":"7724:62:39"},"nativeSrc":"7721:88:39","nodeType":"YulIf","src":"7721:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7825:2:39","nodeType":"YulLiteral","src":"7825:2:39","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7829:10:39","nodeType":"YulIdentifier","src":"7829:10:39"}],"functionName":{"name":"mstore","nativeSrc":"7818:6:39","nodeType":"YulIdentifier","src":"7818:6:39"},"nativeSrc":"7818:22:39","nodeType":"YulFunctionCall","src":"7818:22:39"},"nativeSrc":"7818:22:39","nodeType":"YulExpressionStatement","src":"7818:22:39"}]},"name":"finalize_allocation","nativeSrc":"7565:281:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7594:6:39","nodeType":"YulTypedName","src":"7594:6:39","type":""},{"name":"size","nativeSrc":"7602:4:39","nodeType":"YulTypedName","src":"7602:4:39","type":""}],"src":"7565:281:39"},{"body":{"nativeSrc":"7893:88:39","nodeType":"YulBlock","src":"7893:88:39","statements":[{"nativeSrc":"7903:30:39","nodeType":"YulAssignment","src":"7903:30:39","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"7913:18:39","nodeType":"YulIdentifier","src":"7913:18:39"},"nativeSrc":"7913:20:39","nodeType":"YulFunctionCall","src":"7913:20:39"},"variableNames":[{"name":"memPtr","nativeSrc":"7903:6:39","nodeType":"YulIdentifier","src":"7903:6:39"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"7962:6:39","nodeType":"YulIdentifier","src":"7962:6:39"},{"name":"size","nativeSrc":"7970:4:39","nodeType":"YulIdentifier","src":"7970:4:39"}],"functionName":{"name":"finalize_allocation","nativeSrc":"7942:19:39","nodeType":"YulIdentifier","src":"7942:19:39"},"nativeSrc":"7942:33:39","nodeType":"YulFunctionCall","src":"7942:33:39"},"nativeSrc":"7942:33:39","nodeType":"YulExpressionStatement","src":"7942:33:39"}]},"name":"allocate_memory","nativeSrc":"7852:129:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"7877:4:39","nodeType":"YulTypedName","src":"7877:4:39","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"7886:6:39","nodeType":"YulTypedName","src":"7886:6:39","type":""}],"src":"7852:129:39"},{"body":{"nativeSrc":"8053:241:39","nodeType":"YulBlock","src":"8053:241:39","statements":[{"body":{"nativeSrc":"8158:22:39","nodeType":"YulBlock","src":"8158:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8160:16:39","nodeType":"YulIdentifier","src":"8160:16:39"},"nativeSrc":"8160:18:39","nodeType":"YulFunctionCall","src":"8160:18:39"},"nativeSrc":"8160:18:39","nodeType":"YulExpressionStatement","src":"8160:18:39"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8130:6:39","nodeType":"YulIdentifier","src":"8130:6:39"},{"kind":"number","nativeSrc":"8138:18:39","nodeType":"YulLiteral","src":"8138:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8127:2:39","nodeType":"YulIdentifier","src":"8127:2:39"},"nativeSrc":"8127:30:39","nodeType":"YulFunctionCall","src":"8127:30:39"},"nativeSrc":"8124:56:39","nodeType":"YulIf","src":"8124:56:39"},{"nativeSrc":"8190:37:39","nodeType":"YulAssignment","src":"8190:37:39","value":{"arguments":[{"name":"length","nativeSrc":"8220:6:39","nodeType":"YulIdentifier","src":"8220:6:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8198:21:39","nodeType":"YulIdentifier","src":"8198:21:39"},"nativeSrc":"8198:29:39","nodeType":"YulFunctionCall","src":"8198:29:39"},"variableNames":[{"name":"size","nativeSrc":"8190:4:39","nodeType":"YulIdentifier","src":"8190:4:39"}]},{"nativeSrc":"8264:23:39","nodeType":"YulAssignment","src":"8264:23:39","value":{"arguments":[{"name":"size","nativeSrc":"8276:4:39","nodeType":"YulIdentifier","src":"8276:4:39"},{"kind":"number","nativeSrc":"8282:4:39","nodeType":"YulLiteral","src":"8282:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8272:3:39","nodeType":"YulIdentifier","src":"8272:3:39"},"nativeSrc":"8272:15:39","nodeType":"YulFunctionCall","src":"8272:15:39"},"variableNames":[{"name":"size","nativeSrc":"8264:4:39","nodeType":"YulIdentifier","src":"8264:4:39"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7987:307:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"8037:6:39","nodeType":"YulTypedName","src":"8037:6:39","type":""}],"returnVariables":[{"name":"size","nativeSrc":"8048:4:39","nodeType":"YulTypedName","src":"8048:4:39","type":""}],"src":"7987:307:39"},{"body":{"nativeSrc":"8364:82:39","nodeType":"YulBlock","src":"8364:82:39","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8387:3:39","nodeType":"YulIdentifier","src":"8387:3:39"},{"name":"src","nativeSrc":"8392:3:39","nodeType":"YulIdentifier","src":"8392:3:39"},{"name":"length","nativeSrc":"8397:6:39","nodeType":"YulIdentifier","src":"8397:6:39"}],"functionName":{"name":"calldatacopy","nativeSrc":"8374:12:39","nodeType":"YulIdentifier","src":"8374:12:39"},"nativeSrc":"8374:30:39","nodeType":"YulFunctionCall","src":"8374:30:39"},"nativeSrc":"8374:30:39","nodeType":"YulExpressionStatement","src":"8374:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8424:3:39","nodeType":"YulIdentifier","src":"8424:3:39"},{"name":"length","nativeSrc":"8429:6:39","nodeType":"YulIdentifier","src":"8429:6:39"}],"functionName":{"name":"add","nativeSrc":"8420:3:39","nodeType":"YulIdentifier","src":"8420:3:39"},"nativeSrc":"8420:16:39","nodeType":"YulFunctionCall","src":"8420:16:39"},{"kind":"number","nativeSrc":"8438:1:39","nodeType":"YulLiteral","src":"8438:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8413:6:39","nodeType":"YulIdentifier","src":"8413:6:39"},"nativeSrc":"8413:27:39","nodeType":"YulFunctionCall","src":"8413:27:39"},"nativeSrc":"8413:27:39","nodeType":"YulExpressionStatement","src":"8413:27:39"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8300:146:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8346:3:39","nodeType":"YulTypedName","src":"8346:3:39","type":""},{"name":"dst","nativeSrc":"8351:3:39","nodeType":"YulTypedName","src":"8351:3:39","type":""},{"name":"length","nativeSrc":"8356:6:39","nodeType":"YulTypedName","src":"8356:6:39","type":""}],"src":"8300:146:39"},{"body":{"nativeSrc":"8535:340:39","nodeType":"YulBlock","src":"8535:340:39","statements":[{"nativeSrc":"8545:74:39","nodeType":"YulAssignment","src":"8545:74:39","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8611:6:39","nodeType":"YulIdentifier","src":"8611:6:39"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8570:40:39","nodeType":"YulIdentifier","src":"8570:40:39"},"nativeSrc":"8570:48:39","nodeType":"YulFunctionCall","src":"8570:48:39"}],"functionName":{"name":"allocate_memory","nativeSrc":"8554:15:39","nodeType":"YulIdentifier","src":"8554:15:39"},"nativeSrc":"8554:65:39","nodeType":"YulFunctionCall","src":"8554:65:39"},"variableNames":[{"name":"array","nativeSrc":"8545:5:39","nodeType":"YulIdentifier","src":"8545:5:39"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8635:5:39","nodeType":"YulIdentifier","src":"8635:5:39"},{"name":"length","nativeSrc":"8642:6:39","nodeType":"YulIdentifier","src":"8642:6:39"}],"functionName":{"name":"mstore","nativeSrc":"8628:6:39","nodeType":"YulIdentifier","src":"8628:6:39"},"nativeSrc":"8628:21:39","nodeType":"YulFunctionCall","src":"8628:21:39"},"nativeSrc":"8628:21:39","nodeType":"YulExpressionStatement","src":"8628:21:39"},{"nativeSrc":"8658:27:39","nodeType":"YulVariableDeclaration","src":"8658:27:39","value":{"arguments":[{"name":"array","nativeSrc":"8673:5:39","nodeType":"YulIdentifier","src":"8673:5:39"},{"kind":"number","nativeSrc":"8680:4:39","nodeType":"YulLiteral","src":"8680:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8669:3:39","nodeType":"YulIdentifier","src":"8669:3:39"},"nativeSrc":"8669:16:39","nodeType":"YulFunctionCall","src":"8669:16:39"},"variables":[{"name":"dst","nativeSrc":"8662:3:39","nodeType":"YulTypedName","src":"8662:3:39","type":""}]},{"body":{"nativeSrc":"8723:83:39","nodeType":"YulBlock","src":"8723:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8725:77:39","nodeType":"YulIdentifier","src":"8725:77:39"},"nativeSrc":"8725:79:39","nodeType":"YulFunctionCall","src":"8725:79:39"},"nativeSrc":"8725:79:39","nodeType":"YulExpressionStatement","src":"8725:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8704:3:39","nodeType":"YulIdentifier","src":"8704:3:39"},{"name":"length","nativeSrc":"8709:6:39","nodeType":"YulIdentifier","src":"8709:6:39"}],"functionName":{"name":"add","nativeSrc":"8700:3:39","nodeType":"YulIdentifier","src":"8700:3:39"},"nativeSrc":"8700:16:39","nodeType":"YulFunctionCall","src":"8700:16:39"},{"name":"end","nativeSrc":"8718:3:39","nodeType":"YulIdentifier","src":"8718:3:39"}],"functionName":{"name":"gt","nativeSrc":"8697:2:39","nodeType":"YulIdentifier","src":"8697:2:39"},"nativeSrc":"8697:25:39","nodeType":"YulFunctionCall","src":"8697:25:39"},"nativeSrc":"8694:112:39","nodeType":"YulIf","src":"8694:112:39"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8852:3:39","nodeType":"YulIdentifier","src":"8852:3:39"},{"name":"dst","nativeSrc":"8857:3:39","nodeType":"YulIdentifier","src":"8857:3:39"},{"name":"length","nativeSrc":"8862:6:39","nodeType":"YulIdentifier","src":"8862:6:39"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8815:36:39","nodeType":"YulIdentifier","src":"8815:36:39"},"nativeSrc":"8815:54:39","nodeType":"YulFunctionCall","src":"8815:54:39"},"nativeSrc":"8815:54:39","nodeType":"YulExpressionStatement","src":"8815:54:39"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8452:423:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8508:3:39","nodeType":"YulTypedName","src":"8508:3:39","type":""},{"name":"length","nativeSrc":"8513:6:39","nodeType":"YulTypedName","src":"8513:6:39","type":""},{"name":"end","nativeSrc":"8521:3:39","nodeType":"YulTypedName","src":"8521:3:39","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8529:5:39","nodeType":"YulTypedName","src":"8529:5:39","type":""}],"src":"8452:423:39"},{"body":{"nativeSrc":"8955:277:39","nodeType":"YulBlock","src":"8955:277:39","statements":[{"body":{"nativeSrc":"9004:83:39","nodeType":"YulBlock","src":"9004:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"9006:77:39","nodeType":"YulIdentifier","src":"9006:77:39"},"nativeSrc":"9006:79:39","nodeType":"YulFunctionCall","src":"9006:79:39"},"nativeSrc":"9006:79:39","nodeType":"YulExpressionStatement","src":"9006:79:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8983:6:39","nodeType":"YulIdentifier","src":"8983:6:39"},{"kind":"number","nativeSrc":"8991:4:39","nodeType":"YulLiteral","src":"8991:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8979:3:39","nodeType":"YulIdentifier","src":"8979:3:39"},"nativeSrc":"8979:17:39","nodeType":"YulFunctionCall","src":"8979:17:39"},{"name":"end","nativeSrc":"8998:3:39","nodeType":"YulIdentifier","src":"8998:3:39"}],"functionName":{"name":"slt","nativeSrc":"8975:3:39","nodeType":"YulIdentifier","src":"8975:3:39"},"nativeSrc":"8975:27:39","nodeType":"YulFunctionCall","src":"8975:27:39"}],"functionName":{"name":"iszero","nativeSrc":"8968:6:39","nodeType":"YulIdentifier","src":"8968:6:39"},"nativeSrc":"8968:35:39","nodeType":"YulFunctionCall","src":"8968:35:39"},"nativeSrc":"8965:122:39","nodeType":"YulIf","src":"8965:122:39"},{"nativeSrc":"9096:34:39","nodeType":"YulVariableDeclaration","src":"9096:34:39","value":{"arguments":[{"name":"offset","nativeSrc":"9123:6:39","nodeType":"YulIdentifier","src":"9123:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"9110:12:39","nodeType":"YulIdentifier","src":"9110:12:39"},"nativeSrc":"9110:20:39","nodeType":"YulFunctionCall","src":"9110:20:39"},"variables":[{"name":"length","nativeSrc":"9100:6:39","nodeType":"YulTypedName","src":"9100:6:39","type":""}]},{"nativeSrc":"9139:87:39","nodeType":"YulAssignment","src":"9139:87:39","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9199:6:39","nodeType":"YulIdentifier","src":"9199:6:39"},{"kind":"number","nativeSrc":"9207:4:39","nodeType":"YulLiteral","src":"9207:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9195:3:39","nodeType":"YulIdentifier","src":"9195:3:39"},"nativeSrc":"9195:17:39","nodeType":"YulFunctionCall","src":"9195:17:39"},{"name":"length","nativeSrc":"9214:6:39","nodeType":"YulIdentifier","src":"9214:6:39"},{"name":"end","nativeSrc":"9222:3:39","nodeType":"YulIdentifier","src":"9222:3:39"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9148:46:39","nodeType":"YulIdentifier","src":"9148:46:39"},"nativeSrc":"9148:78:39","nodeType":"YulFunctionCall","src":"9148:78:39"},"variableNames":[{"name":"array","nativeSrc":"9139:5:39","nodeType":"YulIdentifier","src":"9139:5:39"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8894:338:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8933:6:39","nodeType":"YulTypedName","src":"8933:6:39","type":""},{"name":"end","nativeSrc":"8941:3:39","nodeType":"YulTypedName","src":"8941:3:39","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8949:5:39","nodeType":"YulTypedName","src":"8949:5:39","type":""}],"src":"8894:338:39"},{"body":{"nativeSrc":"9330:560:39","nodeType":"YulBlock","src":"9330:560:39","statements":[{"body":{"nativeSrc":"9376:83:39","nodeType":"YulBlock","src":"9376:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9378:77:39","nodeType":"YulIdentifier","src":"9378:77:39"},"nativeSrc":"9378:79:39","nodeType":"YulFunctionCall","src":"9378:79:39"},"nativeSrc":"9378:79:39","nodeType":"YulExpressionStatement","src":"9378:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9351:7:39","nodeType":"YulIdentifier","src":"9351:7:39"},{"name":"headStart","nativeSrc":"9360:9:39","nodeType":"YulIdentifier","src":"9360:9:39"}],"functionName":{"name":"sub","nativeSrc":"9347:3:39","nodeType":"YulIdentifier","src":"9347:3:39"},"nativeSrc":"9347:23:39","nodeType":"YulFunctionCall","src":"9347:23:39"},{"kind":"number","nativeSrc":"9372:2:39","nodeType":"YulLiteral","src":"9372:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9343:3:39","nodeType":"YulIdentifier","src":"9343:3:39"},"nativeSrc":"9343:32:39","nodeType":"YulFunctionCall","src":"9343:32:39"},"nativeSrc":"9340:119:39","nodeType":"YulIf","src":"9340:119:39"},{"nativeSrc":"9469:117:39","nodeType":"YulBlock","src":"9469:117:39","statements":[{"nativeSrc":"9484:15:39","nodeType":"YulVariableDeclaration","src":"9484:15:39","value":{"kind":"number","nativeSrc":"9498:1:39","nodeType":"YulLiteral","src":"9498:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9488:6:39","nodeType":"YulTypedName","src":"9488:6:39","type":""}]},{"nativeSrc":"9513:63:39","nodeType":"YulAssignment","src":"9513:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9548:9:39","nodeType":"YulIdentifier","src":"9548:9:39"},{"name":"offset","nativeSrc":"9559:6:39","nodeType":"YulIdentifier","src":"9559:6:39"}],"functionName":{"name":"add","nativeSrc":"9544:3:39","nodeType":"YulIdentifier","src":"9544:3:39"},"nativeSrc":"9544:22:39","nodeType":"YulFunctionCall","src":"9544:22:39"},{"name":"dataEnd","nativeSrc":"9568:7:39","nodeType":"YulIdentifier","src":"9568:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9523:20:39","nodeType":"YulIdentifier","src":"9523:20:39"},"nativeSrc":"9523:53:39","nodeType":"YulFunctionCall","src":"9523:53:39"},"variableNames":[{"name":"value0","nativeSrc":"9513:6:39","nodeType":"YulIdentifier","src":"9513:6:39"}]}]},{"nativeSrc":"9596:287:39","nodeType":"YulBlock","src":"9596:287:39","statements":[{"nativeSrc":"9611:46:39","nodeType":"YulVariableDeclaration","src":"9611:46:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9642:9:39","nodeType":"YulIdentifier","src":"9642:9:39"},{"kind":"number","nativeSrc":"9653:2:39","nodeType":"YulLiteral","src":"9653:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9638:3:39","nodeType":"YulIdentifier","src":"9638:3:39"},"nativeSrc":"9638:18:39","nodeType":"YulFunctionCall","src":"9638:18:39"}],"functionName":{"name":"calldataload","nativeSrc":"9625:12:39","nodeType":"YulIdentifier","src":"9625:12:39"},"nativeSrc":"9625:32:39","nodeType":"YulFunctionCall","src":"9625:32:39"},"variables":[{"name":"offset","nativeSrc":"9615:6:39","nodeType":"YulTypedName","src":"9615:6:39","type":""}]},{"body":{"nativeSrc":"9704:83:39","nodeType":"YulBlock","src":"9704:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9706:77:39","nodeType":"YulIdentifier","src":"9706:77:39"},"nativeSrc":"9706:79:39","nodeType":"YulFunctionCall","src":"9706:79:39"},"nativeSrc":"9706:79:39","nodeType":"YulExpressionStatement","src":"9706:79:39"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9676:6:39","nodeType":"YulIdentifier","src":"9676:6:39"},{"kind":"number","nativeSrc":"9684:18:39","nodeType":"YulLiteral","src":"9684:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9673:2:39","nodeType":"YulIdentifier","src":"9673:2:39"},"nativeSrc":"9673:30:39","nodeType":"YulFunctionCall","src":"9673:30:39"},"nativeSrc":"9670:117:39","nodeType":"YulIf","src":"9670:117:39"},{"nativeSrc":"9801:72:39","nodeType":"YulAssignment","src":"9801:72:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9845:9:39","nodeType":"YulIdentifier","src":"9845:9:39"},{"name":"offset","nativeSrc":"9856:6:39","nodeType":"YulIdentifier","src":"9856:6:39"}],"functionName":{"name":"add","nativeSrc":"9841:3:39","nodeType":"YulIdentifier","src":"9841:3:39"},"nativeSrc":"9841:22:39","nodeType":"YulFunctionCall","src":"9841:22:39"},{"name":"dataEnd","nativeSrc":"9865:7:39","nodeType":"YulIdentifier","src":"9865:7:39"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9811:29:39","nodeType":"YulIdentifier","src":"9811:29:39"},"nativeSrc":"9811:62:39","nodeType":"YulFunctionCall","src":"9811:62:39"},"variableNames":[{"name":"value1","nativeSrc":"9801:6:39","nodeType":"YulIdentifier","src":"9801:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"9238:652:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9292:9:39","nodeType":"YulTypedName","src":"9292:9:39","type":""},{"name":"dataEnd","nativeSrc":"9303:7:39","nodeType":"YulTypedName","src":"9303:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9315:6:39","nodeType":"YulTypedName","src":"9315:6:39","type":""},{"name":"value1","nativeSrc":"9323:6:39","nodeType":"YulTypedName","src":"9323:6:39","type":""}],"src":"9238:652:39"},{"body":{"nativeSrc":"9962:263:39","nodeType":"YulBlock","src":"9962:263:39","statements":[{"body":{"nativeSrc":"10008:83:39","nodeType":"YulBlock","src":"10008:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10010:77:39","nodeType":"YulIdentifier","src":"10010:77:39"},"nativeSrc":"10010:79:39","nodeType":"YulFunctionCall","src":"10010:79:39"},"nativeSrc":"10010:79:39","nodeType":"YulExpressionStatement","src":"10010:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9983:7:39","nodeType":"YulIdentifier","src":"9983:7:39"},{"name":"headStart","nativeSrc":"9992:9:39","nodeType":"YulIdentifier","src":"9992:9:39"}],"functionName":{"name":"sub","nativeSrc":"9979:3:39","nodeType":"YulIdentifier","src":"9979:3:39"},"nativeSrc":"9979:23:39","nodeType":"YulFunctionCall","src":"9979:23:39"},{"kind":"number","nativeSrc":"10004:2:39","nodeType":"YulLiteral","src":"10004:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9975:3:39","nodeType":"YulIdentifier","src":"9975:3:39"},"nativeSrc":"9975:32:39","nodeType":"YulFunctionCall","src":"9975:32:39"},"nativeSrc":"9972:119:39","nodeType":"YulIf","src":"9972:119:39"},{"nativeSrc":"10101:117:39","nodeType":"YulBlock","src":"10101:117:39","statements":[{"nativeSrc":"10116:15:39","nodeType":"YulVariableDeclaration","src":"10116:15:39","value":{"kind":"number","nativeSrc":"10130:1:39","nodeType":"YulLiteral","src":"10130:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10120:6:39","nodeType":"YulTypedName","src":"10120:6:39","type":""}]},{"nativeSrc":"10145:63:39","nodeType":"YulAssignment","src":"10145:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10180:9:39","nodeType":"YulIdentifier","src":"10180:9:39"},{"name":"offset","nativeSrc":"10191:6:39","nodeType":"YulIdentifier","src":"10191:6:39"}],"functionName":{"name":"add","nativeSrc":"10176:3:39","nodeType":"YulIdentifier","src":"10176:3:39"},"nativeSrc":"10176:22:39","nodeType":"YulFunctionCall","src":"10176:22:39"},{"name":"dataEnd","nativeSrc":"10200:7:39","nodeType":"YulIdentifier","src":"10200:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10155:20:39","nodeType":"YulIdentifier","src":"10155:20:39"},"nativeSrc":"10155:53:39","nodeType":"YulFunctionCall","src":"10155:53:39"},"variableNames":[{"name":"value0","nativeSrc":"10145:6:39","nodeType":"YulIdentifier","src":"10145:6:39"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"9896:329:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9932:9:39","nodeType":"YulTypedName","src":"9932:9:39","type":""},{"name":"dataEnd","nativeSrc":"9943:7:39","nodeType":"YulTypedName","src":"9943:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9955:6:39","nodeType":"YulTypedName","src":"9955:6:39","type":""}],"src":"9896:329:39"},{"body":{"nativeSrc":"10314:391:39","nodeType":"YulBlock","src":"10314:391:39","statements":[{"body":{"nativeSrc":"10360:83:39","nodeType":"YulBlock","src":"10360:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10362:77:39","nodeType":"YulIdentifier","src":"10362:77:39"},"nativeSrc":"10362:79:39","nodeType":"YulFunctionCall","src":"10362:79:39"},"nativeSrc":"10362:79:39","nodeType":"YulExpressionStatement","src":"10362:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10335:7:39","nodeType":"YulIdentifier","src":"10335:7:39"},{"name":"headStart","nativeSrc":"10344:9:39","nodeType":"YulIdentifier","src":"10344:9:39"}],"functionName":{"name":"sub","nativeSrc":"10331:3:39","nodeType":"YulIdentifier","src":"10331:3:39"},"nativeSrc":"10331:23:39","nodeType":"YulFunctionCall","src":"10331:23:39"},{"kind":"number","nativeSrc":"10356:2:39","nodeType":"YulLiteral","src":"10356:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10327:3:39","nodeType":"YulIdentifier","src":"10327:3:39"},"nativeSrc":"10327:32:39","nodeType":"YulFunctionCall","src":"10327:32:39"},"nativeSrc":"10324:119:39","nodeType":"YulIf","src":"10324:119:39"},{"nativeSrc":"10453:117:39","nodeType":"YulBlock","src":"10453:117:39","statements":[{"nativeSrc":"10468:15:39","nodeType":"YulVariableDeclaration","src":"10468:15:39","value":{"kind":"number","nativeSrc":"10482:1:39","nodeType":"YulLiteral","src":"10482:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10472:6:39","nodeType":"YulTypedName","src":"10472:6:39","type":""}]},{"nativeSrc":"10497:63:39","nodeType":"YulAssignment","src":"10497:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10532:9:39","nodeType":"YulIdentifier","src":"10532:9:39"},{"name":"offset","nativeSrc":"10543:6:39","nodeType":"YulIdentifier","src":"10543:6:39"}],"functionName":{"name":"add","nativeSrc":"10528:3:39","nodeType":"YulIdentifier","src":"10528:3:39"},"nativeSrc":"10528:22:39","nodeType":"YulFunctionCall","src":"10528:22:39"},{"name":"dataEnd","nativeSrc":"10552:7:39","nodeType":"YulIdentifier","src":"10552:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10507:20:39","nodeType":"YulIdentifier","src":"10507:20:39"},"nativeSrc":"10507:53:39","nodeType":"YulFunctionCall","src":"10507:53:39"},"variableNames":[{"name":"value0","nativeSrc":"10497:6:39","nodeType":"YulIdentifier","src":"10497:6:39"}]}]},{"nativeSrc":"10580:118:39","nodeType":"YulBlock","src":"10580:118:39","statements":[{"nativeSrc":"10595:16:39","nodeType":"YulVariableDeclaration","src":"10595:16:39","value":{"kind":"number","nativeSrc":"10609:2:39","nodeType":"YulLiteral","src":"10609:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10599:6:39","nodeType":"YulTypedName","src":"10599:6:39","type":""}]},{"nativeSrc":"10625:63:39","nodeType":"YulAssignment","src":"10625:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10660:9:39","nodeType":"YulIdentifier","src":"10660:9:39"},{"name":"offset","nativeSrc":"10671:6:39","nodeType":"YulIdentifier","src":"10671:6:39"}],"functionName":{"name":"add","nativeSrc":"10656:3:39","nodeType":"YulIdentifier","src":"10656:3:39"},"nativeSrc":"10656:22:39","nodeType":"YulFunctionCall","src":"10656:22:39"},{"name":"dataEnd","nativeSrc":"10680:7:39","nodeType":"YulIdentifier","src":"10680:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10635:20:39","nodeType":"YulIdentifier","src":"10635:20:39"},"nativeSrc":"10635:53:39","nodeType":"YulFunctionCall","src":"10635:53:39"},"variableNames":[{"name":"value1","nativeSrc":"10625:6:39","nodeType":"YulIdentifier","src":"10625:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10231:474:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10276:9:39","nodeType":"YulTypedName","src":"10276:9:39","type":""},{"name":"dataEnd","nativeSrc":"10287:7:39","nodeType":"YulTypedName","src":"10287:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10299:6:39","nodeType":"YulTypedName","src":"10299:6:39","type":""},{"name":"value1","nativeSrc":"10307:6:39","nodeType":"YulTypedName","src":"10307:6:39","type":""}],"src":"10231:474:39"},{"body":{"nativeSrc":"10739:152:39","nodeType":"YulBlock","src":"10739:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10756:1:39","nodeType":"YulLiteral","src":"10756:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"10759:77:39","nodeType":"YulLiteral","src":"10759:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10749:6:39","nodeType":"YulIdentifier","src":"10749:6:39"},"nativeSrc":"10749:88:39","nodeType":"YulFunctionCall","src":"10749:88:39"},"nativeSrc":"10749:88:39","nodeType":"YulExpressionStatement","src":"10749:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10853:1:39","nodeType":"YulLiteral","src":"10853:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"10856:4:39","nodeType":"YulLiteral","src":"10856:4:39","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"10846:6:39","nodeType":"YulIdentifier","src":"10846:6:39"},"nativeSrc":"10846:15:39","nodeType":"YulFunctionCall","src":"10846:15:39"},"nativeSrc":"10846:15:39","nodeType":"YulExpressionStatement","src":"10846:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10877:1:39","nodeType":"YulLiteral","src":"10877:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"10880:4:39","nodeType":"YulLiteral","src":"10880:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10870:6:39","nodeType":"YulIdentifier","src":"10870:6:39"},"nativeSrc":"10870:15:39","nodeType":"YulFunctionCall","src":"10870:15:39"},"nativeSrc":"10870:15:39","nodeType":"YulExpressionStatement","src":"10870:15:39"}]},"name":"panic_error_0x22","nativeSrc":"10711:180:39","nodeType":"YulFunctionDefinition","src":"10711:180:39"},{"body":{"nativeSrc":"10948:269:39","nodeType":"YulBlock","src":"10948:269:39","statements":[{"nativeSrc":"10958:22:39","nodeType":"YulAssignment","src":"10958:22:39","value":{"arguments":[{"name":"data","nativeSrc":"10972:4:39","nodeType":"YulIdentifier","src":"10972:4:39"},{"kind":"number","nativeSrc":"10978:1:39","nodeType":"YulLiteral","src":"10978:1:39","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"10968:3:39","nodeType":"YulIdentifier","src":"10968:3:39"},"nativeSrc":"10968:12:39","nodeType":"YulFunctionCall","src":"10968:12:39"},"variableNames":[{"name":"length","nativeSrc":"10958:6:39","nodeType":"YulIdentifier","src":"10958:6:39"}]},{"nativeSrc":"10989:38:39","nodeType":"YulVariableDeclaration","src":"10989:38:39","value":{"arguments":[{"name":"data","nativeSrc":"11019:4:39","nodeType":"YulIdentifier","src":"11019:4:39"},{"kind":"number","nativeSrc":"11025:1:39","nodeType":"YulLiteral","src":"11025:1:39","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11015:3:39","nodeType":"YulIdentifier","src":"11015:3:39"},"nativeSrc":"11015:12:39","nodeType":"YulFunctionCall","src":"11015:12:39"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"10993:18:39","nodeType":"YulTypedName","src":"10993:18:39","type":""}]},{"body":{"nativeSrc":"11066:51:39","nodeType":"YulBlock","src":"11066:51:39","statements":[{"nativeSrc":"11080:27:39","nodeType":"YulAssignment","src":"11080:27:39","value":{"arguments":[{"name":"length","nativeSrc":"11094:6:39","nodeType":"YulIdentifier","src":"11094:6:39"},{"kind":"number","nativeSrc":"11102:4:39","nodeType":"YulLiteral","src":"11102:4:39","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11090:3:39","nodeType":"YulIdentifier","src":"11090:3:39"},"nativeSrc":"11090:17:39","nodeType":"YulFunctionCall","src":"11090:17:39"},"variableNames":[{"name":"length","nativeSrc":"11080:6:39","nodeType":"YulIdentifier","src":"11080:6:39"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11046:18:39","nodeType":"YulIdentifier","src":"11046:18:39"}],"functionName":{"name":"iszero","nativeSrc":"11039:6:39","nodeType":"YulIdentifier","src":"11039:6:39"},"nativeSrc":"11039:26:39","nodeType":"YulFunctionCall","src":"11039:26:39"},"nativeSrc":"11036:81:39","nodeType":"YulIf","src":"11036:81:39"},{"body":{"nativeSrc":"11169:42:39","nodeType":"YulBlock","src":"11169:42:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11183:16:39","nodeType":"YulIdentifier","src":"11183:16:39"},"nativeSrc":"11183:18:39","nodeType":"YulFunctionCall","src":"11183:18:39"},"nativeSrc":"11183:18:39","nodeType":"YulExpressionStatement","src":"11183:18:39"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11133:18:39","nodeType":"YulIdentifier","src":"11133:18:39"},{"arguments":[{"name":"length","nativeSrc":"11156:6:39","nodeType":"YulIdentifier","src":"11156:6:39"},{"kind":"number","nativeSrc":"11164:2:39","nodeType":"YulLiteral","src":"11164:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11153:2:39","nodeType":"YulIdentifier","src":"11153:2:39"},"nativeSrc":"11153:14:39","nodeType":"YulFunctionCall","src":"11153:14:39"}],"functionName":{"name":"eq","nativeSrc":"11130:2:39","nodeType":"YulIdentifier","src":"11130:2:39"},"nativeSrc":"11130:38:39","nodeType":"YulFunctionCall","src":"11130:38:39"},"nativeSrc":"11127:84:39","nodeType":"YulIf","src":"11127:84:39"}]},"name":"extract_byte_array_length","nativeSrc":"10897:320:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10932:4:39","nodeType":"YulTypedName","src":"10932:4:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10941:6:39","nodeType":"YulTypedName","src":"10941:6:39","type":""}],"src":"10897:320:39"},{"body":{"nativeSrc":"11276:32:39","nodeType":"YulBlock","src":"11276:32:39","statements":[{"nativeSrc":"11286:16:39","nodeType":"YulAssignment","src":"11286:16:39","value":{"name":"value","nativeSrc":"11297:5:39","nodeType":"YulIdentifier","src":"11297:5:39"},"variableNames":[{"name":"cleaned","nativeSrc":"11286:7:39","nodeType":"YulIdentifier","src":"11286:7:39"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"11223:85:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11258:5:39","nodeType":"YulTypedName","src":"11258:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"11268:7:39","nodeType":"YulTypedName","src":"11268:7:39","type":""}],"src":"11223:85:39"},{"body":{"nativeSrc":"11358:57:39","nodeType":"YulBlock","src":"11358:57:39","statements":[{"nativeSrc":"11368:41:39","nodeType":"YulAssignment","src":"11368:41:39","value":{"arguments":[{"name":"value","nativeSrc":"11383:5:39","nodeType":"YulIdentifier","src":"11383:5:39"},{"kind":"number","nativeSrc":"11390:18:39","nodeType":"YulLiteral","src":"11390:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11379:3:39","nodeType":"YulIdentifier","src":"11379:3:39"},"nativeSrc":"11379:30:39","nodeType":"YulFunctionCall","src":"11379:30:39"},"variableNames":[{"name":"cleaned","nativeSrc":"11368:7:39","nodeType":"YulIdentifier","src":"11368:7:39"}]}]},"name":"cleanup_t_uint64","nativeSrc":"11314:101:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11340:5:39","nodeType":"YulTypedName","src":"11340:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"11350:7:39","nodeType":"YulTypedName","src":"11350:7:39","type":""}],"src":"11314:101:39"},{"body":{"nativeSrc":"11453:28:39","nodeType":"YulBlock","src":"11453:28:39","statements":[{"nativeSrc":"11463:12:39","nodeType":"YulAssignment","src":"11463:12:39","value":{"name":"value","nativeSrc":"11470:5:39","nodeType":"YulIdentifier","src":"11470:5:39"},"variableNames":[{"name":"ret","nativeSrc":"11463:3:39","nodeType":"YulIdentifier","src":"11463:3:39"}]}]},"name":"identity","nativeSrc":"11421:60:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11439:5:39","nodeType":"YulTypedName","src":"11439:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"11449:3:39","nodeType":"YulTypedName","src":"11449:3:39","type":""}],"src":"11421:60:39"},{"body":{"nativeSrc":"11554:89:39","nodeType":"YulBlock","src":"11554:89:39","statements":[{"nativeSrc":"11564:73:39","nodeType":"YulAssignment","src":"11564:73:39","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11629:5:39","nodeType":"YulIdentifier","src":"11629:5:39"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"11603:25:39","nodeType":"YulIdentifier","src":"11603:25:39"},"nativeSrc":"11603:32:39","nodeType":"YulFunctionCall","src":"11603:32:39"}],"functionName":{"name":"identity","nativeSrc":"11594:8:39","nodeType":"YulIdentifier","src":"11594:8:39"},"nativeSrc":"11594:42:39","nodeType":"YulFunctionCall","src":"11594:42:39"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"11577:16:39","nodeType":"YulIdentifier","src":"11577:16:39"},"nativeSrc":"11577:60:39","nodeType":"YulFunctionCall","src":"11577:60:39"},"variableNames":[{"name":"converted","nativeSrc":"11564:9:39","nodeType":"YulIdentifier","src":"11564:9:39"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"11487:156:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11534:5:39","nodeType":"YulTypedName","src":"11534:5:39","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"11544:9:39","nodeType":"YulTypedName","src":"11544:9:39","type":""}],"src":"11487:156:39"},{"body":{"nativeSrc":"11721:73:39","nodeType":"YulBlock","src":"11721:73:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11738:3:39","nodeType":"YulIdentifier","src":"11738:3:39"},{"arguments":[{"name":"value","nativeSrc":"11781:5:39","nodeType":"YulIdentifier","src":"11781:5:39"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"11743:37:39","nodeType":"YulIdentifier","src":"11743:37:39"},"nativeSrc":"11743:44:39","nodeType":"YulFunctionCall","src":"11743:44:39"}],"functionName":{"name":"mstore","nativeSrc":"11731:6:39","nodeType":"YulIdentifier","src":"11731:6:39"},"nativeSrc":"11731:57:39","nodeType":"YulFunctionCall","src":"11731:57:39"},"nativeSrc":"11731:57:39","nodeType":"YulExpressionStatement","src":"11731:57:39"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"11649:145:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11709:5:39","nodeType":"YulTypedName","src":"11709:5:39","type":""},{"name":"pos","nativeSrc":"11716:3:39","nodeType":"YulTypedName","src":"11716:3:39","type":""}],"src":"11649:145:39"},{"body":{"nativeSrc":"11905:131:39","nodeType":"YulBlock","src":"11905:131:39","statements":[{"nativeSrc":"11915:26:39","nodeType":"YulAssignment","src":"11915:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"11927:9:39","nodeType":"YulIdentifier","src":"11927:9:39"},{"kind":"number","nativeSrc":"11938:2:39","nodeType":"YulLiteral","src":"11938:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11923:3:39","nodeType":"YulIdentifier","src":"11923:3:39"},"nativeSrc":"11923:18:39","nodeType":"YulFunctionCall","src":"11923:18:39"},"variableNames":[{"name":"tail","nativeSrc":"11915:4:39","nodeType":"YulIdentifier","src":"11915:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12002:6:39","nodeType":"YulIdentifier","src":"12002:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"12015:9:39","nodeType":"YulIdentifier","src":"12015:9:39"},{"kind":"number","nativeSrc":"12026:1:39","nodeType":"YulLiteral","src":"12026:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12011:3:39","nodeType":"YulIdentifier","src":"12011:3:39"},"nativeSrc":"12011:17:39","nodeType":"YulFunctionCall","src":"12011:17:39"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"11951:50:39","nodeType":"YulIdentifier","src":"11951:50:39"},"nativeSrc":"11951:78:39","nodeType":"YulFunctionCall","src":"11951:78:39"},"nativeSrc":"11951:78:39","nodeType":"YulExpressionStatement","src":"11951:78:39"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"11800:236:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11877:9:39","nodeType":"YulTypedName","src":"11877:9:39","type":""},{"name":"value0","nativeSrc":"11889:6:39","nodeType":"YulTypedName","src":"11889:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11900:4:39","nodeType":"YulTypedName","src":"11900:4:39","type":""}],"src":"11800:236:39"},{"body":{"nativeSrc":"12107:53:39","nodeType":"YulBlock","src":"12107:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12124:3:39","nodeType":"YulIdentifier","src":"12124:3:39"},{"arguments":[{"name":"value","nativeSrc":"12147:5:39","nodeType":"YulIdentifier","src":"12147:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"12129:17:39","nodeType":"YulIdentifier","src":"12129:17:39"},"nativeSrc":"12129:24:39","nodeType":"YulFunctionCall","src":"12129:24:39"}],"functionName":{"name":"mstore","nativeSrc":"12117:6:39","nodeType":"YulIdentifier","src":"12117:6:39"},"nativeSrc":"12117:37:39","nodeType":"YulFunctionCall","src":"12117:37:39"},"nativeSrc":"12117:37:39","nodeType":"YulExpressionStatement","src":"12117:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12042:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12095:5:39","nodeType":"YulTypedName","src":"12095:5:39","type":""},{"name":"pos","nativeSrc":"12102:3:39","nodeType":"YulTypedName","src":"12102:3:39","type":""}],"src":"12042:118:39"},{"body":{"nativeSrc":"12320:288:39","nodeType":"YulBlock","src":"12320:288:39","statements":[{"nativeSrc":"12330:26:39","nodeType":"YulAssignment","src":"12330:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"12342:9:39","nodeType":"YulIdentifier","src":"12342:9:39"},{"kind":"number","nativeSrc":"12353:2:39","nodeType":"YulLiteral","src":"12353:2:39","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12338:3:39","nodeType":"YulIdentifier","src":"12338:3:39"},"nativeSrc":"12338:18:39","nodeType":"YulFunctionCall","src":"12338:18:39"},"variableNames":[{"name":"tail","nativeSrc":"12330:4:39","nodeType":"YulIdentifier","src":"12330:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12410:6:39","nodeType":"YulIdentifier","src":"12410:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"12423:9:39","nodeType":"YulIdentifier","src":"12423:9:39"},{"kind":"number","nativeSrc":"12434:1:39","nodeType":"YulLiteral","src":"12434:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12419:3:39","nodeType":"YulIdentifier","src":"12419:3:39"},"nativeSrc":"12419:17:39","nodeType":"YulFunctionCall","src":"12419:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12366:43:39","nodeType":"YulIdentifier","src":"12366:43:39"},"nativeSrc":"12366:71:39","nodeType":"YulFunctionCall","src":"12366:71:39"},"nativeSrc":"12366:71:39","nodeType":"YulExpressionStatement","src":"12366:71:39"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12491:6:39","nodeType":"YulIdentifier","src":"12491:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"12504:9:39","nodeType":"YulIdentifier","src":"12504:9:39"},{"kind":"number","nativeSrc":"12515:2:39","nodeType":"YulLiteral","src":"12515:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12500:3:39","nodeType":"YulIdentifier","src":"12500:3:39"},"nativeSrc":"12500:18:39","nodeType":"YulFunctionCall","src":"12500:18:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12447:43:39","nodeType":"YulIdentifier","src":"12447:43:39"},"nativeSrc":"12447:72:39","nodeType":"YulFunctionCall","src":"12447:72:39"},"nativeSrc":"12447:72:39","nodeType":"YulExpressionStatement","src":"12447:72:39"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12573:6:39","nodeType":"YulIdentifier","src":"12573:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"12586:9:39","nodeType":"YulIdentifier","src":"12586:9:39"},{"kind":"number","nativeSrc":"12597:2:39","nodeType":"YulLiteral","src":"12597:2:39","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12582:3:39","nodeType":"YulIdentifier","src":"12582:3:39"},"nativeSrc":"12582:18:39","nodeType":"YulFunctionCall","src":"12582:18:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12529:43:39","nodeType":"YulIdentifier","src":"12529:43:39"},"nativeSrc":"12529:72:39","nodeType":"YulFunctionCall","src":"12529:72:39"},"nativeSrc":"12529:72:39","nodeType":"YulExpressionStatement","src":"12529:72:39"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12166:442:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12276:9:39","nodeType":"YulTypedName","src":"12276:9:39","type":""},{"name":"value2","nativeSrc":"12288:6:39","nodeType":"YulTypedName","src":"12288:6:39","type":""},{"name":"value1","nativeSrc":"12296:6:39","nodeType":"YulTypedName","src":"12296:6:39","type":""},{"name":"value0","nativeSrc":"12304:6:39","nodeType":"YulTypedName","src":"12304:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12315:4:39","nodeType":"YulTypedName","src":"12315:4:39","type":""}],"src":"12166:442:39"},{"body":{"nativeSrc":"12712:124:39","nodeType":"YulBlock","src":"12712:124:39","statements":[{"nativeSrc":"12722:26:39","nodeType":"YulAssignment","src":"12722:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"12734:9:39","nodeType":"YulIdentifier","src":"12734:9:39"},{"kind":"number","nativeSrc":"12745:2:39","nodeType":"YulLiteral","src":"12745:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12730:3:39","nodeType":"YulIdentifier","src":"12730:3:39"},"nativeSrc":"12730:18:39","nodeType":"YulFunctionCall","src":"12730:18:39"},"variableNames":[{"name":"tail","nativeSrc":"12722:4:39","nodeType":"YulIdentifier","src":"12722:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12802:6:39","nodeType":"YulIdentifier","src":"12802:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"12815:9:39","nodeType":"YulIdentifier","src":"12815:9:39"},{"kind":"number","nativeSrc":"12826:1:39","nodeType":"YulLiteral","src":"12826:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12811:3:39","nodeType":"YulIdentifier","src":"12811:3:39"},"nativeSrc":"12811:17:39","nodeType":"YulFunctionCall","src":"12811:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12758:43:39","nodeType":"YulIdentifier","src":"12758:43:39"},"nativeSrc":"12758:71:39","nodeType":"YulFunctionCall","src":"12758:71:39"},"nativeSrc":"12758:71:39","nodeType":"YulExpressionStatement","src":"12758:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"12614:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12684:9:39","nodeType":"YulTypedName","src":"12684:9:39","type":""},{"name":"value0","nativeSrc":"12696:6:39","nodeType":"YulTypedName","src":"12696:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12707:4:39","nodeType":"YulTypedName","src":"12707:4:39","type":""}],"src":"12614:222:39"},{"body":{"nativeSrc":"12905:80:39","nodeType":"YulBlock","src":"12905:80:39","statements":[{"nativeSrc":"12915:22:39","nodeType":"YulAssignment","src":"12915:22:39","value":{"arguments":[{"name":"offset","nativeSrc":"12930:6:39","nodeType":"YulIdentifier","src":"12930:6:39"}],"functionName":{"name":"mload","nativeSrc":"12924:5:39","nodeType":"YulIdentifier","src":"12924:5:39"},"nativeSrc":"12924:13:39","nodeType":"YulFunctionCall","src":"12924:13:39"},"variableNames":[{"name":"value","nativeSrc":"12915:5:39","nodeType":"YulIdentifier","src":"12915:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12973:5:39","nodeType":"YulIdentifier","src":"12973:5:39"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"12946:26:39","nodeType":"YulIdentifier","src":"12946:26:39"},"nativeSrc":"12946:33:39","nodeType":"YulFunctionCall","src":"12946:33:39"},"nativeSrc":"12946:33:39","nodeType":"YulExpressionStatement","src":"12946:33:39"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"12842:143:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12883:6:39","nodeType":"YulTypedName","src":"12883:6:39","type":""},{"name":"end","nativeSrc":"12891:3:39","nodeType":"YulTypedName","src":"12891:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12899:5:39","nodeType":"YulTypedName","src":"12899:5:39","type":""}],"src":"12842:143:39"},{"body":{"nativeSrc":"13068:274:39","nodeType":"YulBlock","src":"13068:274:39","statements":[{"body":{"nativeSrc":"13114:83:39","nodeType":"YulBlock","src":"13114:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13116:77:39","nodeType":"YulIdentifier","src":"13116:77:39"},"nativeSrc":"13116:79:39","nodeType":"YulFunctionCall","src":"13116:79:39"},"nativeSrc":"13116:79:39","nodeType":"YulExpressionStatement","src":"13116:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13089:7:39","nodeType":"YulIdentifier","src":"13089:7:39"},{"name":"headStart","nativeSrc":"13098:9:39","nodeType":"YulIdentifier","src":"13098:9:39"}],"functionName":{"name":"sub","nativeSrc":"13085:3:39","nodeType":"YulIdentifier","src":"13085:3:39"},"nativeSrc":"13085:23:39","nodeType":"YulFunctionCall","src":"13085:23:39"},{"kind":"number","nativeSrc":"13110:2:39","nodeType":"YulLiteral","src":"13110:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13081:3:39","nodeType":"YulIdentifier","src":"13081:3:39"},"nativeSrc":"13081:32:39","nodeType":"YulFunctionCall","src":"13081:32:39"},"nativeSrc":"13078:119:39","nodeType":"YulIf","src":"13078:119:39"},{"nativeSrc":"13207:128:39","nodeType":"YulBlock","src":"13207:128:39","statements":[{"nativeSrc":"13222:15:39","nodeType":"YulVariableDeclaration","src":"13222:15:39","value":{"kind":"number","nativeSrc":"13236:1:39","nodeType":"YulLiteral","src":"13236:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13226:6:39","nodeType":"YulTypedName","src":"13226:6:39","type":""}]},{"nativeSrc":"13251:74:39","nodeType":"YulAssignment","src":"13251:74:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13297:9:39","nodeType":"YulIdentifier","src":"13297:9:39"},{"name":"offset","nativeSrc":"13308:6:39","nodeType":"YulIdentifier","src":"13308:6:39"}],"functionName":{"name":"add","nativeSrc":"13293:3:39","nodeType":"YulIdentifier","src":"13293:3:39"},"nativeSrc":"13293:22:39","nodeType":"YulFunctionCall","src":"13293:22:39"},{"name":"dataEnd","nativeSrc":"13317:7:39","nodeType":"YulIdentifier","src":"13317:7:39"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"13261:31:39","nodeType":"YulIdentifier","src":"13261:31:39"},"nativeSrc":"13261:64:39","nodeType":"YulFunctionCall","src":"13261:64:39"},"variableNames":[{"name":"value0","nativeSrc":"13251:6:39","nodeType":"YulIdentifier","src":"13251:6:39"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"12991:351:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13038:9:39","nodeType":"YulTypedName","src":"13038:9:39","type":""},{"name":"dataEnd","nativeSrc":"13049:7:39","nodeType":"YulTypedName","src":"13049:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13061:6:39","nodeType":"YulTypedName","src":"13061:6:39","type":""}],"src":"12991:351:39"},{"body":{"nativeSrc":"13376:152:39","nodeType":"YulBlock","src":"13376:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13393:1:39","nodeType":"YulLiteral","src":"13393:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"13396:77:39","nodeType":"YulLiteral","src":"13396:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13386:6:39","nodeType":"YulIdentifier","src":"13386:6:39"},"nativeSrc":"13386:88:39","nodeType":"YulFunctionCall","src":"13386:88:39"},"nativeSrc":"13386:88:39","nodeType":"YulExpressionStatement","src":"13386:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13490:1:39","nodeType":"YulLiteral","src":"13490:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"13493:4:39","nodeType":"YulLiteral","src":"13493:4:39","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13483:6:39","nodeType":"YulIdentifier","src":"13483:6:39"},"nativeSrc":"13483:15:39","nodeType":"YulFunctionCall","src":"13483:15:39"},"nativeSrc":"13483:15:39","nodeType":"YulExpressionStatement","src":"13483:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13514:1:39","nodeType":"YulLiteral","src":"13514:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"13517:4:39","nodeType":"YulLiteral","src":"13517:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13507:6:39","nodeType":"YulIdentifier","src":"13507:6:39"},"nativeSrc":"13507:15:39","nodeType":"YulFunctionCall","src":"13507:15:39"},"nativeSrc":"13507:15:39","nodeType":"YulExpressionStatement","src":"13507:15:39"}]},"name":"panic_error_0x11","nativeSrc":"13348:180:39","nodeType":"YulFunctionDefinition","src":"13348:180:39"},{"body":{"nativeSrc":"13578:147:39","nodeType":"YulBlock","src":"13578:147:39","statements":[{"nativeSrc":"13588:25:39","nodeType":"YulAssignment","src":"13588:25:39","value":{"arguments":[{"name":"x","nativeSrc":"13611:1:39","nodeType":"YulIdentifier","src":"13611:1:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13593:17:39","nodeType":"YulIdentifier","src":"13593:17:39"},"nativeSrc":"13593:20:39","nodeType":"YulFunctionCall","src":"13593:20:39"},"variableNames":[{"name":"x","nativeSrc":"13588:1:39","nodeType":"YulIdentifier","src":"13588:1:39"}]},{"nativeSrc":"13622:25:39","nodeType":"YulAssignment","src":"13622:25:39","value":{"arguments":[{"name":"y","nativeSrc":"13645:1:39","nodeType":"YulIdentifier","src":"13645:1:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13627:17:39","nodeType":"YulIdentifier","src":"13627:17:39"},"nativeSrc":"13627:20:39","nodeType":"YulFunctionCall","src":"13627:20:39"},"variableNames":[{"name":"y","nativeSrc":"13622:1:39","nodeType":"YulIdentifier","src":"13622:1:39"}]},{"nativeSrc":"13656:16:39","nodeType":"YulAssignment","src":"13656:16:39","value":{"arguments":[{"name":"x","nativeSrc":"13667:1:39","nodeType":"YulIdentifier","src":"13667:1:39"},{"name":"y","nativeSrc":"13670:1:39","nodeType":"YulIdentifier","src":"13670:1:39"}],"functionName":{"name":"add","nativeSrc":"13663:3:39","nodeType":"YulIdentifier","src":"13663:3:39"},"nativeSrc":"13663:9:39","nodeType":"YulFunctionCall","src":"13663:9:39"},"variableNames":[{"name":"sum","nativeSrc":"13656:3:39","nodeType":"YulIdentifier","src":"13656:3:39"}]},{"body":{"nativeSrc":"13696:22:39","nodeType":"YulBlock","src":"13696:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13698:16:39","nodeType":"YulIdentifier","src":"13698:16:39"},"nativeSrc":"13698:18:39","nodeType":"YulFunctionCall","src":"13698:18:39"},"nativeSrc":"13698:18:39","nodeType":"YulExpressionStatement","src":"13698:18:39"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13688:1:39","nodeType":"YulIdentifier","src":"13688:1:39"},{"name":"sum","nativeSrc":"13691:3:39","nodeType":"YulIdentifier","src":"13691:3:39"}],"functionName":{"name":"gt","nativeSrc":"13685:2:39","nodeType":"YulIdentifier","src":"13685:2:39"},"nativeSrc":"13685:10:39","nodeType":"YulFunctionCall","src":"13685:10:39"},"nativeSrc":"13682:36:39","nodeType":"YulIf","src":"13682:36:39"}]},"name":"checked_add_t_uint256","nativeSrc":"13534:191:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13565:1:39","nodeType":"YulTypedName","src":"13565:1:39","type":""},{"name":"y","nativeSrc":"13568:1:39","nodeType":"YulTypedName","src":"13568:1:39","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13574:3:39","nodeType":"YulTypedName","src":"13574:3:39","type":""}],"src":"13534:191:39"},{"body":{"nativeSrc":"13857:206:39","nodeType":"YulBlock","src":"13857:206:39","statements":[{"nativeSrc":"13867:26:39","nodeType":"YulAssignment","src":"13867:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"13879:9:39","nodeType":"YulIdentifier","src":"13879:9:39"},{"kind":"number","nativeSrc":"13890:2:39","nodeType":"YulLiteral","src":"13890:2:39","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13875:3:39","nodeType":"YulIdentifier","src":"13875:3:39"},"nativeSrc":"13875:18:39","nodeType":"YulFunctionCall","src":"13875:18:39"},"variableNames":[{"name":"tail","nativeSrc":"13867:4:39","nodeType":"YulIdentifier","src":"13867:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13947:6:39","nodeType":"YulIdentifier","src":"13947:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"13960:9:39","nodeType":"YulIdentifier","src":"13960:9:39"},{"kind":"number","nativeSrc":"13971:1:39","nodeType":"YulLiteral","src":"13971:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13956:3:39","nodeType":"YulIdentifier","src":"13956:3:39"},"nativeSrc":"13956:17:39","nodeType":"YulFunctionCall","src":"13956:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13903:43:39","nodeType":"YulIdentifier","src":"13903:43:39"},"nativeSrc":"13903:71:39","nodeType":"YulFunctionCall","src":"13903:71:39"},"nativeSrc":"13903:71:39","nodeType":"YulExpressionStatement","src":"13903:71:39"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14028:6:39","nodeType":"YulIdentifier","src":"14028:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"14041:9:39","nodeType":"YulIdentifier","src":"14041:9:39"},{"kind":"number","nativeSrc":"14052:2:39","nodeType":"YulLiteral","src":"14052:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14037:3:39","nodeType":"YulIdentifier","src":"14037:3:39"},"nativeSrc":"14037:18:39","nodeType":"YulFunctionCall","src":"14037:18:39"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"13984:43:39","nodeType":"YulIdentifier","src":"13984:43:39"},"nativeSrc":"13984:72:39","nodeType":"YulFunctionCall","src":"13984:72:39"},"nativeSrc":"13984:72:39","nodeType":"YulExpressionStatement","src":"13984:72:39"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"13731:332:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13821:9:39","nodeType":"YulTypedName","src":"13821:9:39","type":""},{"name":"value1","nativeSrc":"13833:6:39","nodeType":"YulTypedName","src":"13833:6:39","type":""},{"name":"value0","nativeSrc":"13841:6:39","nodeType":"YulTypedName","src":"13841:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13852:4:39","nodeType":"YulTypedName","src":"13852:4:39","type":""}],"src":"13731:332:39"},{"body":{"nativeSrc":"14123:87:39","nodeType":"YulBlock","src":"14123:87:39","statements":[{"nativeSrc":"14133:11:39","nodeType":"YulAssignment","src":"14133:11:39","value":{"name":"ptr","nativeSrc":"14141:3:39","nodeType":"YulIdentifier","src":"14141:3:39"},"variableNames":[{"name":"data","nativeSrc":"14133:4:39","nodeType":"YulIdentifier","src":"14133:4:39"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14161:1:39","nodeType":"YulLiteral","src":"14161:1:39","type":"","value":"0"},{"name":"ptr","nativeSrc":"14164:3:39","nodeType":"YulIdentifier","src":"14164:3:39"}],"functionName":{"name":"mstore","nativeSrc":"14154:6:39","nodeType":"YulIdentifier","src":"14154:6:39"},"nativeSrc":"14154:14:39","nodeType":"YulFunctionCall","src":"14154:14:39"},"nativeSrc":"14154:14:39","nodeType":"YulExpressionStatement","src":"14154:14:39"},{"nativeSrc":"14177:26:39","nodeType":"YulAssignment","src":"14177:26:39","value":{"arguments":[{"kind":"number","nativeSrc":"14195:1:39","nodeType":"YulLiteral","src":"14195:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"14198:4:39","nodeType":"YulLiteral","src":"14198:4:39","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14185:9:39","nodeType":"YulIdentifier","src":"14185:9:39"},"nativeSrc":"14185:18:39","nodeType":"YulFunctionCall","src":"14185:18:39"},"variableNames":[{"name":"data","nativeSrc":"14177:4:39","nodeType":"YulIdentifier","src":"14177:4:39"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"14069:141:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"14110:3:39","nodeType":"YulTypedName","src":"14110:3:39","type":""}],"returnVariables":[{"name":"data","nativeSrc":"14118:4:39","nodeType":"YulTypedName","src":"14118:4:39","type":""}],"src":"14069:141:39"},{"body":{"nativeSrc":"14260:49:39","nodeType":"YulBlock","src":"14260:49:39","statements":[{"nativeSrc":"14270:33:39","nodeType":"YulAssignment","src":"14270:33:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14288:5:39","nodeType":"YulIdentifier","src":"14288:5:39"},{"kind":"number","nativeSrc":"14295:2:39","nodeType":"YulLiteral","src":"14295:2:39","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"14284:3:39","nodeType":"YulIdentifier","src":"14284:3:39"},"nativeSrc":"14284:14:39","nodeType":"YulFunctionCall","src":"14284:14:39"},{"kind":"number","nativeSrc":"14300:2:39","nodeType":"YulLiteral","src":"14300:2:39","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"14280:3:39","nodeType":"YulIdentifier","src":"14280:3:39"},"nativeSrc":"14280:23:39","nodeType":"YulFunctionCall","src":"14280:23:39"},"variableNames":[{"name":"result","nativeSrc":"14270:6:39","nodeType":"YulIdentifier","src":"14270:6:39"}]}]},"name":"divide_by_32_ceil","nativeSrc":"14216:93:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14243:5:39","nodeType":"YulTypedName","src":"14243:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"14253:6:39","nodeType":"YulTypedName","src":"14253:6:39","type":""}],"src":"14216:93:39"},{"body":{"nativeSrc":"14368:54:39","nodeType":"YulBlock","src":"14368:54:39","statements":[{"nativeSrc":"14378:37:39","nodeType":"YulAssignment","src":"14378:37:39","value":{"arguments":[{"name":"bits","nativeSrc":"14403:4:39","nodeType":"YulIdentifier","src":"14403:4:39"},{"name":"value","nativeSrc":"14409:5:39","nodeType":"YulIdentifier","src":"14409:5:39"}],"functionName":{"name":"shl","nativeSrc":"14399:3:39","nodeType":"YulIdentifier","src":"14399:3:39"},"nativeSrc":"14399:16:39","nodeType":"YulFunctionCall","src":"14399:16:39"},"variableNames":[{"name":"newValue","nativeSrc":"14378:8:39","nodeType":"YulIdentifier","src":"14378:8:39"}]}]},"name":"shift_left_dynamic","nativeSrc":"14315:107:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"14343:4:39","nodeType":"YulTypedName","src":"14343:4:39","type":""},{"name":"value","nativeSrc":"14349:5:39","nodeType":"YulTypedName","src":"14349:5:39","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"14359:8:39","nodeType":"YulTypedName","src":"14359:8:39","type":""}],"src":"14315:107:39"},{"body":{"nativeSrc":"14504:317:39","nodeType":"YulBlock","src":"14504:317:39","statements":[{"nativeSrc":"14514:35:39","nodeType":"YulVariableDeclaration","src":"14514:35:39","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"14535:10:39","nodeType":"YulIdentifier","src":"14535:10:39"},{"kind":"number","nativeSrc":"14547:1:39","nodeType":"YulLiteral","src":"14547:1:39","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"14531:3:39","nodeType":"YulIdentifier","src":"14531:3:39"},"nativeSrc":"14531:18:39","nodeType":"YulFunctionCall","src":"14531:18:39"},"variables":[{"name":"shiftBits","nativeSrc":"14518:9:39","nodeType":"YulTypedName","src":"14518:9:39","type":""}]},{"nativeSrc":"14558:109:39","nodeType":"YulVariableDeclaration","src":"14558:109:39","value":{"arguments":[{"name":"shiftBits","nativeSrc":"14589:9:39","nodeType":"YulIdentifier","src":"14589:9:39"},{"kind":"number","nativeSrc":"14600:66:39","nodeType":"YulLiteral","src":"14600:66:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"14570:18:39","nodeType":"YulIdentifier","src":"14570:18:39"},"nativeSrc":"14570:97:39","nodeType":"YulFunctionCall","src":"14570:97:39"},"variables":[{"name":"mask","nativeSrc":"14562:4:39","nodeType":"YulTypedName","src":"14562:4:39","type":""}]},{"nativeSrc":"14676:51:39","nodeType":"YulAssignment","src":"14676:51:39","value":{"arguments":[{"name":"shiftBits","nativeSrc":"14707:9:39","nodeType":"YulIdentifier","src":"14707:9:39"},{"name":"toInsert","nativeSrc":"14718:8:39","nodeType":"YulIdentifier","src":"14718:8:39"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"14688:18:39","nodeType":"YulIdentifier","src":"14688:18:39"},"nativeSrc":"14688:39:39","nodeType":"YulFunctionCall","src":"14688:39:39"},"variableNames":[{"name":"toInsert","nativeSrc":"14676:8:39","nodeType":"YulIdentifier","src":"14676:8:39"}]},{"nativeSrc":"14736:30:39","nodeType":"YulAssignment","src":"14736:30:39","value":{"arguments":[{"name":"value","nativeSrc":"14749:5:39","nodeType":"YulIdentifier","src":"14749:5:39"},{"arguments":[{"name":"mask","nativeSrc":"14760:4:39","nodeType":"YulIdentifier","src":"14760:4:39"}],"functionName":{"name":"not","nativeSrc":"14756:3:39","nodeType":"YulIdentifier","src":"14756:3:39"},"nativeSrc":"14756:9:39","nodeType":"YulFunctionCall","src":"14756:9:39"}],"functionName":{"name":"and","nativeSrc":"14745:3:39","nodeType":"YulIdentifier","src":"14745:3:39"},"nativeSrc":"14745:21:39","nodeType":"YulFunctionCall","src":"14745:21:39"},"variableNames":[{"name":"value","nativeSrc":"14736:5:39","nodeType":"YulIdentifier","src":"14736:5:39"}]},{"nativeSrc":"14775:40:39","nodeType":"YulAssignment","src":"14775:40:39","value":{"arguments":[{"name":"value","nativeSrc":"14788:5:39","nodeType":"YulIdentifier","src":"14788:5:39"},{"arguments":[{"name":"toInsert","nativeSrc":"14799:8:39","nodeType":"YulIdentifier","src":"14799:8:39"},{"name":"mask","nativeSrc":"14809:4:39","nodeType":"YulIdentifier","src":"14809:4:39"}],"functionName":{"name":"and","nativeSrc":"14795:3:39","nodeType":"YulIdentifier","src":"14795:3:39"},"nativeSrc":"14795:19:39","nodeType":"YulFunctionCall","src":"14795:19:39"}],"functionName":{"name":"or","nativeSrc":"14785:2:39","nodeType":"YulIdentifier","src":"14785:2:39"},"nativeSrc":"14785:30:39","nodeType":"YulFunctionCall","src":"14785:30:39"},"variableNames":[{"name":"result","nativeSrc":"14775:6:39","nodeType":"YulIdentifier","src":"14775:6:39"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"14428:393:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14465:5:39","nodeType":"YulTypedName","src":"14465:5:39","type":""},{"name":"shiftBytes","nativeSrc":"14472:10:39","nodeType":"YulTypedName","src":"14472:10:39","type":""},{"name":"toInsert","nativeSrc":"14484:8:39","nodeType":"YulTypedName","src":"14484:8:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"14497:6:39","nodeType":"YulTypedName","src":"14497:6:39","type":""}],"src":"14428:393:39"},{"body":{"nativeSrc":"14887:82:39","nodeType":"YulBlock","src":"14887:82:39","statements":[{"nativeSrc":"14897:66:39","nodeType":"YulAssignment","src":"14897:66:39","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14955:5:39","nodeType":"YulIdentifier","src":"14955:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14937:17:39","nodeType":"YulIdentifier","src":"14937:17:39"},"nativeSrc":"14937:24:39","nodeType":"YulFunctionCall","src":"14937:24:39"}],"functionName":{"name":"identity","nativeSrc":"14928:8:39","nodeType":"YulIdentifier","src":"14928:8:39"},"nativeSrc":"14928:34:39","nodeType":"YulFunctionCall","src":"14928:34:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14910:17:39","nodeType":"YulIdentifier","src":"14910:17:39"},"nativeSrc":"14910:53:39","nodeType":"YulFunctionCall","src":"14910:53:39"},"variableNames":[{"name":"converted","nativeSrc":"14897:9:39","nodeType":"YulIdentifier","src":"14897:9:39"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"14827:142:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14867:5:39","nodeType":"YulTypedName","src":"14867:5:39","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"14877:9:39","nodeType":"YulTypedName","src":"14877:9:39","type":""}],"src":"14827:142:39"},{"body":{"nativeSrc":"15022:28:39","nodeType":"YulBlock","src":"15022:28:39","statements":[{"nativeSrc":"15032:12:39","nodeType":"YulAssignment","src":"15032:12:39","value":{"name":"value","nativeSrc":"15039:5:39","nodeType":"YulIdentifier","src":"15039:5:39"},"variableNames":[{"name":"ret","nativeSrc":"15032:3:39","nodeType":"YulIdentifier","src":"15032:3:39"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"14975:75:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15008:5:39","nodeType":"YulTypedName","src":"15008:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"15018:3:39","nodeType":"YulTypedName","src":"15018:3:39","type":""}],"src":"14975:75:39"},{"body":{"nativeSrc":"15132:193:39","nodeType":"YulBlock","src":"15132:193:39","statements":[{"nativeSrc":"15142:63:39","nodeType":"YulVariableDeclaration","src":"15142:63:39","value":{"arguments":[{"name":"value_0","nativeSrc":"15197:7:39","nodeType":"YulIdentifier","src":"15197:7:39"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"15166:30:39","nodeType":"YulIdentifier","src":"15166:30:39"},"nativeSrc":"15166:39:39","nodeType":"YulFunctionCall","src":"15166:39:39"},"variables":[{"name":"convertedValue_0","nativeSrc":"15146:16:39","nodeType":"YulTypedName","src":"15146:16:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15221:4:39","nodeType":"YulIdentifier","src":"15221:4:39"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"15261:4:39","nodeType":"YulIdentifier","src":"15261:4:39"}],"functionName":{"name":"sload","nativeSrc":"15255:5:39","nodeType":"YulIdentifier","src":"15255:5:39"},"nativeSrc":"15255:11:39","nodeType":"YulFunctionCall","src":"15255:11:39"},{"name":"offset","nativeSrc":"15268:6:39","nodeType":"YulIdentifier","src":"15268:6:39"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"15300:16:39","nodeType":"YulIdentifier","src":"15300:16:39"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"15276:23:39","nodeType":"YulIdentifier","src":"15276:23:39"},"nativeSrc":"15276:41:39","nodeType":"YulFunctionCall","src":"15276:41:39"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"15227:27:39","nodeType":"YulIdentifier","src":"15227:27:39"},"nativeSrc":"15227:91:39","nodeType":"YulFunctionCall","src":"15227:91:39"}],"functionName":{"name":"sstore","nativeSrc":"15214:6:39","nodeType":"YulIdentifier","src":"15214:6:39"},"nativeSrc":"15214:105:39","nodeType":"YulFunctionCall","src":"15214:105:39"},"nativeSrc":"15214:105:39","nodeType":"YulExpressionStatement","src":"15214:105:39"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"15056:269:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"15109:4:39","nodeType":"YulTypedName","src":"15109:4:39","type":""},{"name":"offset","nativeSrc":"15115:6:39","nodeType":"YulTypedName","src":"15115:6:39","type":""},{"name":"value_0","nativeSrc":"15123:7:39","nodeType":"YulTypedName","src":"15123:7:39","type":""}],"src":"15056:269:39"},{"body":{"nativeSrc":"15380:24:39","nodeType":"YulBlock","src":"15380:24:39","statements":[{"nativeSrc":"15390:8:39","nodeType":"YulAssignment","src":"15390:8:39","value":{"kind":"number","nativeSrc":"15397:1:39","nodeType":"YulLiteral","src":"15397:1:39","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"15390:3:39","nodeType":"YulIdentifier","src":"15390:3:39"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"15331:73:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"15376:3:39","nodeType":"YulTypedName","src":"15376:3:39","type":""}],"src":"15331:73:39"},{"body":{"nativeSrc":"15463:136:39","nodeType":"YulBlock","src":"15463:136:39","statements":[{"nativeSrc":"15473:46:39","nodeType":"YulVariableDeclaration","src":"15473:46:39","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"15487:30:39","nodeType":"YulIdentifier","src":"15487:30:39"},"nativeSrc":"15487:32:39","nodeType":"YulFunctionCall","src":"15487:32:39"},"variables":[{"name":"zero_0","nativeSrc":"15477:6:39","nodeType":"YulTypedName","src":"15477:6:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15572:4:39","nodeType":"YulIdentifier","src":"15572:4:39"},{"name":"offset","nativeSrc":"15578:6:39","nodeType":"YulIdentifier","src":"15578:6:39"},{"name":"zero_0","nativeSrc":"15586:6:39","nodeType":"YulIdentifier","src":"15586:6:39"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"15528:43:39","nodeType":"YulIdentifier","src":"15528:43:39"},"nativeSrc":"15528:65:39","nodeType":"YulFunctionCall","src":"15528:65:39"},"nativeSrc":"15528:65:39","nodeType":"YulExpressionStatement","src":"15528:65:39"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"15410:189:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"15449:4:39","nodeType":"YulTypedName","src":"15449:4:39","type":""},{"name":"offset","nativeSrc":"15455:6:39","nodeType":"YulTypedName","src":"15455:6:39","type":""}],"src":"15410:189:39"},{"body":{"nativeSrc":"15655:136:39","nodeType":"YulBlock","src":"15655:136:39","statements":[{"body":{"nativeSrc":"15722:63:39","nodeType":"YulBlock","src":"15722:63:39","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"15766:5:39","nodeType":"YulIdentifier","src":"15766:5:39"},{"kind":"number","nativeSrc":"15773:1:39","nodeType":"YulLiteral","src":"15773:1:39","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"15736:29:39","nodeType":"YulIdentifier","src":"15736:29:39"},"nativeSrc":"15736:39:39","nodeType":"YulFunctionCall","src":"15736:39:39"},"nativeSrc":"15736:39:39","nodeType":"YulExpressionStatement","src":"15736:39:39"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"15675:5:39","nodeType":"YulIdentifier","src":"15675:5:39"},{"name":"end","nativeSrc":"15682:3:39","nodeType":"YulIdentifier","src":"15682:3:39"}],"functionName":{"name":"lt","nativeSrc":"15672:2:39","nodeType":"YulIdentifier","src":"15672:2:39"},"nativeSrc":"15672:14:39","nodeType":"YulFunctionCall","src":"15672:14:39"},"nativeSrc":"15665:120:39","nodeType":"YulForLoop","post":{"nativeSrc":"15687:26:39","nodeType":"YulBlock","src":"15687:26:39","statements":[{"nativeSrc":"15689:22:39","nodeType":"YulAssignment","src":"15689:22:39","value":{"arguments":[{"name":"start","nativeSrc":"15702:5:39","nodeType":"YulIdentifier","src":"15702:5:39"},{"kind":"number","nativeSrc":"15709:1:39","nodeType":"YulLiteral","src":"15709:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15698:3:39","nodeType":"YulIdentifier","src":"15698:3:39"},"nativeSrc":"15698:13:39","nodeType":"YulFunctionCall","src":"15698:13:39"},"variableNames":[{"name":"start","nativeSrc":"15689:5:39","nodeType":"YulIdentifier","src":"15689:5:39"}]}]},"pre":{"nativeSrc":"15669:2:39","nodeType":"YulBlock","src":"15669:2:39","statements":[]},"src":"15665:120:39"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"15605:186:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"15643:5:39","nodeType":"YulTypedName","src":"15643:5:39","type":""},{"name":"end","nativeSrc":"15650:3:39","nodeType":"YulTypedName","src":"15650:3:39","type":""}],"src":"15605:186:39"},{"body":{"nativeSrc":"15876:464:39","nodeType":"YulBlock","src":"15876:464:39","statements":[{"body":{"nativeSrc":"15902:431:39","nodeType":"YulBlock","src":"15902:431:39","statements":[{"nativeSrc":"15916:54:39","nodeType":"YulVariableDeclaration","src":"15916:54:39","value":{"arguments":[{"name":"array","nativeSrc":"15964:5:39","nodeType":"YulIdentifier","src":"15964:5:39"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"15932:31:39","nodeType":"YulIdentifier","src":"15932:31:39"},"nativeSrc":"15932:38:39","nodeType":"YulFunctionCall","src":"15932:38:39"},"variables":[{"name":"dataArea","nativeSrc":"15920:8:39","nodeType":"YulTypedName","src":"15920:8:39","type":""}]},{"nativeSrc":"15983:63:39","nodeType":"YulVariableDeclaration","src":"15983:63:39","value":{"arguments":[{"name":"dataArea","nativeSrc":"16006:8:39","nodeType":"YulIdentifier","src":"16006:8:39"},{"arguments":[{"name":"startIndex","nativeSrc":"16034:10:39","nodeType":"YulIdentifier","src":"16034:10:39"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"16016:17:39","nodeType":"YulIdentifier","src":"16016:17:39"},"nativeSrc":"16016:29:39","nodeType":"YulFunctionCall","src":"16016:29:39"}],"functionName":{"name":"add","nativeSrc":"16002:3:39","nodeType":"YulIdentifier","src":"16002:3:39"},"nativeSrc":"16002:44:39","nodeType":"YulFunctionCall","src":"16002:44:39"},"variables":[{"name":"deleteStart","nativeSrc":"15987:11:39","nodeType":"YulTypedName","src":"15987:11:39","type":""}]},{"body":{"nativeSrc":"16203:27:39","nodeType":"YulBlock","src":"16203:27:39","statements":[{"nativeSrc":"16205:23:39","nodeType":"YulAssignment","src":"16205:23:39","value":{"name":"dataArea","nativeSrc":"16220:8:39","nodeType":"YulIdentifier","src":"16220:8:39"},"variableNames":[{"name":"deleteStart","nativeSrc":"16205:11:39","nodeType":"YulIdentifier","src":"16205:11:39"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"16187:10:39","nodeType":"YulIdentifier","src":"16187:10:39"},{"kind":"number","nativeSrc":"16199:2:39","nodeType":"YulLiteral","src":"16199:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"16184:2:39","nodeType":"YulIdentifier","src":"16184:2:39"},"nativeSrc":"16184:18:39","nodeType":"YulFunctionCall","src":"16184:18:39"},"nativeSrc":"16181:49:39","nodeType":"YulIf","src":"16181:49:39"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"16272:11:39","nodeType":"YulIdentifier","src":"16272:11:39"},{"arguments":[{"name":"dataArea","nativeSrc":"16289:8:39","nodeType":"YulIdentifier","src":"16289:8:39"},{"arguments":[{"name":"len","nativeSrc":"16317:3:39","nodeType":"YulIdentifier","src":"16317:3:39"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"16299:17:39","nodeType":"YulIdentifier","src":"16299:17:39"},"nativeSrc":"16299:22:39","nodeType":"YulFunctionCall","src":"16299:22:39"}],"functionName":{"name":"add","nativeSrc":"16285:3:39","nodeType":"YulIdentifier","src":"16285:3:39"},"nativeSrc":"16285:37:39","nodeType":"YulFunctionCall","src":"16285:37:39"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"16243:28:39","nodeType":"YulIdentifier","src":"16243:28:39"},"nativeSrc":"16243:80:39","nodeType":"YulFunctionCall","src":"16243:80:39"},"nativeSrc":"16243:80:39","nodeType":"YulExpressionStatement","src":"16243:80:39"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"15893:3:39","nodeType":"YulIdentifier","src":"15893:3:39"},{"kind":"number","nativeSrc":"15898:2:39","nodeType":"YulLiteral","src":"15898:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"15890:2:39","nodeType":"YulIdentifier","src":"15890:2:39"},"nativeSrc":"15890:11:39","nodeType":"YulFunctionCall","src":"15890:11:39"},"nativeSrc":"15887:446:39","nodeType":"YulIf","src":"15887:446:39"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"15797:543:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"15852:5:39","nodeType":"YulTypedName","src":"15852:5:39","type":""},{"name":"len","nativeSrc":"15859:3:39","nodeType":"YulTypedName","src":"15859:3:39","type":""},{"name":"startIndex","nativeSrc":"15864:10:39","nodeType":"YulTypedName","src":"15864:10:39","type":""}],"src":"15797:543:39"},{"body":{"nativeSrc":"16409:54:39","nodeType":"YulBlock","src":"16409:54:39","statements":[{"nativeSrc":"16419:37:39","nodeType":"YulAssignment","src":"16419:37:39","value":{"arguments":[{"name":"bits","nativeSrc":"16444:4:39","nodeType":"YulIdentifier","src":"16444:4:39"},{"name":"value","nativeSrc":"16450:5:39","nodeType":"YulIdentifier","src":"16450:5:39"}],"functionName":{"name":"shr","nativeSrc":"16440:3:39","nodeType":"YulIdentifier","src":"16440:3:39"},"nativeSrc":"16440:16:39","nodeType":"YulFunctionCall","src":"16440:16:39"},"variableNames":[{"name":"newValue","nativeSrc":"16419:8:39","nodeType":"YulIdentifier","src":"16419:8:39"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"16346:117:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"16384:4:39","nodeType":"YulTypedName","src":"16384:4:39","type":""},{"name":"value","nativeSrc":"16390:5:39","nodeType":"YulTypedName","src":"16390:5:39","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"16400:8:39","nodeType":"YulTypedName","src":"16400:8:39","type":""}],"src":"16346:117:39"},{"body":{"nativeSrc":"16520:118:39","nodeType":"YulBlock","src":"16520:118:39","statements":[{"nativeSrc":"16530:68:39","nodeType":"YulVariableDeclaration","src":"16530:68:39","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16579:1:39","nodeType":"YulLiteral","src":"16579:1:39","type":"","value":"8"},{"name":"bytes","nativeSrc":"16582:5:39","nodeType":"YulIdentifier","src":"16582:5:39"}],"functionName":{"name":"mul","nativeSrc":"16575:3:39","nodeType":"YulIdentifier","src":"16575:3:39"},"nativeSrc":"16575:13:39","nodeType":"YulFunctionCall","src":"16575:13:39"},{"arguments":[{"kind":"number","nativeSrc":"16594:1:39","nodeType":"YulLiteral","src":"16594:1:39","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"16590:3:39","nodeType":"YulIdentifier","src":"16590:3:39"},"nativeSrc":"16590:6:39","nodeType":"YulFunctionCall","src":"16590:6:39"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"16546:28:39","nodeType":"YulIdentifier","src":"16546:28:39"},"nativeSrc":"16546:51:39","nodeType":"YulFunctionCall","src":"16546:51:39"}],"functionName":{"name":"not","nativeSrc":"16542:3:39","nodeType":"YulIdentifier","src":"16542:3:39"},"nativeSrc":"16542:56:39","nodeType":"YulFunctionCall","src":"16542:56:39"},"variables":[{"name":"mask","nativeSrc":"16534:4:39","nodeType":"YulTypedName","src":"16534:4:39","type":""}]},{"nativeSrc":"16607:25:39","nodeType":"YulAssignment","src":"16607:25:39","value":{"arguments":[{"name":"data","nativeSrc":"16621:4:39","nodeType":"YulIdentifier","src":"16621:4:39"},{"name":"mask","nativeSrc":"16627:4:39","nodeType":"YulIdentifier","src":"16627:4:39"}],"functionName":{"name":"and","nativeSrc":"16617:3:39","nodeType":"YulIdentifier","src":"16617:3:39"},"nativeSrc":"16617:15:39","nodeType":"YulFunctionCall","src":"16617:15:39"},"variableNames":[{"name":"result","nativeSrc":"16607:6:39","nodeType":"YulIdentifier","src":"16607:6:39"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"16469:169:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16497:4:39","nodeType":"YulTypedName","src":"16497:4:39","type":""},{"name":"bytes","nativeSrc":"16503:5:39","nodeType":"YulTypedName","src":"16503:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"16513:6:39","nodeType":"YulTypedName","src":"16513:6:39","type":""}],"src":"16469:169:39"},{"body":{"nativeSrc":"16724:214:39","nodeType":"YulBlock","src":"16724:214:39","statements":[{"nativeSrc":"16857:37:39","nodeType":"YulAssignment","src":"16857:37:39","value":{"arguments":[{"name":"data","nativeSrc":"16884:4:39","nodeType":"YulIdentifier","src":"16884:4:39"},{"name":"len","nativeSrc":"16890:3:39","nodeType":"YulIdentifier","src":"16890:3:39"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"16865:18:39","nodeType":"YulIdentifier","src":"16865:18:39"},"nativeSrc":"16865:29:39","nodeType":"YulFunctionCall","src":"16865:29:39"},"variableNames":[{"name":"data","nativeSrc":"16857:4:39","nodeType":"YulIdentifier","src":"16857:4:39"}]},{"nativeSrc":"16903:29:39","nodeType":"YulAssignment","src":"16903:29:39","value":{"arguments":[{"name":"data","nativeSrc":"16914:4:39","nodeType":"YulIdentifier","src":"16914:4:39"},{"arguments":[{"kind":"number","nativeSrc":"16924:1:39","nodeType":"YulLiteral","src":"16924:1:39","type":"","value":"2"},{"name":"len","nativeSrc":"16927:3:39","nodeType":"YulIdentifier","src":"16927:3:39"}],"functionName":{"name":"mul","nativeSrc":"16920:3:39","nodeType":"YulIdentifier","src":"16920:3:39"},"nativeSrc":"16920:11:39","nodeType":"YulFunctionCall","src":"16920:11:39"}],"functionName":{"name":"or","nativeSrc":"16911:2:39","nodeType":"YulIdentifier","src":"16911:2:39"},"nativeSrc":"16911:21:39","nodeType":"YulFunctionCall","src":"16911:21:39"},"variableNames":[{"name":"used","nativeSrc":"16903:4:39","nodeType":"YulIdentifier","src":"16903:4:39"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"16643:295:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16705:4:39","nodeType":"YulTypedName","src":"16705:4:39","type":""},{"name":"len","nativeSrc":"16711:3:39","nodeType":"YulTypedName","src":"16711:3:39","type":""}],"returnVariables":[{"name":"used","nativeSrc":"16719:4:39","nodeType":"YulTypedName","src":"16719:4:39","type":""}],"src":"16643:295:39"},{"body":{"nativeSrc":"17035:1303:39","nodeType":"YulBlock","src":"17035:1303:39","statements":[{"nativeSrc":"17046:51:39","nodeType":"YulVariableDeclaration","src":"17046:51:39","value":{"arguments":[{"name":"src","nativeSrc":"17093:3:39","nodeType":"YulIdentifier","src":"17093:3:39"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"17060:32:39","nodeType":"YulIdentifier","src":"17060:32:39"},"nativeSrc":"17060:37:39","nodeType":"YulFunctionCall","src":"17060:37:39"},"variables":[{"name":"newLen","nativeSrc":"17050:6:39","nodeType":"YulTypedName","src":"17050:6:39","type":""}]},{"body":{"nativeSrc":"17182:22:39","nodeType":"YulBlock","src":"17182:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"17184:16:39","nodeType":"YulIdentifier","src":"17184:16:39"},"nativeSrc":"17184:18:39","nodeType":"YulFunctionCall","src":"17184:18:39"},"nativeSrc":"17184:18:39","nodeType":"YulExpressionStatement","src":"17184:18:39"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"17154:6:39","nodeType":"YulIdentifier","src":"17154:6:39"},{"kind":"number","nativeSrc":"17162:18:39","nodeType":"YulLiteral","src":"17162:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"17151:2:39","nodeType":"YulIdentifier","src":"17151:2:39"},"nativeSrc":"17151:30:39","nodeType":"YulFunctionCall","src":"17151:30:39"},"nativeSrc":"17148:56:39","nodeType":"YulIf","src":"17148:56:39"},{"nativeSrc":"17214:52:39","nodeType":"YulVariableDeclaration","src":"17214:52:39","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"17260:4:39","nodeType":"YulIdentifier","src":"17260:4:39"}],"functionName":{"name":"sload","nativeSrc":"17254:5:39","nodeType":"YulIdentifier","src":"17254:5:39"},"nativeSrc":"17254:11:39","nodeType":"YulFunctionCall","src":"17254:11:39"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"17228:25:39","nodeType":"YulIdentifier","src":"17228:25:39"},"nativeSrc":"17228:38:39","nodeType":"YulFunctionCall","src":"17228:38:39"},"variables":[{"name":"oldLen","nativeSrc":"17218:6:39","nodeType":"YulTypedName","src":"17218:6:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17359:4:39","nodeType":"YulIdentifier","src":"17359:4:39"},{"name":"oldLen","nativeSrc":"17365:6:39","nodeType":"YulIdentifier","src":"17365:6:39"},{"name":"newLen","nativeSrc":"17373:6:39","nodeType":"YulIdentifier","src":"17373:6:39"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"17313:45:39","nodeType":"YulIdentifier","src":"17313:45:39"},"nativeSrc":"17313:67:39","nodeType":"YulFunctionCall","src":"17313:67:39"},"nativeSrc":"17313:67:39","nodeType":"YulExpressionStatement","src":"17313:67:39"},{"nativeSrc":"17390:18:39","nodeType":"YulVariableDeclaration","src":"17390:18:39","value":{"kind":"number","nativeSrc":"17407:1:39","nodeType":"YulLiteral","src":"17407:1:39","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"17394:9:39","nodeType":"YulTypedName","src":"17394:9:39","type":""}]},{"nativeSrc":"17418:17:39","nodeType":"YulAssignment","src":"17418:17:39","value":{"kind":"number","nativeSrc":"17431:4:39","nodeType":"YulLiteral","src":"17431:4:39","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"17418:9:39","nodeType":"YulIdentifier","src":"17418:9:39"}]},{"cases":[{"body":{"nativeSrc":"17482:611:39","nodeType":"YulBlock","src":"17482:611:39","statements":[{"nativeSrc":"17496:37:39","nodeType":"YulVariableDeclaration","src":"17496:37:39","value":{"arguments":[{"name":"newLen","nativeSrc":"17515:6:39","nodeType":"YulIdentifier","src":"17515:6:39"},{"arguments":[{"kind":"number","nativeSrc":"17527:4:39","nodeType":"YulLiteral","src":"17527:4:39","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"17523:3:39","nodeType":"YulIdentifier","src":"17523:3:39"},"nativeSrc":"17523:9:39","nodeType":"YulFunctionCall","src":"17523:9:39"}],"functionName":{"name":"and","nativeSrc":"17511:3:39","nodeType":"YulIdentifier","src":"17511:3:39"},"nativeSrc":"17511:22:39","nodeType":"YulFunctionCall","src":"17511:22:39"},"variables":[{"name":"loopEnd","nativeSrc":"17500:7:39","nodeType":"YulTypedName","src":"17500:7:39","type":""}]},{"nativeSrc":"17547:51:39","nodeType":"YulVariableDeclaration","src":"17547:51:39","value":{"arguments":[{"name":"slot","nativeSrc":"17593:4:39","nodeType":"YulIdentifier","src":"17593:4:39"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"17561:31:39","nodeType":"YulIdentifier","src":"17561:31:39"},"nativeSrc":"17561:37:39","nodeType":"YulFunctionCall","src":"17561:37:39"},"variables":[{"name":"dstPtr","nativeSrc":"17551:6:39","nodeType":"YulTypedName","src":"17551:6:39","type":""}]},{"nativeSrc":"17611:10:39","nodeType":"YulVariableDeclaration","src":"17611:10:39","value":{"kind":"number","nativeSrc":"17620:1:39","nodeType":"YulLiteral","src":"17620:1:39","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"17615:1:39","nodeType":"YulTypedName","src":"17615:1:39","type":""}]},{"body":{"nativeSrc":"17679:163:39","nodeType":"YulBlock","src":"17679:163:39","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17704:6:39","nodeType":"YulIdentifier","src":"17704:6:39"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17722:3:39","nodeType":"YulIdentifier","src":"17722:3:39"},{"name":"srcOffset","nativeSrc":"17727:9:39","nodeType":"YulIdentifier","src":"17727:9:39"}],"functionName":{"name":"add","nativeSrc":"17718:3:39","nodeType":"YulIdentifier","src":"17718:3:39"},"nativeSrc":"17718:19:39","nodeType":"YulFunctionCall","src":"17718:19:39"}],"functionName":{"name":"mload","nativeSrc":"17712:5:39","nodeType":"YulIdentifier","src":"17712:5:39"},"nativeSrc":"17712:26:39","nodeType":"YulFunctionCall","src":"17712:26:39"}],"functionName":{"name":"sstore","nativeSrc":"17697:6:39","nodeType":"YulIdentifier","src":"17697:6:39"},"nativeSrc":"17697:42:39","nodeType":"YulFunctionCall","src":"17697:42:39"},"nativeSrc":"17697:42:39","nodeType":"YulExpressionStatement","src":"17697:42:39"},{"nativeSrc":"17756:24:39","nodeType":"YulAssignment","src":"17756:24:39","value":{"arguments":[{"name":"dstPtr","nativeSrc":"17770:6:39","nodeType":"YulIdentifier","src":"17770:6:39"},{"kind":"number","nativeSrc":"17778:1:39","nodeType":"YulLiteral","src":"17778:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17766:3:39","nodeType":"YulIdentifier","src":"17766:3:39"},"nativeSrc":"17766:14:39","nodeType":"YulFunctionCall","src":"17766:14:39"},"variableNames":[{"name":"dstPtr","nativeSrc":"17756:6:39","nodeType":"YulIdentifier","src":"17756:6:39"}]},{"nativeSrc":"17797:31:39","nodeType":"YulAssignment","src":"17797:31:39","value":{"arguments":[{"name":"srcOffset","nativeSrc":"17814:9:39","nodeType":"YulIdentifier","src":"17814:9:39"},{"kind":"number","nativeSrc":"17825:2:39","nodeType":"YulLiteral","src":"17825:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17810:3:39","nodeType":"YulIdentifier","src":"17810:3:39"},"nativeSrc":"17810:18:39","nodeType":"YulFunctionCall","src":"17810:18:39"},"variableNames":[{"name":"srcOffset","nativeSrc":"17797:9:39","nodeType":"YulIdentifier","src":"17797:9:39"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"17645:1:39","nodeType":"YulIdentifier","src":"17645:1:39"},{"name":"loopEnd","nativeSrc":"17648:7:39","nodeType":"YulIdentifier","src":"17648:7:39"}],"functionName":{"name":"lt","nativeSrc":"17642:2:39","nodeType":"YulIdentifier","src":"17642:2:39"},"nativeSrc":"17642:14:39","nodeType":"YulFunctionCall","src":"17642:14:39"},"nativeSrc":"17634:208:39","nodeType":"YulForLoop","post":{"nativeSrc":"17657:21:39","nodeType":"YulBlock","src":"17657:21:39","statements":[{"nativeSrc":"17659:17:39","nodeType":"YulAssignment","src":"17659:17:39","value":{"arguments":[{"name":"i","nativeSrc":"17668:1:39","nodeType":"YulIdentifier","src":"17668:1:39"},{"kind":"number","nativeSrc":"17671:4:39","nodeType":"YulLiteral","src":"17671:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17664:3:39","nodeType":"YulIdentifier","src":"17664:3:39"},"nativeSrc":"17664:12:39","nodeType":"YulFunctionCall","src":"17664:12:39"},"variableNames":[{"name":"i","nativeSrc":"17659:1:39","nodeType":"YulIdentifier","src":"17659:1:39"}]}]},"pre":{"nativeSrc":"17638:3:39","nodeType":"YulBlock","src":"17638:3:39","statements":[]},"src":"17634:208:39"},{"body":{"nativeSrc":"17878:156:39","nodeType":"YulBlock","src":"17878:156:39","statements":[{"nativeSrc":"17896:43:39","nodeType":"YulVariableDeclaration","src":"17896:43:39","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17923:3:39","nodeType":"YulIdentifier","src":"17923:3:39"},{"name":"srcOffset","nativeSrc":"17928:9:39","nodeType":"YulIdentifier","src":"17928:9:39"}],"functionName":{"name":"add","nativeSrc":"17919:3:39","nodeType":"YulIdentifier","src":"17919:3:39"},"nativeSrc":"17919:19:39","nodeType":"YulFunctionCall","src":"17919:19:39"}],"functionName":{"name":"mload","nativeSrc":"17913:5:39","nodeType":"YulIdentifier","src":"17913:5:39"},"nativeSrc":"17913:26:39","nodeType":"YulFunctionCall","src":"17913:26:39"},"variables":[{"name":"lastValue","nativeSrc":"17900:9:39","nodeType":"YulTypedName","src":"17900:9:39","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17963:6:39","nodeType":"YulIdentifier","src":"17963:6:39"},{"arguments":[{"name":"lastValue","nativeSrc":"17990:9:39","nodeType":"YulIdentifier","src":"17990:9:39"},{"arguments":[{"name":"newLen","nativeSrc":"18005:6:39","nodeType":"YulIdentifier","src":"18005:6:39"},{"kind":"number","nativeSrc":"18013:4:39","nodeType":"YulLiteral","src":"18013:4:39","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"18001:3:39","nodeType":"YulIdentifier","src":"18001:3:39"},"nativeSrc":"18001:17:39","nodeType":"YulFunctionCall","src":"18001:17:39"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"17971:18:39","nodeType":"YulIdentifier","src":"17971:18:39"},"nativeSrc":"17971:48:39","nodeType":"YulFunctionCall","src":"17971:48:39"}],"functionName":{"name":"sstore","nativeSrc":"17956:6:39","nodeType":"YulIdentifier","src":"17956:6:39"},"nativeSrc":"17956:64:39","nodeType":"YulFunctionCall","src":"17956:64:39"},"nativeSrc":"17956:64:39","nodeType":"YulExpressionStatement","src":"17956:64:39"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"17861:7:39","nodeType":"YulIdentifier","src":"17861:7:39"},{"name":"newLen","nativeSrc":"17870:6:39","nodeType":"YulIdentifier","src":"17870:6:39"}],"functionName":{"name":"lt","nativeSrc":"17858:2:39","nodeType":"YulIdentifier","src":"17858:2:39"},"nativeSrc":"17858:19:39","nodeType":"YulFunctionCall","src":"17858:19:39"},"nativeSrc":"17855:179:39","nodeType":"YulIf","src":"17855:179:39"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18054:4:39","nodeType":"YulIdentifier","src":"18054:4:39"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"18068:6:39","nodeType":"YulIdentifier","src":"18068:6:39"},{"kind":"number","nativeSrc":"18076:1:39","nodeType":"YulLiteral","src":"18076:1:39","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"18064:3:39","nodeType":"YulIdentifier","src":"18064:3:39"},"nativeSrc":"18064:14:39","nodeType":"YulFunctionCall","src":"18064:14:39"},{"kind":"number","nativeSrc":"18080:1:39","nodeType":"YulLiteral","src":"18080:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"18060:3:39","nodeType":"YulIdentifier","src":"18060:3:39"},"nativeSrc":"18060:22:39","nodeType":"YulFunctionCall","src":"18060:22:39"}],"functionName":{"name":"sstore","nativeSrc":"18047:6:39","nodeType":"YulIdentifier","src":"18047:6:39"},"nativeSrc":"18047:36:39","nodeType":"YulFunctionCall","src":"18047:36:39"},"nativeSrc":"18047:36:39","nodeType":"YulExpressionStatement","src":"18047:36:39"}]},"nativeSrc":"17475:618:39","nodeType":"YulCase","src":"17475:618:39","value":{"kind":"number","nativeSrc":"17480:1:39","nodeType":"YulLiteral","src":"17480:1:39","type":"","value":"1"}},{"body":{"nativeSrc":"18110:222:39","nodeType":"YulBlock","src":"18110:222:39","statements":[{"nativeSrc":"18124:14:39","nodeType":"YulVariableDeclaration","src":"18124:14:39","value":{"kind":"number","nativeSrc":"18137:1:39","nodeType":"YulLiteral","src":"18137:1:39","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"18128:5:39","nodeType":"YulTypedName","src":"18128:5:39","type":""}]},{"body":{"nativeSrc":"18161:67:39","nodeType":"YulBlock","src":"18161:67:39","statements":[{"nativeSrc":"18179:35:39","nodeType":"YulAssignment","src":"18179:35:39","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"18198:3:39","nodeType":"YulIdentifier","src":"18198:3:39"},{"name":"srcOffset","nativeSrc":"18203:9:39","nodeType":"YulIdentifier","src":"18203:9:39"}],"functionName":{"name":"add","nativeSrc":"18194:3:39","nodeType":"YulIdentifier","src":"18194:3:39"},"nativeSrc":"18194:19:39","nodeType":"YulFunctionCall","src":"18194:19:39"}],"functionName":{"name":"mload","nativeSrc":"18188:5:39","nodeType":"YulIdentifier","src":"18188:5:39"},"nativeSrc":"18188:26:39","nodeType":"YulFunctionCall","src":"18188:26:39"},"variableNames":[{"name":"value","nativeSrc":"18179:5:39","nodeType":"YulIdentifier","src":"18179:5:39"}]}]},"condition":{"name":"newLen","nativeSrc":"18154:6:39","nodeType":"YulIdentifier","src":"18154:6:39"},"nativeSrc":"18151:77:39","nodeType":"YulIf","src":"18151:77:39"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18248:4:39","nodeType":"YulIdentifier","src":"18248:4:39"},{"arguments":[{"name":"value","nativeSrc":"18307:5:39","nodeType":"YulIdentifier","src":"18307:5:39"},{"name":"newLen","nativeSrc":"18314:6:39","nodeType":"YulIdentifier","src":"18314:6:39"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"18254:52:39","nodeType":"YulIdentifier","src":"18254:52:39"},"nativeSrc":"18254:67:39","nodeType":"YulFunctionCall","src":"18254:67:39"}],"functionName":{"name":"sstore","nativeSrc":"18241:6:39","nodeType":"YulIdentifier","src":"18241:6:39"},"nativeSrc":"18241:81:39","nodeType":"YulFunctionCall","src":"18241:81:39"},"nativeSrc":"18241:81:39","nodeType":"YulExpressionStatement","src":"18241:81:39"}]},"nativeSrc":"18102:230:39","nodeType":"YulCase","src":"18102:230:39","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"17455:6:39","nodeType":"YulIdentifier","src":"17455:6:39"},{"kind":"number","nativeSrc":"17463:2:39","nodeType":"YulLiteral","src":"17463:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"17452:2:39","nodeType":"YulIdentifier","src":"17452:2:39"},"nativeSrc":"17452:14:39","nodeType":"YulFunctionCall","src":"17452:14:39"},"nativeSrc":"17445:887:39","nodeType":"YulSwitch","src":"17445:887:39"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"16943:1395:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"17024:4:39","nodeType":"YulTypedName","src":"17024:4:39","type":""},{"name":"src","nativeSrc":"17030:3:39","nodeType":"YulTypedName","src":"17030:3:39","type":""}],"src":"16943:1395:39"},{"body":{"nativeSrc":"18402:40:39","nodeType":"YulBlock","src":"18402:40:39","statements":[{"nativeSrc":"18413:22:39","nodeType":"YulAssignment","src":"18413:22:39","value":{"arguments":[{"name":"value","nativeSrc":"18429:5:39","nodeType":"YulIdentifier","src":"18429:5:39"}],"functionName":{"name":"mload","nativeSrc":"18423:5:39","nodeType":"YulIdentifier","src":"18423:5:39"},"nativeSrc":"18423:12:39","nodeType":"YulFunctionCall","src":"18423:12:39"},"variableNames":[{"name":"length","nativeSrc":"18413:6:39","nodeType":"YulIdentifier","src":"18413:6:39"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18344:98:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18385:5:39","nodeType":"YulTypedName","src":"18385:5:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18395:6:39","nodeType":"YulTypedName","src":"18395:6:39","type":""}],"src":"18344:98:39"},{"body":{"nativeSrc":"18561:34:39","nodeType":"YulBlock","src":"18561:34:39","statements":[{"nativeSrc":"18571:18:39","nodeType":"YulAssignment","src":"18571:18:39","value":{"name":"pos","nativeSrc":"18586:3:39","nodeType":"YulIdentifier","src":"18586:3:39"},"variableNames":[{"name":"updated_pos","nativeSrc":"18571:11:39","nodeType":"YulIdentifier","src":"18571:11:39"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18448:147:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18533:3:39","nodeType":"YulTypedName","src":"18533:3:39","type":""},{"name":"length","nativeSrc":"18538:6:39","nodeType":"YulTypedName","src":"18538:6:39","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"18549:11:39","nodeType":"YulTypedName","src":"18549:11:39","type":""}],"src":"18448:147:39"},{"body":{"nativeSrc":"18709:278:39","nodeType":"YulBlock","src":"18709:278:39","statements":[{"nativeSrc":"18719:52:39","nodeType":"YulVariableDeclaration","src":"18719:52:39","value":{"arguments":[{"name":"value","nativeSrc":"18765:5:39","nodeType":"YulIdentifier","src":"18765:5:39"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18733:31:39","nodeType":"YulIdentifier","src":"18733:31:39"},"nativeSrc":"18733:38:39","nodeType":"YulFunctionCall","src":"18733:38:39"},"variables":[{"name":"length","nativeSrc":"18723:6:39","nodeType":"YulTypedName","src":"18723:6:39","type":""}]},{"nativeSrc":"18780:95:39","nodeType":"YulAssignment","src":"18780:95:39","value":{"arguments":[{"name":"pos","nativeSrc":"18863:3:39","nodeType":"YulIdentifier","src":"18863:3:39"},{"name":"length","nativeSrc":"18868:6:39","nodeType":"YulIdentifier","src":"18868:6:39"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18787:75:39","nodeType":"YulIdentifier","src":"18787:75:39"},"nativeSrc":"18787:88:39","nodeType":"YulFunctionCall","src":"18787:88:39"},"variableNames":[{"name":"pos","nativeSrc":"18780:3:39","nodeType":"YulIdentifier","src":"18780:3:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18923:5:39","nodeType":"YulIdentifier","src":"18923:5:39"},{"kind":"number","nativeSrc":"18930:4:39","nodeType":"YulLiteral","src":"18930:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18919:3:39","nodeType":"YulIdentifier","src":"18919:3:39"},"nativeSrc":"18919:16:39","nodeType":"YulFunctionCall","src":"18919:16:39"},{"name":"pos","nativeSrc":"18937:3:39","nodeType":"YulIdentifier","src":"18937:3:39"},{"name":"length","nativeSrc":"18942:6:39","nodeType":"YulIdentifier","src":"18942:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"18884:34:39","nodeType":"YulIdentifier","src":"18884:34:39"},"nativeSrc":"18884:65:39","nodeType":"YulFunctionCall","src":"18884:65:39"},"nativeSrc":"18884:65:39","nodeType":"YulExpressionStatement","src":"18884:65:39"},{"nativeSrc":"18958:23:39","nodeType":"YulAssignment","src":"18958:23:39","value":{"arguments":[{"name":"pos","nativeSrc":"18969:3:39","nodeType":"YulIdentifier","src":"18969:3:39"},{"name":"length","nativeSrc":"18974:6:39","nodeType":"YulIdentifier","src":"18974:6:39"}],"functionName":{"name":"add","nativeSrc":"18965:3:39","nodeType":"YulIdentifier","src":"18965:3:39"},"nativeSrc":"18965:16:39","nodeType":"YulFunctionCall","src":"18965:16:39"},"variableNames":[{"name":"end","nativeSrc":"18958:3:39","nodeType":"YulIdentifier","src":"18958:3:39"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18601:386:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18690:5:39","nodeType":"YulTypedName","src":"18690:5:39","type":""},{"name":"pos","nativeSrc":"18697:3:39","nodeType":"YulTypedName","src":"18697:3:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18705:3:39","nodeType":"YulTypedName","src":"18705:3:39","type":""}],"src":"18601:386:39"},{"body":{"nativeSrc":"19127:137:39","nodeType":"YulBlock","src":"19127:137:39","statements":[{"nativeSrc":"19138:100:39","nodeType":"YulAssignment","src":"19138:100:39","value":{"arguments":[{"name":"value0","nativeSrc":"19225:6:39","nodeType":"YulIdentifier","src":"19225:6:39"},{"name":"pos","nativeSrc":"19234:3:39","nodeType":"YulIdentifier","src":"19234:3:39"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19145:79:39","nodeType":"YulIdentifier","src":"19145:79:39"},"nativeSrc":"19145:93:39","nodeType":"YulFunctionCall","src":"19145:93:39"},"variableNames":[{"name":"pos","nativeSrc":"19138:3:39","nodeType":"YulIdentifier","src":"19138:3:39"}]},{"nativeSrc":"19248:10:39","nodeType":"YulAssignment","src":"19248:10:39","value":{"name":"pos","nativeSrc":"19255:3:39","nodeType":"YulIdentifier","src":"19255:3:39"},"variableNames":[{"name":"end","nativeSrc":"19248:3:39","nodeType":"YulIdentifier","src":"19248:3:39"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"18993:271:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19106:3:39","nodeType":"YulTypedName","src":"19106:3:39","type":""},{"name":"value0","nativeSrc":"19112:6:39","nodeType":"YulTypedName","src":"19112:6:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19123:3:39","nodeType":"YulTypedName","src":"19123:3:39","type":""}],"src":"18993:271:39"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"650":[{"length":32,"start":4790},{"length":32,"start":4875},{"length":32,"start":5353}]},"linkReferences":{},"object":"6080604052600436106101405760003560e01c806352d1902d116100b6578063ad3cb1cc1161006f578063ad3cb1cc14610489578063c4d66de8146104b4578063d5391393146104dd578063d547741f14610508578063dd62ed3e14610531578063f72c0d8b1461056e57610140565b806352d1902d1461035157806370a082311461037c57806391d14854146103b957806395d89b41146103f6578063a217fddf14610421578063a9059cbb1461044c57610140565b8063248a9ca311610108578063248a9ca3146102525780632f2ff15d1461028f578063313ce567146102b857806336568abe146102e357806340c10f191461030c5780634f1ef2861461033557610140565b806301ffc9a71461014557806306fdde0314610182578063095ea7b3146101ad57806318160ddd146101ea57806323b872dd14610215575b600080fd5b34801561015157600080fd5b5061016c60048036038101906101679190611e8c565b610599565b6040516101799190611ed4565b60405180910390f35b34801561018e57600080fd5b50610197610613565b6040516101a49190611f7f565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf9190612035565b6106b4565b6040516101e19190611ed4565b60405180910390f35b3480156101f657600080fd5b506101ff6106d7565b60405161020c9190612084565b60405180910390f35b34801561022157600080fd5b5061023c6004803603810190610237919061209f565b6106ef565b6040516102499190611ed4565b60405180910390f35b34801561025e57600080fd5b5061027960048036038101906102749190612128565b61071e565b6040516102869190612164565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b1919061217f565b61074c565b005b3480156102c457600080fd5b506102cd61076e565b6040516102da91906121db565b60405180910390f35b3480156102ef57600080fd5b5061030a6004803603810190610305919061217f565b610777565b005b34801561031857600080fd5b50610333600480360381019061032e9190612035565b6107f2565b005b61034f600480360381019061034a919061232b565b61082b565b005b34801561035d57600080fd5b5061036661084a565b6040516103739190612164565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e9190612387565b61087d565b6040516103b09190612084565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db919061217f565b6108d4565b6040516103ed9190611ed4565b60405180910390f35b34801561040257600080fd5b5061040b61094d565b6040516104189190611f7f565b60405180910390f35b34801561042d57600080fd5b506104366109ee565b6040516104439190612164565b60405180910390f35b34801561045857600080fd5b50610473600480360381019061046e9190612035565b6109f5565b6040516104809190611ed4565b60405180910390f35b34801561049557600080fd5b5061049e610a18565b6040516104ab9190611f7f565b60405180910390f35b3480156104c057600080fd5b506104db60048036038101906104d69190612387565b610a51565b005b3480156104e957600080fd5b506104f2610cbf565b6040516104ff9190612164565b60405180910390f35b34801561051457600080fd5b5061052f600480360381019061052a919061217f565b610ce3565b005b34801561053d57600080fd5b50610558600480360381019061055391906123b4565b610d05565b6040516105659190612084565b60405180910390f35b34801561057a57600080fd5b50610583610d9a565b6040516105909190612164565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061060c575061060b82610dbe565b5b9050919050565b6060600061061f610e28565b905080600301805461063090612423565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90612423565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b505050505091505090565b6000806106bf610e50565b90506106cc818585610e58565b600191505092915050565b6000806106e2610e28565b9050806002015491505090565b6000806106fa610e50565b9050610707858285610e6a565b610712858585610eff565b60019150509392505050565b600080610729610ff3565b905080600001600084815260200190815260200160002060010154915050919050565b6107558261071e565b61075e8161101b565b610768838361102f565b50505050565b60006012905090565b61077f610e50565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107e3576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ed8282611130565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661081c8161101b565b6108268383611232565b505050565b6108336112b4565b61083c8261139a565b61084682826113c8565b5050565b60006108546114e7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600080610888610e28565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6000806108df610ff3565b905080600001600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b60606000610959610e28565b905080600401805461096a90612423565b80601f016020809104026020016040519081016040528092919081815260200182805461099690612423565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b505050505091505090565b6000801b81565b600080610a00610e50565b9050610a0d818585610eff565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6000610a5b61156e565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610aa95750825b9050600060018367ffffffffffffffff16148015610ade575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610aec575080155b15610b23576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610b735760018560000160086101000a81548160ff0219169083151502179055505b610be76040518060400160405280600981526020017f4b6f666920436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4b4f464900000000000000000000000000000000000000000000000000000000815250611582565b610bef611598565b610bf76115a2565b610c046000801b8761102f565b50610c2f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68761102f565b50610c5a7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38761102f565b508315610cb75760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610cae91906124ad565b60405180910390a15b505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610cec8261071e565b610cf58161101b565b610cff8383611130565b50505050565b600080610d10610e28565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b610e6583838360016115ac565b505050565b6000610e768484610d05565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ef95781811015610ee9578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ee0939291906124d7565b60405180910390fd5b610ef8848484840360006115ac565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f715760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f68919061250e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe35760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fda919061250e565b60405180910390fd5b610fee838383611792565b505050565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b61102c81611027610e50565b6119d1565b50565b60008061103a610ff3565b905061104684846108d4565b61112457600181600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506110c0610e50565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061112a565b60009150505b92915050565b60008061113b610ff3565b905061114784846108d4565b1561122657600081600001600086815260200190815260200160002060000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111c2610e50565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600191505061122c565b60009150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112a45760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161129b919061250e565b60405180910390fd5b6112b060008383611792565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061136157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611348611a22565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611398576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36113c48161101b565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561143057506040513d601f19601f8201168201806040525081019061142d919061253e565b60015b61147157816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611468919061250e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146114d857806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016114cf9190612164565b60405180910390fd5b6114e28383611a79565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461156c576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080611579611aec565b90508091505090565b61158a611b17565b6115948282611b57565b5050565b6115a0611b17565b565b6115aa611b17565b565b60006115b6610e28565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361162a5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611621919061250e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361169c5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611693919061250e565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550811561178b578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516117829190612084565b60405180910390a35b5050505050565b600061179c610e28565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117f257818160020160008282546117e6919061259a565b925050819055506118cb565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611881578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611878939291906124d7565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361191657818160020160008282540392505081905550611966565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119c39190612084565b60405180910390a350505050565b6119db82826108d4565b611a1e5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611a159291906125ce565b60405180910390fd5b5050565b6000611a507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611b94565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8282611b9e565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611adf57611ad98282611c6b565b50611ae8565b611ae7611cef565b5b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b611b1f611d2c565b611b55576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b5f611b17565b6000611b69610e28565b905082816003019081611b7c9190612799565b5081816004019081611b8e9190612799565b50505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03611bfa57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611bf1919061250e565b60405180910390fd5b80611c277f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611b94565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611c9591906128b2565b600060405180830381855af49150503d8060008114611cd0576040519150601f19603f3d011682016040523d82523d6000602084013e611cd5565b606091505b5091509150611ce5858383611d4c565b9250505092915050565b6000341115611d2a576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611d3661156e565b60000160089054906101000a900460ff16905090565b606082611d6157611d5c82611ddb565b611dd3565b60008251148015611d89575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611dcb57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611dc2919061250e565b60405180910390fd5b819050611dd4565b5b9392505050565b600081511115611dee5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e6981611e34565b8114611e7457600080fd5b50565b600081359050611e8681611e60565b92915050565b600060208284031215611ea257611ea1611e2a565b5b6000611eb084828501611e77565b91505092915050565b60008115159050919050565b611ece81611eb9565b82525050565b6000602082019050611ee96000830184611ec5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f29578082015181840152602081019050611f0e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f5182611eef565b611f5b8185611efa565b9350611f6b818560208601611f0b565b611f7481611f35565b840191505092915050565b60006020820190508181036000830152611f998184611f46565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fcc82611fa1565b9050919050565b611fdc81611fc1565b8114611fe757600080fd5b50565b600081359050611ff981611fd3565b92915050565b6000819050919050565b61201281611fff565b811461201d57600080fd5b50565b60008135905061202f81612009565b92915050565b6000806040838503121561204c5761204b611e2a565b5b600061205a85828601611fea565b925050602061206b85828601612020565b9150509250929050565b61207e81611fff565b82525050565b60006020820190506120996000830184612075565b92915050565b6000806000606084860312156120b8576120b7611e2a565b5b60006120c686828701611fea565b93505060206120d786828701611fea565b92505060406120e886828701612020565b9150509250925092565b6000819050919050565b612105816120f2565b811461211057600080fd5b50565b600081359050612122816120fc565b92915050565b60006020828403121561213e5761213d611e2a565b5b600061214c84828501612113565b91505092915050565b61215e816120f2565b82525050565b60006020820190506121796000830184612155565b92915050565b6000806040838503121561219657612195611e2a565b5b60006121a485828601612113565b92505060206121b585828601611fea565b9150509250929050565b600060ff82169050919050565b6121d5816121bf565b82525050565b60006020820190506121f060008301846121cc565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61223882611f35565b810181811067ffffffffffffffff8211171561225757612256612200565b5b80604052505050565b600061226a611e20565b9050612276828261222f565b919050565b600067ffffffffffffffff82111561229657612295612200565b5b61229f82611f35565b9050602081019050919050565b82818337600083830152505050565b60006122ce6122c98461227b565b612260565b9050828152602081018484840111156122ea576122e96121fb565b5b6122f58482856122ac565b509392505050565b600082601f830112612312576123116121f6565b5b81356123228482602086016122bb565b91505092915050565b6000806040838503121561234257612341611e2a565b5b600061235085828601611fea565b925050602083013567ffffffffffffffff81111561237157612370611e2f565b5b61237d858286016122fd565b9150509250929050565b60006020828403121561239d5761239c611e2a565b5b60006123ab84828501611fea565b91505092915050565b600080604083850312156123cb576123ca611e2a565b5b60006123d985828601611fea565b92505060206123ea85828601611fea565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061243b57607f821691505b60208210810361244e5761244d6123f4565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061249761249261248d84612454565b612472565b61245e565b9050919050565b6124a78161247c565b82525050565b60006020820190506124c2600083018461249e565b92915050565b6124d181611fc1565b82525050565b60006060820190506124ec60008301866124c8565b6124f96020830185612075565b6125066040830184612075565b949350505050565b600060208201905061252360008301846124c8565b92915050565b600081519050612538816120fc565b92915050565b60006020828403121561255457612553611e2a565b5b600061256284828501612529565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125a582611fff565b91506125b083611fff565b92508282019050808211156125c8576125c761256b565b5b92915050565b60006040820190506125e360008301856124c8565b6125f06020830184612155565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261261c565b612663868361261c565b95508019841693508086168417925050509392505050565b600061269661269161268c84611fff565b612472565b611fff565b9050919050565b6000819050919050565b6126b08361267b565b6126c46126bc8261269d565b848454612629565b825550505050565b600090565b6126d96126cc565b6126e48184846126a7565b505050565b5b81811015612708576126fd6000826126d1565b6001810190506126ea565b5050565b601f82111561274d5761271e816125f7565b6127278461260c565b81016020851015612736578190505b61274a6127428561260c565b8301826126e9565b50505b505050565b600082821c905092915050565b600061277060001984600802612752565b1980831691505092915050565b6000612789838361275f565b9150826002028217905092915050565b6127a282611eef565b67ffffffffffffffff8111156127bb576127ba612200565b5b6127c58254612423565b6127d082828561270c565b600060209050601f83116001811461280357600084156127f1578287015190505b6127fb858261277d565b865550612863565b601f198416612811866125f7565b60005b8281101561283957848901518255600182019150602085019450602081019050612814565b868310156128565784890151612852601f89168261275f565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600081905092915050565b600061288c8261286b565b6128968185612876565b93506128a6818560208601611f0b565b80840191505092915050565b60006128be8284612881565b91508190509291505056fea264697066735822122043a2f3221be8cfb5937e09aa9991e1b843ffe6096b178003caae655b17b5224364736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x56E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x44C JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x335 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FF PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40B PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x436 PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x583 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x60C JUMPI POP PUSH2 0x60B DUP3 PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x61F PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x630 SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65C SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x67E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BF PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CC DUP2 DUP6 DUP6 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E2 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6FA PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH2 0x707 DUP6 DUP3 DUP6 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x712 DUP6 DUP6 DUP6 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x729 PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x755 DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x768 DUP4 DUP4 PUSH2 0x102F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x77F PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7ED DUP3 DUP3 PUSH2 0x1130 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x81C DUP2 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x826 DUP4 DUP4 PUSH2 0x1232 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x833 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x83C DUP3 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x846 DUP3 DUP3 PUSH2 0x13C8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x854 PUSH2 0x14E7 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x888 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8DF PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x959 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x96A SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x996 SWAP1 PUSH2 0x2423 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA00 PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH2 0xA0D DUP2 DUP6 DUP6 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5B PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAA9 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xADE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAEC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB73 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBE7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B6F666920436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B4F464900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1582 JUMP JUMPDEST PUSH2 0xBEF PUSH2 0x1598 JUMP JUMPDEST PUSH2 0xBF7 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0xC04 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x102F JUMP JUMPDEST POP PUSH2 0xC2F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP8 PUSH2 0x102F JUMP JUMPDEST POP PUSH2 0xC5A PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x102F JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xCEC DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0x101B JUMP JUMPDEST PUSH2 0xCFF DUP4 DUP4 PUSH2 0x1130 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD10 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE65 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE76 DUP5 DUP5 PUSH2 0xD05 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xEF9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEF8 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF71 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFEE DUP4 DUP4 DUP4 PUSH2 0x1792 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x1027 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x19D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x103A PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1046 DUP5 DUP5 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x1124 JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10C0 PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x112A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x113B PUSH2 0xFF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1147 DUP5 DUP5 PUSH2 0x8D4 JUMP JUMPDEST ISZERO PUSH2 0x1226 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11C2 PUSH2 0xE50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x122C JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12B0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1792 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1361 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1348 PUSH2 0x1A22 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x13C4 DUP2 PUSH2 0x101B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1430 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x142D SWAP2 SWAP1 PUSH2 0x253E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1471 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x14D8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x2164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14E2 DUP4 DUP4 PUSH2 0x1A79 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x156C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1579 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x158A PUSH2 0x1B17 JUMP JUMPDEST PUSH2 0x1594 DUP3 DUP3 PUSH2 0x1B57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15A0 PUSH2 0x1B17 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x15AA PUSH2 0x1B17 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B6 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x162A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1621 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x178B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179C PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F2 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17E6 SWAP2 SWAP1 PUSH2 0x259A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1881 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1878 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1916 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1966 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x19DB DUP3 DUP3 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x1A1E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A15 SWAP3 SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A50 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A82 DUP3 PUSH2 0x1B9E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1AD9 DUP3 DUP3 PUSH2 0x1C6B JUMP JUMPDEST POP PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x1AE7 PUSH2 0x1CEF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B1F PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B5F PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B69 PUSH2 0xE28 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B7C SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x2799 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BFA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF1 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1C27 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C95 SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CD0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CE5 DUP6 DUP4 DUP4 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D36 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1D61 JUMPI PUSH2 0x1D5C DUP3 PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1D89 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1DCB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DC2 SWAP2 SWAP1 PUSH2 0x250E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1DEE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E69 DUP2 PUSH2 0x1E34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E86 DUP2 PUSH2 0x1E60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH2 0x1EA1 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1E77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ECE DUP2 PUSH2 0x1EB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F29 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F51 DUP3 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1F5B DUP2 DUP6 PUSH2 0x1EFA JUMP JUMPDEST SWAP4 POP PUSH2 0x1F6B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x1F74 DUP2 PUSH2 0x1F35 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F99 DUP2 DUP5 PUSH2 0x1F46 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCC DUP3 PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDC DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2012 DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP2 EQ PUSH2 0x201D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202F DUP2 PUSH2 0x2009 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x204C JUMPI PUSH2 0x204B PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205A DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x206B DUP6 DUP3 DUP7 ADD PUSH2 0x2020 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x207E DUP2 PUSH2 0x1FFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2099 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2075 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20D7 DUP7 DUP3 DUP8 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20E8 DUP7 DUP3 DUP8 ADD PUSH2 0x2020 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2122 DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x213E JUMPI PUSH2 0x213D PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214C DUP5 DUP3 DUP6 ADD PUSH2 0x2113 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x215E DUP2 PUSH2 0x20F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2196 JUMPI PUSH2 0x2195 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21A4 DUP6 DUP3 DUP7 ADD PUSH2 0x2113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21B5 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D5 DUP2 PUSH2 0x21BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2238 DUP3 PUSH2 0x1F35 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x2200 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226A PUSH2 0x1E20 JUMP JUMPDEST SWAP1 POP PUSH2 0x2276 DUP3 DUP3 PUSH2 0x222F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2296 JUMPI PUSH2 0x2295 PUSH2 0x2200 JUMP JUMPDEST JUMPDEST PUSH2 0x229F DUP3 PUSH2 0x1F35 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CE PUSH2 0x22C9 DUP5 PUSH2 0x227B JUMP JUMPDEST PUSH2 0x2260 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22EA JUMPI PUSH2 0x22E9 PUSH2 0x21FB JUMP JUMPDEST JUMPDEST PUSH2 0x22F5 DUP5 DUP3 DUP6 PUSH2 0x22AC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2312 JUMPI PUSH2 0x2311 PUSH2 0x21F6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2322 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2342 JUMPI PUSH2 0x2341 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2350 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH2 0x2370 PUSH2 0x1E2F JUMP JUMPDEST JUMPDEST PUSH2 0x237D DUP6 DUP3 DUP7 ADD PUSH2 0x22FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x239D JUMPI PUSH2 0x239C PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23AB DUP5 DUP3 DUP6 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23EA DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x243B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x23F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2497 PUSH2 0x2492 PUSH2 0x248D DUP5 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x2472 JUMP JUMPDEST PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A7 DUP2 PUSH2 0x247C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x249E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24D1 DUP2 PUSH2 0x1FC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24EC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x24F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x2506 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2075 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2523 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2538 DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x1E2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2562 DUP5 DUP3 DUP6 ADD PUSH2 0x2529 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25A5 DUP3 PUSH2 0x1FFF JUMP JUMPDEST SWAP2 POP PUSH2 0x25B0 DUP4 PUSH2 0x1FFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25C8 JUMPI PUSH2 0x25C7 PUSH2 0x256B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x24C8 JUMP JUMPDEST PUSH2 0x25F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2155 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2659 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x2663 DUP7 DUP4 PUSH2 0x261C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2696 PUSH2 0x2691 PUSH2 0x268C DUP5 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x2472 JUMP JUMPDEST PUSH2 0x1FFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26B0 DUP4 PUSH2 0x267B JUMP JUMPDEST PUSH2 0x26C4 PUSH2 0x26BC DUP3 PUSH2 0x269D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2629 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x26D9 PUSH2 0x26CC JUMP JUMPDEST PUSH2 0x26E4 DUP2 DUP5 DUP5 PUSH2 0x26A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2708 JUMPI PUSH2 0x26FD PUSH1 0x0 DUP3 PUSH2 0x26D1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x274D JUMPI PUSH2 0x271E DUP2 PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x2727 DUP5 PUSH2 0x260C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2736 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x274A PUSH2 0x2742 DUP6 PUSH2 0x260C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26E9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2770 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2752 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 DUP4 DUP4 PUSH2 0x275F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27A2 DUP3 PUSH2 0x1EEF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27BB JUMPI PUSH2 0x27BA PUSH2 0x2200 JUMP JUMPDEST JUMPDEST PUSH2 0x27C5 DUP3 SLOAD PUSH2 0x2423 JUMP JUMPDEST PUSH2 0x27D0 DUP3 DUP3 DUP6 PUSH2 0x270C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2803 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x27F1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x27FB DUP6 DUP3 PUSH2 0x277D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2863 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2811 DUP7 PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2839 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2814 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2856 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2852 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x275F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288C DUP3 PUSH2 0x286B JUMP JUMPDEST PUSH2 0x2896 DUP2 DUP6 PUSH2 0x2876 JUMP JUMPDEST SWAP4 POP PUSH2 0x28A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F0B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BE DUP3 DUP5 PUSH2 0x2881 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER LOG2 RETURN 0x22 SHL 0xE8 0xCF 0xB5 SWAP4 PUSH31 0x9AA9991E1B843FFE6096B178003CAAE655B17B5224364736F6C6343000818 STOP CALLER ","sourceMap":"298:744:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2697:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5191:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3877:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5969:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3735:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6348:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;831:105:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4087:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4453:178:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:299:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;385:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4689:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;453:66:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3443:202:0;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;2697:144:3:-;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5191:186::-;5264:4;5280:13;5296:12;:10;:12::i;:::-;5280:28;;5318:31;5327:5;5334:7;5343:5;5318:8;:31::i;:::-;5366:4;5359:11;;;5191:186;;;;:::o;3877:152::-;3929:7;3948:22;3973:18;:16;:18::i;:::-;3948:43;;4008:1;:14;;;4001:21;;;3877:152;:::o;5969:244::-;6056:4;6072:15;6090:12;:10;:12::i;:::-;6072:30;;6112:37;6128:4;6134:7;6143:5;6112:15;:37::i;:::-;6159:26;6169:4;6175:2;6179:5;6159:9;:26::i;:::-;6202:4;6195:11;;;5969:244;;;;;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;3735:82:3:-;3784:5;3808:2;3801:9;;3735:82;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;831:105:36:-;423:24;3191:16:0;3202:4;3191:10;:16::i;:::-;912:17:36::1;918:2;922:6;912:5;:17::i;:::-;831:105:::0;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:14::1;3803:32:2;;3796:39;;3708:134:::0;:::o;4087:171:3:-;4152:7;4171:22;4196:18;:16;:18::i;:::-;4171:43;;4231:1;:11;;:20;4243:7;4231:20;;;;;;;;;;;;;;;;4224:27;;;4087:171;;;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;2954:148:3:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;4453:178:3:-;4522:4;4538:13;4554:12;:10;:12::i;:::-;4538:28;;4576:27;4586:5;4593:2;4597:5;4576:9;:27::i;:::-;4620:4;4613:11;;;4453:178;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;526:299:36:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;590:33:36::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:33::i;:::-;633:22;:20;:22::i;:::-;665:24;:22;:24::i;:::-;699:37;2362:4:0;710:18:36::0;::::1;730:5;699:10;:37::i;:::-;;746:30;423:24;770:5;746:10;:30::i;:::-;;786:32;493:26;812:5;786:10;:32::i;:::-;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;526:299:36;:::o;385:62::-;423:24;385:62;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;4689:195:3:-;4769:7;4788:22;4813:18;:16;:18::i;:::-;4788:43;;4848:1;:13;;:20;4862:5;4848:20;;;;;;;;;;;;;;;:29;4869:7;4848:29;;;;;;;;;;;;;;;;4841:36;;;4689:195;;;;:::o;453:66:36:-;493:26;453:66;:::o;1035:146:5:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;1947:153:3:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;9982:128:3:-;10066:37;10075:5;10082:7;10091:5;10098:4;10066:8;:37::i;:::-;9982:128;;;:::o;11726:476::-;11825:24;11852:25;11862:5;11869:7;11852:9;:25::i;:::-;11825:52;;11910:17;11891:16;:36;11887:309;;;11966:5;11947:16;:24;11943:130;;;12025:7;12034:16;12052:5;11998:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11943:130;12114:57;12123:5;12130:7;12158:5;12139:16;:24;12165:5;12114:8;:57::i;:::-;11887:309;11815:387;11726:476;;;:::o;6586:300::-;6685:1;6669:18;;:4;:18;;;6665:86;;6737:1;6710:30;;;;;;;;;;;:::i;:::-;;;;;;;;6665:86;6778:1;6764:16;;:2;:16;;;6760:86;;6832:1;6803:32;;;;;;;;;;;:::i;:::-;;;;;;;;6760:86;6855:24;6863:4;6869:2;6873:5;6855:7;:24::i;:::-;6586:300;;;:::o;2787:177:0:-;2845:30;2920:28;2910:38;;2787:177;:::o;4148:103::-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;7894:388::-;7972:4;7988:30;8021:26;:24;:26::i;:::-;7988:59;;8061:22;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:1;:8;;:14;8108:4;8099:14;;;;;;;;;;;:22;;:31;8122:7;8099:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8184:12;:10;:12::i;:::-;8157:40;;8175:7;8157:40;;8169:4;8157:40;;;;;;;;;;8218:4;8211:11;;;;;8057:219;8260:5;8253:12;;;7894:388;;;;;:::o;8714:208:3:-;8803:1;8784:21;;:7;:21;;;8780:91;;8857:1;8828:32;;;;;;;;;;;:::i;:::-;;;;;;;;8780:91;8880:35;8896:1;8900:7;8909:5;8880:7;:35::i;:::-;8714:208;;:::o;4578:312:2:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;942:98:36:-;493:26;3191:16:0;3202:4;3191:10;:16::i;:::-;942:98:36;;:::o;6032:538:2:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:14;6233:32:2;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2263:147:3:-;6929:20:1;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;3231:65:0:-;6929:20:1;:18;:20::i;:::-;3231:65:0:o;2970:67:2:-;6929:20:1;:18;:20::i;:::-;2970:67:2:o;10957:487:3:-;11065:22;11090:18;:16;:18::i;:::-;11065:43;;11139:1;11122:19;;:5;:19;;;11118:89;;11193:1;11164:32;;;;;;;;;;;:::i;:::-;;;;;;;;11118:89;11239:1;11220:21;;:7;:21;;;11216:90;;11292:1;11264:31;;;;;;;;;;;:::i;:::-;;;;;;;;11216:90;11347:5;11315:1;:13;;:20;11329:5;11315:20;;;;;;;;;;;;;;;:29;11336:7;11315:29;;;;;;;;;;;;;;;:37;;;;11366:9;11362:76;;;11412:7;11396:31;;11405:5;11396:31;;;11421:5;11396:31;;;;;;:::i;:::-;;;;;;;;11362:76;11055:389;10957:487;;;;:::o;7201:1170::-;7286:22;7311:18;:16;:18::i;:::-;7286:43;;7359:1;7343:18;;:4;:18;;;7339:546;;7497:5;7479:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7339:546;;;7533:19;7555:1;:11;;:17;7567:4;7555:17;;;;;;;;;;;;;;;;7533:39;;7604:5;7590:11;:19;7586:115;;;7661:4;7667:11;7680:5;7636:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7586:115;7855:5;7841:11;:19;7821:1;:11;;:17;7833:4;7821:17;;;;;;;;;;;;;;;:39;;;;7519:366;7339:546;7913:1;7899:16;;:2;:16;;;7895:429;;8080:5;8062:1;:14;;;:23;;;;;;;;;;;7895:429;;;8294:5;8275:1;:11;;:15;8287:2;8275:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7895:429;8354:2;8339:25;;8348:4;8339:25;;;8358:5;8339:25;;;;;;:::i;:::-;;;;;;;;7276:1095;7201:1170;;;:::o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;1441:138:14:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:3:-;6929:20:1;:18;:20::i;:::-;2528:22:3::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;1899:163:28:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:14:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:24:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:14:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;4437:582:24:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:39;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:117::-;7242:1;7239;7232:12;7256:117;7365:1;7362;7355:12;7379:180;7427:77;7424:1;7417:88;7524:4;7521:1;7514:15;7548:4;7545:1;7538:15;7565:281;7648:27;7670:4;7648:27;:::i;:::-;7640:6;7636:40;7778:6;7766:10;7763:22;7742:18;7730:10;7727:34;7724:62;7721:88;;;7789:18;;:::i;:::-;7721:88;7829:10;7825:2;7818:22;7608:238;7565:281;;:::o;7852:129::-;7886:6;7913:20;;:::i;:::-;7903:30;;7942:33;7970:4;7962:6;7942:33;:::i;:::-;7852:129;;;:::o;7987:307::-;8048:4;8138:18;8130:6;8127:30;8124:56;;;8160:18;;:::i;:::-;8124:56;8198:29;8220:6;8198:29;:::i;:::-;8190:37;;8282:4;8276;8272:15;8264:23;;7987:307;;;:::o;8300:146::-;8397:6;8392:3;8387;8374:30;8438:1;8429:6;8424:3;8420:16;8413:27;8300:146;;;:::o;8452:423::-;8529:5;8554:65;8570:48;8611:6;8570:48;:::i;:::-;8554:65;:::i;:::-;8545:74;;8642:6;8635:5;8628:21;8680:4;8673:5;8669:16;8718:3;8709:6;8704:3;8700:16;8697:25;8694:112;;;8725:79;;:::i;:::-;8694:112;8815:54;8862:6;8857:3;8852;8815:54;:::i;:::-;8535:340;8452:423;;;;;:::o;8894:338::-;8949:5;8998:3;8991:4;8983:6;8979:17;8975:27;8965:122;;9006:79;;:::i;:::-;8965:122;9123:6;9110:20;9148:78;9222:3;9214:6;9207:4;9199:6;9195:17;9148:78;:::i;:::-;9139:87;;8955:277;8894:338;;;;:::o;9238:652::-;9315:6;9323;9372:2;9360:9;9351:7;9347:23;9343:32;9340:119;;;9378:79;;:::i;:::-;9340:119;9498:1;9523:53;9568:7;9559:6;9548:9;9544:22;9523:53;:::i;:::-;9513:63;;9469:117;9653:2;9642:9;9638:18;9625:32;9684:18;9676:6;9673:30;9670:117;;;9706:79;;:::i;:::-;9670:117;9811:62;9865:7;9856:6;9845:9;9841:22;9811:62;:::i;:::-;9801:72;;9596:287;9238:652;;;;;:::o;9896:329::-;9955:6;10004:2;9992:9;9983:7;9979:23;9975:32;9972:119;;;10010:79;;:::i;:::-;9972:119;10130:1;10155:53;10200:7;10191:6;10180:9;10176:22;10155:53;:::i;:::-;10145:63;;10101:117;9896:329;;;;:::o;10231:474::-;10299:6;10307;10356:2;10344:9;10335:7;10331:23;10327:32;10324:119;;;10362:79;;:::i;:::-;10324:119;10482:1;10507:53;10552:7;10543:6;10532:9;10528:22;10507:53;:::i;:::-;10497:63;;10453:117;10609:2;10635:53;10680:7;10671:6;10660:9;10656:22;10635:53;:::i;:::-;10625:63;;10580:118;10231:474;;;;;:::o;10711:180::-;10759:77;10756:1;10749:88;10856:4;10853:1;10846:15;10880:4;10877:1;10870:15;10897:320;10941:6;10978:1;10972:4;10968:12;10958:22;;11025:1;11019:4;11015:12;11046:18;11036:81;;11102:4;11094:6;11090:17;11080:27;;11036:81;11164:2;11156:6;11153:14;11133:18;11130:38;11127:84;;11183:18;;:::i;:::-;11127:84;10948:269;10897:320;;;:::o;11223:85::-;11268:7;11297:5;11286:16;;11223:85;;;:::o;11314:101::-;11350:7;11390:18;11383:5;11379:30;11368:41;;11314:101;;;:::o;11421:60::-;11449:3;11470:5;11463:12;;11421:60;;;:::o;11487:156::-;11544:9;11577:60;11594:42;11603:32;11629:5;11603:32;:::i;:::-;11594:42;:::i;:::-;11577:60;:::i;:::-;11564:73;;11487:156;;;:::o;11649:145::-;11743:44;11781:5;11743:44;:::i;:::-;11738:3;11731:57;11649:145;;:::o;11800:236::-;11900:4;11938:2;11927:9;11923:18;11915:26;;11951:78;12026:1;12015:9;12011:17;12002:6;11951:78;:::i;:::-;11800:236;;;;:::o;12042:118::-;12129:24;12147:5;12129:24;:::i;:::-;12124:3;12117:37;12042:118;;:::o;12166:442::-;12315:4;12353:2;12342:9;12338:18;12330:26;;12366:71;12434:1;12423:9;12419:17;12410:6;12366:71;:::i;:::-;12447:72;12515:2;12504:9;12500:18;12491:6;12447:72;:::i;:::-;12529;12597:2;12586:9;12582:18;12573:6;12529:72;:::i;:::-;12166:442;;;;;;:::o;12614:222::-;12707:4;12745:2;12734:9;12730:18;12722:26;;12758:71;12826:1;12815:9;12811:17;12802:6;12758:71;:::i;:::-;12614:222;;;;:::o;12842:143::-;12899:5;12930:6;12924:13;12915:22;;12946:33;12973:5;12946:33;:::i;:::-;12842:143;;;;:::o;12991:351::-;13061:6;13110:2;13098:9;13089:7;13085:23;13081:32;13078:119;;;13116:79;;:::i;:::-;13078:119;13236:1;13261:64;13317:7;13308:6;13297:9;13293:22;13261:64;:::i;:::-;13251:74;;13207:128;12991:351;;;;:::o;13348:180::-;13396:77;13393:1;13386:88;13493:4;13490:1;13483:15;13517:4;13514:1;13507:15;13534:191;13574:3;13593:20;13611:1;13593:20;:::i;:::-;13588:25;;13627:20;13645:1;13627:20;:::i;:::-;13622:25;;13670:1;13667;13663:9;13656:16;;13691:3;13688:1;13685:10;13682:36;;;13698:18;;:::i;:::-;13682:36;13534:191;;;;:::o;13731:332::-;13852:4;13890:2;13879:9;13875:18;13867:26;;13903:71;13971:1;13960:9;13956:17;13947:6;13903:71;:::i;:::-;13984:72;14052:2;14041:9;14037:18;14028:6;13984:72;:::i;:::-;13731:332;;;;;:::o;14069:141::-;14118:4;14141:3;14133:11;;14164:3;14161:1;14154:14;14198:4;14195:1;14185:18;14177:26;;14069:141;;;:::o;14216:93::-;14253:6;14300:2;14295;14288:5;14284:14;14280:23;14270:33;;14216:93;;;:::o;14315:107::-;14359:8;14409:5;14403:4;14399:16;14378:37;;14315:107;;;;:::o;14428:393::-;14497:6;14547:1;14535:10;14531:18;14570:97;14600:66;14589:9;14570:97;:::i;:::-;14688:39;14718:8;14707:9;14688:39;:::i;:::-;14676:51;;14760:4;14756:9;14749:5;14745:21;14736:30;;14809:4;14799:8;14795:19;14788:5;14785:30;14775:40;;14504:317;;14428:393;;;;;:::o;14827:142::-;14877:9;14910:53;14928:34;14937:24;14955:5;14937:24;:::i;:::-;14928:34;:::i;:::-;14910:53;:::i;:::-;14897:66;;14827:142;;;:::o;14975:75::-;15018:3;15039:5;15032:12;;14975:75;;;:::o;15056:269::-;15166:39;15197:7;15166:39;:::i;:::-;15227:91;15276:41;15300:16;15276:41;:::i;:::-;15268:6;15261:4;15255:11;15227:91;:::i;:::-;15221:4;15214:105;15132:193;15056:269;;;:::o;15331:73::-;15376:3;15331:73;:::o;15410:189::-;15487:32;;:::i;:::-;15528:65;15586:6;15578;15572:4;15528:65;:::i;:::-;15463:136;15410:189;;:::o;15605:186::-;15665:120;15682:3;15675:5;15672:14;15665:120;;;15736:39;15773:1;15766:5;15736:39;:::i;:::-;15709:1;15702:5;15698:13;15689:22;;15665:120;;;15605:186;;:::o;15797:543::-;15898:2;15893:3;15890:11;15887:446;;;15932:38;15964:5;15932:38;:::i;:::-;16016:29;16034:10;16016:29;:::i;:::-;16006:8;16002:44;16199:2;16187:10;16184:18;16181:49;;;16220:8;16205:23;;16181:49;16243:80;16299:22;16317:3;16299:22;:::i;:::-;16289:8;16285:37;16272:11;16243:80;:::i;:::-;15902:431;;15887:446;15797:543;;;:::o;16346:117::-;16400:8;16450:5;16444:4;16440:16;16419:37;;16346:117;;;;:::o;16469:169::-;16513:6;16546:51;16594:1;16590:6;16582:5;16579:1;16575:13;16546:51;:::i;:::-;16542:56;16627:4;16621;16617:15;16607:25;;16520:118;16469:169;;;;:::o;16643:295::-;16719:4;16865:29;16890:3;16884:4;16865:29;:::i;:::-;16857:37;;16927:3;16924:1;16920:11;16914:4;16911:21;16903:29;;16643:295;;;;:::o;16943:1395::-;17060:37;17093:3;17060:37;:::i;:::-;17162:18;17154:6;17151:30;17148:56;;;17184:18;;:::i;:::-;17148:56;17228:38;17260:4;17254:11;17228:38;:::i;:::-;17313:67;17373:6;17365;17359:4;17313:67;:::i;:::-;17407:1;17431:4;17418:17;;17463:2;17455:6;17452:14;17480:1;17475:618;;;;18137:1;18154:6;18151:77;;;18203:9;18198:3;18194:19;18188:26;18179:35;;18151:77;18254:67;18314:6;18307:5;18254:67;:::i;:::-;18248:4;18241:81;18110:222;17445:887;;17475:618;17527:4;17523:9;17515:6;17511:22;17561:37;17593:4;17561:37;:::i;:::-;17620:1;17634:208;17648:7;17645:1;17642:14;17634:208;;;17727:9;17722:3;17718:19;17712:26;17704:6;17697:42;17778:1;17770:6;17766:14;17756:24;;17825:2;17814:9;17810:18;17797:31;;17671:4;17668:1;17664:12;17659:17;;17634:208;;;17870:6;17861:7;17858:19;17855:179;;;17928:9;17923:3;17919:19;17913:26;17971:48;18013:4;18005:6;18001:17;17990:9;17971:48;:::i;:::-;17963:6;17956:64;17878:156;17855:179;18080:1;18076;18068:6;18064:14;18060:22;18054:4;18047:36;17482:611;;;17445:887;;17035:1303;;;16943:1395;;:::o;18344:98::-;18395:6;18429:5;18423:12;18413:22;;18344:98;;;:::o;18448:147::-;18549:11;18586:3;18571:18;;18448:147;;;;:::o;18601:386::-;18705:3;18733:38;18765:5;18733:38;:::i;:::-;18787:88;18868:6;18863:3;18787:88;:::i;:::-;18780:95;;18884:65;18942:6;18937:3;18930:4;18923:5;18919:16;18884:65;:::i;:::-;18974:6;18969:3;18965:16;18958:23;;18709:278;18601:386;;;;:::o;18993:271::-;19123:3;19145:93;19234:3;19225:6;19145:93;:::i;:::-;19138:100;;19255:3;19248:10;;18993:271;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","UPGRADER_ROLE()":"f72c0d8b","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address)":"c4d66de8","mint(address,uint256)":"40c10f19","name()":"06fdde03","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KofiCoin.sol\":\"KofiCoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa0e86b70fa5a7bd63795161c0882676fde6a18bbb1991938ef014fb0184b4b13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1727a5d693a56ed6af48bace20d8ec26232f0a8f78ff482c5a691cc5c348a019\",\"dweb:/ipfs/QmdXaYmoETBqAv4YBnSmZyuoovjQMsDjfjnCnBFqXhhQEB\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/KofiCoin.sol\":{\"keccak256\":\"0x490431a0efc5f690744e30e9e57322784b23a3c583d29c89a6c3175482867450\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520bd4f9537334e4497d659db19a130c5d566751d9e60ad0a52de8e5d1b2e277\",\"dweb:/ipfs/QmSpiXZGjxAzjNLnsQVG4GtySAN31JL5NnVCCLowb9xGZ8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/LearningModuleNFT.sol":{"LearningModuleNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasMinted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1649":{"entryPoint":null,"id":1649,"parameterSlots":1,"returnSlots":0},"@_2424":{"entryPoint":null,"id":2424,"parameterSlots":2,"returnSlots":0},"@_9255":{"entryPoint":null,"id":9255,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_1745":{"entryPoint":306,"id":1745,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1438,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":662,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":983,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":944,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":818,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":683,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1108,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1076,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":515,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1063,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":916,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":712,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":868,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":911,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:5817:39","nodeType":"YulBlock","src":"0:5817:39","statements":[{"body":{"nativeSrc":"66:40:39","nodeType":"YulBlock","src":"66:40:39","statements":[{"nativeSrc":"77:22:39","nodeType":"YulAssignment","src":"77:22:39","value":{"arguments":[{"name":"value","nativeSrc":"93:5:39","nodeType":"YulIdentifier","src":"93:5:39"}],"functionName":{"name":"mload","nativeSrc":"87:5:39","nodeType":"YulIdentifier","src":"87:5:39"},"nativeSrc":"87:12:39","nodeType":"YulFunctionCall","src":"87:12:39"},"variableNames":[{"name":"length","nativeSrc":"77:6:39","nodeType":"YulIdentifier","src":"77:6:39"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:39","nodeType":"YulTypedName","src":"49:5:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:39","nodeType":"YulTypedName","src":"59:6:39","type":""}],"src":"7:99:39"},{"body":{"nativeSrc":"140:152:39","nodeType":"YulBlock","src":"140:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:39","nodeType":"YulLiteral","src":"157:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:39","nodeType":"YulLiteral","src":"160:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:39","nodeType":"YulIdentifier","src":"150:6:39"},"nativeSrc":"150:88:39","nodeType":"YulFunctionCall","src":"150:88:39"},"nativeSrc":"150:88:39","nodeType":"YulExpressionStatement","src":"150:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:39","nodeType":"YulLiteral","src":"254:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:39","nodeType":"YulLiteral","src":"257:4:39","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:39","nodeType":"YulIdentifier","src":"247:6:39"},"nativeSrc":"247:15:39","nodeType":"YulFunctionCall","src":"247:15:39"},"nativeSrc":"247:15:39","nodeType":"YulExpressionStatement","src":"247:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:39","nodeType":"YulLiteral","src":"278:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:39","nodeType":"YulLiteral","src":"281:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:39","nodeType":"YulIdentifier","src":"271:6:39"},"nativeSrc":"271:15:39","nodeType":"YulFunctionCall","src":"271:15:39"},"nativeSrc":"271:15:39","nodeType":"YulExpressionStatement","src":"271:15:39"}]},"name":"panic_error_0x41","nativeSrc":"112:180:39","nodeType":"YulFunctionDefinition","src":"112:180:39"},{"body":{"nativeSrc":"326:152:39","nodeType":"YulBlock","src":"326:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:39","nodeType":"YulLiteral","src":"343:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:39","nodeType":"YulLiteral","src":"346:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:39","nodeType":"YulIdentifier","src":"336:6:39"},"nativeSrc":"336:88:39","nodeType":"YulFunctionCall","src":"336:88:39"},"nativeSrc":"336:88:39","nodeType":"YulExpressionStatement","src":"336:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:39","nodeType":"YulLiteral","src":"440:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:39","nodeType":"YulLiteral","src":"443:4:39","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:39","nodeType":"YulIdentifier","src":"433:6:39"},"nativeSrc":"433:15:39","nodeType":"YulFunctionCall","src":"433:15:39"},"nativeSrc":"433:15:39","nodeType":"YulExpressionStatement","src":"433:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:39","nodeType":"YulLiteral","src":"464:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:39","nodeType":"YulLiteral","src":"467:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:39","nodeType":"YulIdentifier","src":"457:6:39"},"nativeSrc":"457:15:39","nodeType":"YulFunctionCall","src":"457:15:39"},"nativeSrc":"457:15:39","nodeType":"YulExpressionStatement","src":"457:15:39"}]},"name":"panic_error_0x22","nativeSrc":"298:180:39","nodeType":"YulFunctionDefinition","src":"298:180:39"},{"body":{"nativeSrc":"535:269:39","nodeType":"YulBlock","src":"535:269:39","statements":[{"nativeSrc":"545:22:39","nodeType":"YulAssignment","src":"545:22:39","value":{"arguments":[{"name":"data","nativeSrc":"559:4:39","nodeType":"YulIdentifier","src":"559:4:39"},{"kind":"number","nativeSrc":"565:1:39","nodeType":"YulLiteral","src":"565:1:39","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:39","nodeType":"YulIdentifier","src":"555:3:39"},"nativeSrc":"555:12:39","nodeType":"YulFunctionCall","src":"555:12:39"},"variableNames":[{"name":"length","nativeSrc":"545:6:39","nodeType":"YulIdentifier","src":"545:6:39"}]},{"nativeSrc":"576:38:39","nodeType":"YulVariableDeclaration","src":"576:38:39","value":{"arguments":[{"name":"data","nativeSrc":"606:4:39","nodeType":"YulIdentifier","src":"606:4:39"},{"kind":"number","nativeSrc":"612:1:39","nodeType":"YulLiteral","src":"612:1:39","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:39","nodeType":"YulIdentifier","src":"602:3:39"},"nativeSrc":"602:12:39","nodeType":"YulFunctionCall","src":"602:12:39"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:39","nodeType":"YulTypedName","src":"580:18:39","type":""}]},{"body":{"nativeSrc":"653:51:39","nodeType":"YulBlock","src":"653:51:39","statements":[{"nativeSrc":"667:27:39","nodeType":"YulAssignment","src":"667:27:39","value":{"arguments":[{"name":"length","nativeSrc":"681:6:39","nodeType":"YulIdentifier","src":"681:6:39"},{"kind":"number","nativeSrc":"689:4:39","nodeType":"YulLiteral","src":"689:4:39","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:39","nodeType":"YulIdentifier","src":"677:3:39"},"nativeSrc":"677:17:39","nodeType":"YulFunctionCall","src":"677:17:39"},"variableNames":[{"name":"length","nativeSrc":"667:6:39","nodeType":"YulIdentifier","src":"667:6:39"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:39","nodeType":"YulIdentifier","src":"633:18:39"}],"functionName":{"name":"iszero","nativeSrc":"626:6:39","nodeType":"YulIdentifier","src":"626:6:39"},"nativeSrc":"626:26:39","nodeType":"YulFunctionCall","src":"626:26:39"},"nativeSrc":"623:81:39","nodeType":"YulIf","src":"623:81:39"},{"body":{"nativeSrc":"756:42:39","nodeType":"YulBlock","src":"756:42:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:39","nodeType":"YulIdentifier","src":"770:16:39"},"nativeSrc":"770:18:39","nodeType":"YulFunctionCall","src":"770:18:39"},"nativeSrc":"770:18:39","nodeType":"YulExpressionStatement","src":"770:18:39"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:39","nodeType":"YulIdentifier","src":"720:18:39"},{"arguments":[{"name":"length","nativeSrc":"743:6:39","nodeType":"YulIdentifier","src":"743:6:39"},{"kind":"number","nativeSrc":"751:2:39","nodeType":"YulLiteral","src":"751:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:39","nodeType":"YulIdentifier","src":"740:2:39"},"nativeSrc":"740:14:39","nodeType":"YulFunctionCall","src":"740:14:39"}],"functionName":{"name":"eq","nativeSrc":"717:2:39","nodeType":"YulIdentifier","src":"717:2:39"},"nativeSrc":"717:38:39","nodeType":"YulFunctionCall","src":"717:38:39"},"nativeSrc":"714:84:39","nodeType":"YulIf","src":"714:84:39"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:39","nodeType":"YulTypedName","src":"519:4:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:39","nodeType":"YulTypedName","src":"528:6:39","type":""}],"src":"484:320:39"},{"body":{"nativeSrc":"864:87:39","nodeType":"YulBlock","src":"864:87:39","statements":[{"nativeSrc":"874:11:39","nodeType":"YulAssignment","src":"874:11:39","value":{"name":"ptr","nativeSrc":"882:3:39","nodeType":"YulIdentifier","src":"882:3:39"},"variableNames":[{"name":"data","nativeSrc":"874:4:39","nodeType":"YulIdentifier","src":"874:4:39"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:39","nodeType":"YulLiteral","src":"902:1:39","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:39","nodeType":"YulIdentifier","src":"905:3:39"}],"functionName":{"name":"mstore","nativeSrc":"895:6:39","nodeType":"YulIdentifier","src":"895:6:39"},"nativeSrc":"895:14:39","nodeType":"YulFunctionCall","src":"895:14:39"},"nativeSrc":"895:14:39","nodeType":"YulExpressionStatement","src":"895:14:39"},{"nativeSrc":"918:26:39","nodeType":"YulAssignment","src":"918:26:39","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:39","nodeType":"YulLiteral","src":"936:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:39","nodeType":"YulLiteral","src":"939:4:39","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:39","nodeType":"YulIdentifier","src":"926:9:39"},"nativeSrc":"926:18:39","nodeType":"YulFunctionCall","src":"926:18:39"},"variableNames":[{"name":"data","nativeSrc":"918:4:39","nodeType":"YulIdentifier","src":"918:4:39"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:39","nodeType":"YulTypedName","src":"851:3:39","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:39","nodeType":"YulTypedName","src":"859:4:39","type":""}],"src":"810:141:39"},{"body":{"nativeSrc":"1001:49:39","nodeType":"YulBlock","src":"1001:49:39","statements":[{"nativeSrc":"1011:33:39","nodeType":"YulAssignment","src":"1011:33:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:39","nodeType":"YulIdentifier","src":"1029:5:39"},{"kind":"number","nativeSrc":"1036:2:39","nodeType":"YulLiteral","src":"1036:2:39","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:39","nodeType":"YulIdentifier","src":"1025:3:39"},"nativeSrc":"1025:14:39","nodeType":"YulFunctionCall","src":"1025:14:39"},{"kind":"number","nativeSrc":"1041:2:39","nodeType":"YulLiteral","src":"1041:2:39","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:39","nodeType":"YulIdentifier","src":"1021:3:39"},"nativeSrc":"1021:23:39","nodeType":"YulFunctionCall","src":"1021:23:39"},"variableNames":[{"name":"result","nativeSrc":"1011:6:39","nodeType":"YulIdentifier","src":"1011:6:39"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:39","nodeType":"YulTypedName","src":"984:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:39","nodeType":"YulTypedName","src":"994:6:39","type":""}],"src":"957:93:39"},{"body":{"nativeSrc":"1109:54:39","nodeType":"YulBlock","src":"1109:54:39","statements":[{"nativeSrc":"1119:37:39","nodeType":"YulAssignment","src":"1119:37:39","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:39","nodeType":"YulIdentifier","src":"1144:4:39"},{"name":"value","nativeSrc":"1150:5:39","nodeType":"YulIdentifier","src":"1150:5:39"}],"functionName":{"name":"shl","nativeSrc":"1140:3:39","nodeType":"YulIdentifier","src":"1140:3:39"},"nativeSrc":"1140:16:39","nodeType":"YulFunctionCall","src":"1140:16:39"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:39","nodeType":"YulIdentifier","src":"1119:8:39"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:39","nodeType":"YulTypedName","src":"1084:4:39","type":""},{"name":"value","nativeSrc":"1090:5:39","nodeType":"YulTypedName","src":"1090:5:39","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:39","nodeType":"YulTypedName","src":"1100:8:39","type":""}],"src":"1056:107:39"},{"body":{"nativeSrc":"1245:317:39","nodeType":"YulBlock","src":"1245:317:39","statements":[{"nativeSrc":"1255:35:39","nodeType":"YulVariableDeclaration","src":"1255:35:39","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:39","nodeType":"YulIdentifier","src":"1276:10:39"},{"kind":"number","nativeSrc":"1288:1:39","nodeType":"YulLiteral","src":"1288:1:39","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:39","nodeType":"YulIdentifier","src":"1272:3:39"},"nativeSrc":"1272:18:39","nodeType":"YulFunctionCall","src":"1272:18:39"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:39","nodeType":"YulTypedName","src":"1259:9:39","type":""}]},{"nativeSrc":"1299:109:39","nodeType":"YulVariableDeclaration","src":"1299:109:39","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:39","nodeType":"YulIdentifier","src":"1330:9:39"},{"kind":"number","nativeSrc":"1341:66:39","nodeType":"YulLiteral","src":"1341:66:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:39","nodeType":"YulIdentifier","src":"1311:18:39"},"nativeSrc":"1311:97:39","nodeType":"YulFunctionCall","src":"1311:97:39"},"variables":[{"name":"mask","nativeSrc":"1303:4:39","nodeType":"YulTypedName","src":"1303:4:39","type":""}]},{"nativeSrc":"1417:51:39","nodeType":"YulAssignment","src":"1417:51:39","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:39","nodeType":"YulIdentifier","src":"1448:9:39"},{"name":"toInsert","nativeSrc":"1459:8:39","nodeType":"YulIdentifier","src":"1459:8:39"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:39","nodeType":"YulIdentifier","src":"1429:18:39"},"nativeSrc":"1429:39:39","nodeType":"YulFunctionCall","src":"1429:39:39"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:39","nodeType":"YulIdentifier","src":"1417:8:39"}]},{"nativeSrc":"1477:30:39","nodeType":"YulAssignment","src":"1477:30:39","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:39","nodeType":"YulIdentifier","src":"1490:5:39"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:39","nodeType":"YulIdentifier","src":"1501:4:39"}],"functionName":{"name":"not","nativeSrc":"1497:3:39","nodeType":"YulIdentifier","src":"1497:3:39"},"nativeSrc":"1497:9:39","nodeType":"YulFunctionCall","src":"1497:9:39"}],"functionName":{"name":"and","nativeSrc":"1486:3:39","nodeType":"YulIdentifier","src":"1486:3:39"},"nativeSrc":"1486:21:39","nodeType":"YulFunctionCall","src":"1486:21:39"},"variableNames":[{"name":"value","nativeSrc":"1477:5:39","nodeType":"YulIdentifier","src":"1477:5:39"}]},{"nativeSrc":"1516:40:39","nodeType":"YulAssignment","src":"1516:40:39","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:39","nodeType":"YulIdentifier","src":"1529:5:39"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:39","nodeType":"YulIdentifier","src":"1540:8:39"},{"name":"mask","nativeSrc":"1550:4:39","nodeType":"YulIdentifier","src":"1550:4:39"}],"functionName":{"name":"and","nativeSrc":"1536:3:39","nodeType":"YulIdentifier","src":"1536:3:39"},"nativeSrc":"1536:19:39","nodeType":"YulFunctionCall","src":"1536:19:39"}],"functionName":{"name":"or","nativeSrc":"1526:2:39","nodeType":"YulIdentifier","src":"1526:2:39"},"nativeSrc":"1526:30:39","nodeType":"YulFunctionCall","src":"1526:30:39"},"variableNames":[{"name":"result","nativeSrc":"1516:6:39","nodeType":"YulIdentifier","src":"1516:6:39"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:39","nodeType":"YulTypedName","src":"1206:5:39","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:39","nodeType":"YulTypedName","src":"1213:10:39","type":""},{"name":"toInsert","nativeSrc":"1225:8:39","nodeType":"YulTypedName","src":"1225:8:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:39","nodeType":"YulTypedName","src":"1238:6:39","type":""}],"src":"1169:393:39"},{"body":{"nativeSrc":"1613:32:39","nodeType":"YulBlock","src":"1613:32:39","statements":[{"nativeSrc":"1623:16:39","nodeType":"YulAssignment","src":"1623:16:39","value":{"name":"value","nativeSrc":"1634:5:39","nodeType":"YulIdentifier","src":"1634:5:39"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:39","nodeType":"YulIdentifier","src":"1623:7:39"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:39","nodeType":"YulTypedName","src":"1595:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:39","nodeType":"YulTypedName","src":"1605:7:39","type":""}],"src":"1568:77:39"},{"body":{"nativeSrc":"1683:28:39","nodeType":"YulBlock","src":"1683:28:39","statements":[{"nativeSrc":"1693:12:39","nodeType":"YulAssignment","src":"1693:12:39","value":{"name":"value","nativeSrc":"1700:5:39","nodeType":"YulIdentifier","src":"1700:5:39"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:39","nodeType":"YulIdentifier","src":"1693:3:39"}]}]},"name":"identity","nativeSrc":"1651:60:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:39","nodeType":"YulTypedName","src":"1669:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:39","nodeType":"YulTypedName","src":"1679:3:39","type":""}],"src":"1651:60:39"},{"body":{"nativeSrc":"1777:82:39","nodeType":"YulBlock","src":"1777:82:39","statements":[{"nativeSrc":"1787:66:39","nodeType":"YulAssignment","src":"1787:66:39","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:39","nodeType":"YulIdentifier","src":"1845:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:39","nodeType":"YulIdentifier","src":"1827:17:39"},"nativeSrc":"1827:24:39","nodeType":"YulFunctionCall","src":"1827:24:39"}],"functionName":{"name":"identity","nativeSrc":"1818:8:39","nodeType":"YulIdentifier","src":"1818:8:39"},"nativeSrc":"1818:34:39","nodeType":"YulFunctionCall","src":"1818:34:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:39","nodeType":"YulIdentifier","src":"1800:17:39"},"nativeSrc":"1800:53:39","nodeType":"YulFunctionCall","src":"1800:53:39"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:39","nodeType":"YulIdentifier","src":"1787:9:39"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:39","nodeType":"YulTypedName","src":"1757:5:39","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:39","nodeType":"YulTypedName","src":"1767:9:39","type":""}],"src":"1717:142:39"},{"body":{"nativeSrc":"1912:28:39","nodeType":"YulBlock","src":"1912:28:39","statements":[{"nativeSrc":"1922:12:39","nodeType":"YulAssignment","src":"1922:12:39","value":{"name":"value","nativeSrc":"1929:5:39","nodeType":"YulIdentifier","src":"1929:5:39"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:39","nodeType":"YulIdentifier","src":"1922:3:39"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:39","nodeType":"YulTypedName","src":"1898:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:39","nodeType":"YulTypedName","src":"1908:3:39","type":""}],"src":"1865:75:39"},{"body":{"nativeSrc":"2022:193:39","nodeType":"YulBlock","src":"2022:193:39","statements":[{"nativeSrc":"2032:63:39","nodeType":"YulVariableDeclaration","src":"2032:63:39","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:39","nodeType":"YulIdentifier","src":"2087:7:39"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:39","nodeType":"YulIdentifier","src":"2056:30:39"},"nativeSrc":"2056:39:39","nodeType":"YulFunctionCall","src":"2056:39:39"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:39","nodeType":"YulTypedName","src":"2036:16:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:39","nodeType":"YulIdentifier","src":"2111:4:39"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:39","nodeType":"YulIdentifier","src":"2151:4:39"}],"functionName":{"name":"sload","nativeSrc":"2145:5:39","nodeType":"YulIdentifier","src":"2145:5:39"},"nativeSrc":"2145:11:39","nodeType":"YulFunctionCall","src":"2145:11:39"},{"name":"offset","nativeSrc":"2158:6:39","nodeType":"YulIdentifier","src":"2158:6:39"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:39","nodeType":"YulIdentifier","src":"2190:16:39"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:39","nodeType":"YulIdentifier","src":"2166:23:39"},"nativeSrc":"2166:41:39","nodeType":"YulFunctionCall","src":"2166:41:39"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:39","nodeType":"YulIdentifier","src":"2117:27:39"},"nativeSrc":"2117:91:39","nodeType":"YulFunctionCall","src":"2117:91:39"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:39","nodeType":"YulIdentifier","src":"2104:6:39"},"nativeSrc":"2104:105:39","nodeType":"YulFunctionCall","src":"2104:105:39"},"nativeSrc":"2104:105:39","nodeType":"YulExpressionStatement","src":"2104:105:39"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:39","nodeType":"YulTypedName","src":"1999:4:39","type":""},{"name":"offset","nativeSrc":"2005:6:39","nodeType":"YulTypedName","src":"2005:6:39","type":""},{"name":"value_0","nativeSrc":"2013:7:39","nodeType":"YulTypedName","src":"2013:7:39","type":""}],"src":"1946:269:39"},{"body":{"nativeSrc":"2270:24:39","nodeType":"YulBlock","src":"2270:24:39","statements":[{"nativeSrc":"2280:8:39","nodeType":"YulAssignment","src":"2280:8:39","value":{"kind":"number","nativeSrc":"2287:1:39","nodeType":"YulLiteral","src":"2287:1:39","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:39","nodeType":"YulIdentifier","src":"2280:3:39"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:39","nodeType":"YulTypedName","src":"2266:3:39","type":""}],"src":"2221:73:39"},{"body":{"nativeSrc":"2353:136:39","nodeType":"YulBlock","src":"2353:136:39","statements":[{"nativeSrc":"2363:46:39","nodeType":"YulVariableDeclaration","src":"2363:46:39","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:39","nodeType":"YulIdentifier","src":"2377:30:39"},"nativeSrc":"2377:32:39","nodeType":"YulFunctionCall","src":"2377:32:39"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:39","nodeType":"YulTypedName","src":"2367:6:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:39","nodeType":"YulIdentifier","src":"2462:4:39"},{"name":"offset","nativeSrc":"2468:6:39","nodeType":"YulIdentifier","src":"2468:6:39"},{"name":"zero_0","nativeSrc":"2476:6:39","nodeType":"YulIdentifier","src":"2476:6:39"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:39","nodeType":"YulIdentifier","src":"2418:43:39"},"nativeSrc":"2418:65:39","nodeType":"YulFunctionCall","src":"2418:65:39"},"nativeSrc":"2418:65:39","nodeType":"YulExpressionStatement","src":"2418:65:39"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:39","nodeType":"YulTypedName","src":"2339:4:39","type":""},{"name":"offset","nativeSrc":"2345:6:39","nodeType":"YulTypedName","src":"2345:6:39","type":""}],"src":"2300:189:39"},{"body":{"nativeSrc":"2545:136:39","nodeType":"YulBlock","src":"2545:136:39","statements":[{"body":{"nativeSrc":"2612:63:39","nodeType":"YulBlock","src":"2612:63:39","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:39","nodeType":"YulIdentifier","src":"2656:5:39"},{"kind":"number","nativeSrc":"2663:1:39","nodeType":"YulLiteral","src":"2663:1:39","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:39","nodeType":"YulIdentifier","src":"2626:29:39"},"nativeSrc":"2626:39:39","nodeType":"YulFunctionCall","src":"2626:39:39"},"nativeSrc":"2626:39:39","nodeType":"YulExpressionStatement","src":"2626:39:39"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:39","nodeType":"YulIdentifier","src":"2565:5:39"},{"name":"end","nativeSrc":"2572:3:39","nodeType":"YulIdentifier","src":"2572:3:39"}],"functionName":{"name":"lt","nativeSrc":"2562:2:39","nodeType":"YulIdentifier","src":"2562:2:39"},"nativeSrc":"2562:14:39","nodeType":"YulFunctionCall","src":"2562:14:39"},"nativeSrc":"2555:120:39","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:39","nodeType":"YulBlock","src":"2577:26:39","statements":[{"nativeSrc":"2579:22:39","nodeType":"YulAssignment","src":"2579:22:39","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:39","nodeType":"YulIdentifier","src":"2592:5:39"},{"kind":"number","nativeSrc":"2599:1:39","nodeType":"YulLiteral","src":"2599:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:39","nodeType":"YulIdentifier","src":"2588:3:39"},"nativeSrc":"2588:13:39","nodeType":"YulFunctionCall","src":"2588:13:39"},"variableNames":[{"name":"start","nativeSrc":"2579:5:39","nodeType":"YulIdentifier","src":"2579:5:39"}]}]},"pre":{"nativeSrc":"2559:2:39","nodeType":"YulBlock","src":"2559:2:39","statements":[]},"src":"2555:120:39"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:39","nodeType":"YulTypedName","src":"2533:5:39","type":""},{"name":"end","nativeSrc":"2540:3:39","nodeType":"YulTypedName","src":"2540:3:39","type":""}],"src":"2495:186:39"},{"body":{"nativeSrc":"2766:464:39","nodeType":"YulBlock","src":"2766:464:39","statements":[{"body":{"nativeSrc":"2792:431:39","nodeType":"YulBlock","src":"2792:431:39","statements":[{"nativeSrc":"2806:54:39","nodeType":"YulVariableDeclaration","src":"2806:54:39","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:39","nodeType":"YulIdentifier","src":"2854:5:39"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:39","nodeType":"YulIdentifier","src":"2822:31:39"},"nativeSrc":"2822:38:39","nodeType":"YulFunctionCall","src":"2822:38:39"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:39","nodeType":"YulTypedName","src":"2810:8:39","type":""}]},{"nativeSrc":"2873:63:39","nodeType":"YulVariableDeclaration","src":"2873:63:39","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:39","nodeType":"YulIdentifier","src":"2896:8:39"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:39","nodeType":"YulIdentifier","src":"2924:10:39"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:39","nodeType":"YulIdentifier","src":"2906:17:39"},"nativeSrc":"2906:29:39","nodeType":"YulFunctionCall","src":"2906:29:39"}],"functionName":{"name":"add","nativeSrc":"2892:3:39","nodeType":"YulIdentifier","src":"2892:3:39"},"nativeSrc":"2892:44:39","nodeType":"YulFunctionCall","src":"2892:44:39"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:39","nodeType":"YulTypedName","src":"2877:11:39","type":""}]},{"body":{"nativeSrc":"3093:27:39","nodeType":"YulBlock","src":"3093:27:39","statements":[{"nativeSrc":"3095:23:39","nodeType":"YulAssignment","src":"3095:23:39","value":{"name":"dataArea","nativeSrc":"3110:8:39","nodeType":"YulIdentifier","src":"3110:8:39"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:39","nodeType":"YulIdentifier","src":"3095:11:39"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:39","nodeType":"YulIdentifier","src":"3077:10:39"},{"kind":"number","nativeSrc":"3089:2:39","nodeType":"YulLiteral","src":"3089:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:39","nodeType":"YulIdentifier","src":"3074:2:39"},"nativeSrc":"3074:18:39","nodeType":"YulFunctionCall","src":"3074:18:39"},"nativeSrc":"3071:49:39","nodeType":"YulIf","src":"3071:49:39"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:39","nodeType":"YulIdentifier","src":"3162:11:39"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:39","nodeType":"YulIdentifier","src":"3179:8:39"},{"arguments":[{"name":"len","nativeSrc":"3207:3:39","nodeType":"YulIdentifier","src":"3207:3:39"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:39","nodeType":"YulIdentifier","src":"3189:17:39"},"nativeSrc":"3189:22:39","nodeType":"YulFunctionCall","src":"3189:22:39"}],"functionName":{"name":"add","nativeSrc":"3175:3:39","nodeType":"YulIdentifier","src":"3175:3:39"},"nativeSrc":"3175:37:39","nodeType":"YulFunctionCall","src":"3175:37:39"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:39","nodeType":"YulIdentifier","src":"3133:28:39"},"nativeSrc":"3133:80:39","nodeType":"YulFunctionCall","src":"3133:80:39"},"nativeSrc":"3133:80:39","nodeType":"YulExpressionStatement","src":"3133:80:39"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:39","nodeType":"YulIdentifier","src":"2783:3:39"},{"kind":"number","nativeSrc":"2788:2:39","nodeType":"YulLiteral","src":"2788:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:39","nodeType":"YulIdentifier","src":"2780:2:39"},"nativeSrc":"2780:11:39","nodeType":"YulFunctionCall","src":"2780:11:39"},"nativeSrc":"2777:446:39","nodeType":"YulIf","src":"2777:446:39"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:39","nodeType":"YulTypedName","src":"2742:5:39","type":""},{"name":"len","nativeSrc":"2749:3:39","nodeType":"YulTypedName","src":"2749:3:39","type":""},{"name":"startIndex","nativeSrc":"2754:10:39","nodeType":"YulTypedName","src":"2754:10:39","type":""}],"src":"2687:543:39"},{"body":{"nativeSrc":"3299:54:39","nodeType":"YulBlock","src":"3299:54:39","statements":[{"nativeSrc":"3309:37:39","nodeType":"YulAssignment","src":"3309:37:39","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:39","nodeType":"YulIdentifier","src":"3334:4:39"},{"name":"value","nativeSrc":"3340:5:39","nodeType":"YulIdentifier","src":"3340:5:39"}],"functionName":{"name":"shr","nativeSrc":"3330:3:39","nodeType":"YulIdentifier","src":"3330:3:39"},"nativeSrc":"3330:16:39","nodeType":"YulFunctionCall","src":"3330:16:39"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:39","nodeType":"YulIdentifier","src":"3309:8:39"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:39","nodeType":"YulTypedName","src":"3274:4:39","type":""},{"name":"value","nativeSrc":"3280:5:39","nodeType":"YulTypedName","src":"3280:5:39","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:39","nodeType":"YulTypedName","src":"3290:8:39","type":""}],"src":"3236:117:39"},{"body":{"nativeSrc":"3410:118:39","nodeType":"YulBlock","src":"3410:118:39","statements":[{"nativeSrc":"3420:68:39","nodeType":"YulVariableDeclaration","src":"3420:68:39","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:39","nodeType":"YulLiteral","src":"3469:1:39","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:39","nodeType":"YulIdentifier","src":"3472:5:39"}],"functionName":{"name":"mul","nativeSrc":"3465:3:39","nodeType":"YulIdentifier","src":"3465:3:39"},"nativeSrc":"3465:13:39","nodeType":"YulFunctionCall","src":"3465:13:39"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:39","nodeType":"YulLiteral","src":"3484:1:39","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:39","nodeType":"YulIdentifier","src":"3480:3:39"},"nativeSrc":"3480:6:39","nodeType":"YulFunctionCall","src":"3480:6:39"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:39","nodeType":"YulIdentifier","src":"3436:28:39"},"nativeSrc":"3436:51:39","nodeType":"YulFunctionCall","src":"3436:51:39"}],"functionName":{"name":"not","nativeSrc":"3432:3:39","nodeType":"YulIdentifier","src":"3432:3:39"},"nativeSrc":"3432:56:39","nodeType":"YulFunctionCall","src":"3432:56:39"},"variables":[{"name":"mask","nativeSrc":"3424:4:39","nodeType":"YulTypedName","src":"3424:4:39","type":""}]},{"nativeSrc":"3497:25:39","nodeType":"YulAssignment","src":"3497:25:39","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:39","nodeType":"YulIdentifier","src":"3511:4:39"},{"name":"mask","nativeSrc":"3517:4:39","nodeType":"YulIdentifier","src":"3517:4:39"}],"functionName":{"name":"and","nativeSrc":"3507:3:39","nodeType":"YulIdentifier","src":"3507:3:39"},"nativeSrc":"3507:15:39","nodeType":"YulFunctionCall","src":"3507:15:39"},"variableNames":[{"name":"result","nativeSrc":"3497:6:39","nodeType":"YulIdentifier","src":"3497:6:39"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:39","nodeType":"YulTypedName","src":"3387:4:39","type":""},{"name":"bytes","nativeSrc":"3393:5:39","nodeType":"YulTypedName","src":"3393:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:39","nodeType":"YulTypedName","src":"3403:6:39","type":""}],"src":"3359:169:39"},{"body":{"nativeSrc":"3614:214:39","nodeType":"YulBlock","src":"3614:214:39","statements":[{"nativeSrc":"3747:37:39","nodeType":"YulAssignment","src":"3747:37:39","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:39","nodeType":"YulIdentifier","src":"3774:4:39"},{"name":"len","nativeSrc":"3780:3:39","nodeType":"YulIdentifier","src":"3780:3:39"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:39","nodeType":"YulIdentifier","src":"3755:18:39"},"nativeSrc":"3755:29:39","nodeType":"YulFunctionCall","src":"3755:29:39"},"variableNames":[{"name":"data","nativeSrc":"3747:4:39","nodeType":"YulIdentifier","src":"3747:4:39"}]},{"nativeSrc":"3793:29:39","nodeType":"YulAssignment","src":"3793:29:39","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:39","nodeType":"YulIdentifier","src":"3804:4:39"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:39","nodeType":"YulLiteral","src":"3814:1:39","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:39","nodeType":"YulIdentifier","src":"3817:3:39"}],"functionName":{"name":"mul","nativeSrc":"3810:3:39","nodeType":"YulIdentifier","src":"3810:3:39"},"nativeSrc":"3810:11:39","nodeType":"YulFunctionCall","src":"3810:11:39"}],"functionName":{"name":"or","nativeSrc":"3801:2:39","nodeType":"YulIdentifier","src":"3801:2:39"},"nativeSrc":"3801:21:39","nodeType":"YulFunctionCall","src":"3801:21:39"},"variableNames":[{"name":"used","nativeSrc":"3793:4:39","nodeType":"YulIdentifier","src":"3793:4:39"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:39","nodeType":"YulTypedName","src":"3595:4:39","type":""},{"name":"len","nativeSrc":"3601:3:39","nodeType":"YulTypedName","src":"3601:3:39","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:39","nodeType":"YulTypedName","src":"3609:4:39","type":""}],"src":"3533:295:39"},{"body":{"nativeSrc":"3925:1303:39","nodeType":"YulBlock","src":"3925:1303:39","statements":[{"nativeSrc":"3936:51:39","nodeType":"YulVariableDeclaration","src":"3936:51:39","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:39","nodeType":"YulIdentifier","src":"3983:3:39"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:39","nodeType":"YulIdentifier","src":"3950:32:39"},"nativeSrc":"3950:37:39","nodeType":"YulFunctionCall","src":"3950:37:39"},"variables":[{"name":"newLen","nativeSrc":"3940:6:39","nodeType":"YulTypedName","src":"3940:6:39","type":""}]},{"body":{"nativeSrc":"4072:22:39","nodeType":"YulBlock","src":"4072:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:39","nodeType":"YulIdentifier","src":"4074:16:39"},"nativeSrc":"4074:18:39","nodeType":"YulFunctionCall","src":"4074:18:39"},"nativeSrc":"4074:18:39","nodeType":"YulExpressionStatement","src":"4074:18:39"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:39","nodeType":"YulIdentifier","src":"4044:6:39"},{"kind":"number","nativeSrc":"4052:18:39","nodeType":"YulLiteral","src":"4052:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:39","nodeType":"YulIdentifier","src":"4041:2:39"},"nativeSrc":"4041:30:39","nodeType":"YulFunctionCall","src":"4041:30:39"},"nativeSrc":"4038:56:39","nodeType":"YulIf","src":"4038:56:39"},{"nativeSrc":"4104:52:39","nodeType":"YulVariableDeclaration","src":"4104:52:39","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:39","nodeType":"YulIdentifier","src":"4150:4:39"}],"functionName":{"name":"sload","nativeSrc":"4144:5:39","nodeType":"YulIdentifier","src":"4144:5:39"},"nativeSrc":"4144:11:39","nodeType":"YulFunctionCall","src":"4144:11:39"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:39","nodeType":"YulIdentifier","src":"4118:25:39"},"nativeSrc":"4118:38:39","nodeType":"YulFunctionCall","src":"4118:38:39"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:39","nodeType":"YulTypedName","src":"4108:6:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:39","nodeType":"YulIdentifier","src":"4249:4:39"},{"name":"oldLen","nativeSrc":"4255:6:39","nodeType":"YulIdentifier","src":"4255:6:39"},{"name":"newLen","nativeSrc":"4263:6:39","nodeType":"YulIdentifier","src":"4263:6:39"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:39","nodeType":"YulIdentifier","src":"4203:45:39"},"nativeSrc":"4203:67:39","nodeType":"YulFunctionCall","src":"4203:67:39"},"nativeSrc":"4203:67:39","nodeType":"YulExpressionStatement","src":"4203:67:39"},{"nativeSrc":"4280:18:39","nodeType":"YulVariableDeclaration","src":"4280:18:39","value":{"kind":"number","nativeSrc":"4297:1:39","nodeType":"YulLiteral","src":"4297:1:39","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:39","nodeType":"YulTypedName","src":"4284:9:39","type":""}]},{"nativeSrc":"4308:17:39","nodeType":"YulAssignment","src":"4308:17:39","value":{"kind":"number","nativeSrc":"4321:4:39","nodeType":"YulLiteral","src":"4321:4:39","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:39","nodeType":"YulIdentifier","src":"4308:9:39"}]},{"cases":[{"body":{"nativeSrc":"4372:611:39","nodeType":"YulBlock","src":"4372:611:39","statements":[{"nativeSrc":"4386:37:39","nodeType":"YulVariableDeclaration","src":"4386:37:39","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:39","nodeType":"YulIdentifier","src":"4405:6:39"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:39","nodeType":"YulLiteral","src":"4417:4:39","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:39","nodeType":"YulIdentifier","src":"4413:3:39"},"nativeSrc":"4413:9:39","nodeType":"YulFunctionCall","src":"4413:9:39"}],"functionName":{"name":"and","nativeSrc":"4401:3:39","nodeType":"YulIdentifier","src":"4401:3:39"},"nativeSrc":"4401:22:39","nodeType":"YulFunctionCall","src":"4401:22:39"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:39","nodeType":"YulTypedName","src":"4390:7:39","type":""}]},{"nativeSrc":"4437:51:39","nodeType":"YulVariableDeclaration","src":"4437:51:39","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:39","nodeType":"YulIdentifier","src":"4483:4:39"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:39","nodeType":"YulIdentifier","src":"4451:31:39"},"nativeSrc":"4451:37:39","nodeType":"YulFunctionCall","src":"4451:37:39"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:39","nodeType":"YulTypedName","src":"4441:6:39","type":""}]},{"nativeSrc":"4501:10:39","nodeType":"YulVariableDeclaration","src":"4501:10:39","value":{"kind":"number","nativeSrc":"4510:1:39","nodeType":"YulLiteral","src":"4510:1:39","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:39","nodeType":"YulTypedName","src":"4505:1:39","type":""}]},{"body":{"nativeSrc":"4569:163:39","nodeType":"YulBlock","src":"4569:163:39","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:39","nodeType":"YulIdentifier","src":"4594:6:39"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:39","nodeType":"YulIdentifier","src":"4612:3:39"},{"name":"srcOffset","nativeSrc":"4617:9:39","nodeType":"YulIdentifier","src":"4617:9:39"}],"functionName":{"name":"add","nativeSrc":"4608:3:39","nodeType":"YulIdentifier","src":"4608:3:39"},"nativeSrc":"4608:19:39","nodeType":"YulFunctionCall","src":"4608:19:39"}],"functionName":{"name":"mload","nativeSrc":"4602:5:39","nodeType":"YulIdentifier","src":"4602:5:39"},"nativeSrc":"4602:26:39","nodeType":"YulFunctionCall","src":"4602:26:39"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:39","nodeType":"YulIdentifier","src":"4587:6:39"},"nativeSrc":"4587:42:39","nodeType":"YulFunctionCall","src":"4587:42:39"},"nativeSrc":"4587:42:39","nodeType":"YulExpressionStatement","src":"4587:42:39"},{"nativeSrc":"4646:24:39","nodeType":"YulAssignment","src":"4646:24:39","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:39","nodeType":"YulIdentifier","src":"4660:6:39"},{"kind":"number","nativeSrc":"4668:1:39","nodeType":"YulLiteral","src":"4668:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:39","nodeType":"YulIdentifier","src":"4656:3:39"},"nativeSrc":"4656:14:39","nodeType":"YulFunctionCall","src":"4656:14:39"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:39","nodeType":"YulIdentifier","src":"4646:6:39"}]},{"nativeSrc":"4687:31:39","nodeType":"YulAssignment","src":"4687:31:39","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:39","nodeType":"YulIdentifier","src":"4704:9:39"},{"kind":"number","nativeSrc":"4715:2:39","nodeType":"YulLiteral","src":"4715:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:39","nodeType":"YulIdentifier","src":"4700:3:39"},"nativeSrc":"4700:18:39","nodeType":"YulFunctionCall","src":"4700:18:39"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:39","nodeType":"YulIdentifier","src":"4687:9:39"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:39","nodeType":"YulIdentifier","src":"4535:1:39"},{"name":"loopEnd","nativeSrc":"4538:7:39","nodeType":"YulIdentifier","src":"4538:7:39"}],"functionName":{"name":"lt","nativeSrc":"4532:2:39","nodeType":"YulIdentifier","src":"4532:2:39"},"nativeSrc":"4532:14:39","nodeType":"YulFunctionCall","src":"4532:14:39"},"nativeSrc":"4524:208:39","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:39","nodeType":"YulBlock","src":"4547:21:39","statements":[{"nativeSrc":"4549:17:39","nodeType":"YulAssignment","src":"4549:17:39","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:39","nodeType":"YulIdentifier","src":"4558:1:39"},{"kind":"number","nativeSrc":"4561:4:39","nodeType":"YulLiteral","src":"4561:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:39","nodeType":"YulIdentifier","src":"4554:3:39"},"nativeSrc":"4554:12:39","nodeType":"YulFunctionCall","src":"4554:12:39"},"variableNames":[{"name":"i","nativeSrc":"4549:1:39","nodeType":"YulIdentifier","src":"4549:1:39"}]}]},"pre":{"nativeSrc":"4528:3:39","nodeType":"YulBlock","src":"4528:3:39","statements":[]},"src":"4524:208:39"},{"body":{"nativeSrc":"4768:156:39","nodeType":"YulBlock","src":"4768:156:39","statements":[{"nativeSrc":"4786:43:39","nodeType":"YulVariableDeclaration","src":"4786:43:39","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:39","nodeType":"YulIdentifier","src":"4813:3:39"},{"name":"srcOffset","nativeSrc":"4818:9:39","nodeType":"YulIdentifier","src":"4818:9:39"}],"functionName":{"name":"add","nativeSrc":"4809:3:39","nodeType":"YulIdentifier","src":"4809:3:39"},"nativeSrc":"4809:19:39","nodeType":"YulFunctionCall","src":"4809:19:39"}],"functionName":{"name":"mload","nativeSrc":"4803:5:39","nodeType":"YulIdentifier","src":"4803:5:39"},"nativeSrc":"4803:26:39","nodeType":"YulFunctionCall","src":"4803:26:39"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:39","nodeType":"YulTypedName","src":"4790:9:39","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:39","nodeType":"YulIdentifier","src":"4853:6:39"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:39","nodeType":"YulIdentifier","src":"4880:9:39"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:39","nodeType":"YulIdentifier","src":"4895:6:39"},{"kind":"number","nativeSrc":"4903:4:39","nodeType":"YulLiteral","src":"4903:4:39","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:39","nodeType":"YulIdentifier","src":"4891:3:39"},"nativeSrc":"4891:17:39","nodeType":"YulFunctionCall","src":"4891:17:39"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:39","nodeType":"YulIdentifier","src":"4861:18:39"},"nativeSrc":"4861:48:39","nodeType":"YulFunctionCall","src":"4861:48:39"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:39","nodeType":"YulIdentifier","src":"4846:6:39"},"nativeSrc":"4846:64:39","nodeType":"YulFunctionCall","src":"4846:64:39"},"nativeSrc":"4846:64:39","nodeType":"YulExpressionStatement","src":"4846:64:39"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:39","nodeType":"YulIdentifier","src":"4751:7:39"},{"name":"newLen","nativeSrc":"4760:6:39","nodeType":"YulIdentifier","src":"4760:6:39"}],"functionName":{"name":"lt","nativeSrc":"4748:2:39","nodeType":"YulIdentifier","src":"4748:2:39"},"nativeSrc":"4748:19:39","nodeType":"YulFunctionCall","src":"4748:19:39"},"nativeSrc":"4745:179:39","nodeType":"YulIf","src":"4745:179:39"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:39","nodeType":"YulIdentifier","src":"4944:4:39"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:39","nodeType":"YulIdentifier","src":"4958:6:39"},{"kind":"number","nativeSrc":"4966:1:39","nodeType":"YulLiteral","src":"4966:1:39","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:39","nodeType":"YulIdentifier","src":"4954:3:39"},"nativeSrc":"4954:14:39","nodeType":"YulFunctionCall","src":"4954:14:39"},{"kind":"number","nativeSrc":"4970:1:39","nodeType":"YulLiteral","src":"4970:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:39","nodeType":"YulIdentifier","src":"4950:3:39"},"nativeSrc":"4950:22:39","nodeType":"YulFunctionCall","src":"4950:22:39"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:39","nodeType":"YulIdentifier","src":"4937:6:39"},"nativeSrc":"4937:36:39","nodeType":"YulFunctionCall","src":"4937:36:39"},"nativeSrc":"4937:36:39","nodeType":"YulExpressionStatement","src":"4937:36:39"}]},"nativeSrc":"4365:618:39","nodeType":"YulCase","src":"4365:618:39","value":{"kind":"number","nativeSrc":"4370:1:39","nodeType":"YulLiteral","src":"4370:1:39","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:39","nodeType":"YulBlock","src":"5000:222:39","statements":[{"nativeSrc":"5014:14:39","nodeType":"YulVariableDeclaration","src":"5014:14:39","value":{"kind":"number","nativeSrc":"5027:1:39","nodeType":"YulLiteral","src":"5027:1:39","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:39","nodeType":"YulTypedName","src":"5018:5:39","type":""}]},{"body":{"nativeSrc":"5051:67:39","nodeType":"YulBlock","src":"5051:67:39","statements":[{"nativeSrc":"5069:35:39","nodeType":"YulAssignment","src":"5069:35:39","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:39","nodeType":"YulIdentifier","src":"5088:3:39"},{"name":"srcOffset","nativeSrc":"5093:9:39","nodeType":"YulIdentifier","src":"5093:9:39"}],"functionName":{"name":"add","nativeSrc":"5084:3:39","nodeType":"YulIdentifier","src":"5084:3:39"},"nativeSrc":"5084:19:39","nodeType":"YulFunctionCall","src":"5084:19:39"}],"functionName":{"name":"mload","nativeSrc":"5078:5:39","nodeType":"YulIdentifier","src":"5078:5:39"},"nativeSrc":"5078:26:39","nodeType":"YulFunctionCall","src":"5078:26:39"},"variableNames":[{"name":"value","nativeSrc":"5069:5:39","nodeType":"YulIdentifier","src":"5069:5:39"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:39","nodeType":"YulIdentifier","src":"5044:6:39"},"nativeSrc":"5041:77:39","nodeType":"YulIf","src":"5041:77:39"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:39","nodeType":"YulIdentifier","src":"5138:4:39"},{"arguments":[{"name":"value","nativeSrc":"5197:5:39","nodeType":"YulIdentifier","src":"5197:5:39"},{"name":"newLen","nativeSrc":"5204:6:39","nodeType":"YulIdentifier","src":"5204:6:39"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:39","nodeType":"YulIdentifier","src":"5144:52:39"},"nativeSrc":"5144:67:39","nodeType":"YulFunctionCall","src":"5144:67:39"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:39","nodeType":"YulIdentifier","src":"5131:6:39"},"nativeSrc":"5131:81:39","nodeType":"YulFunctionCall","src":"5131:81:39"},"nativeSrc":"5131:81:39","nodeType":"YulExpressionStatement","src":"5131:81:39"}]},"nativeSrc":"4992:230:39","nodeType":"YulCase","src":"4992:230:39","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:39","nodeType":"YulIdentifier","src":"4345:6:39"},{"kind":"number","nativeSrc":"4353:2:39","nodeType":"YulLiteral","src":"4353:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:39","nodeType":"YulIdentifier","src":"4342:2:39"},"nativeSrc":"4342:14:39","nodeType":"YulFunctionCall","src":"4342:14:39"},"nativeSrc":"4335:887:39","nodeType":"YulSwitch","src":"4335:887:39"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:39","nodeType":"YulTypedName","src":"3914:4:39","type":""},{"name":"src","nativeSrc":"3920:3:39","nodeType":"YulTypedName","src":"3920:3:39","type":""}],"src":"3833:1395:39"},{"body":{"nativeSrc":"5279:81:39","nodeType":"YulBlock","src":"5279:81:39","statements":[{"nativeSrc":"5289:65:39","nodeType":"YulAssignment","src":"5289:65:39","value":{"arguments":[{"name":"value","nativeSrc":"5304:5:39","nodeType":"YulIdentifier","src":"5304:5:39"},{"kind":"number","nativeSrc":"5311:42:39","nodeType":"YulLiteral","src":"5311:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5300:3:39","nodeType":"YulIdentifier","src":"5300:3:39"},"nativeSrc":"5300:54:39","nodeType":"YulFunctionCall","src":"5300:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"5289:7:39","nodeType":"YulIdentifier","src":"5289:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5234:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5261:5:39","nodeType":"YulTypedName","src":"5261:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5271:7:39","nodeType":"YulTypedName","src":"5271:7:39","type":""}],"src":"5234:126:39"},{"body":{"nativeSrc":"5411:51:39","nodeType":"YulBlock","src":"5411:51:39","statements":[{"nativeSrc":"5421:35:39","nodeType":"YulAssignment","src":"5421:35:39","value":{"arguments":[{"name":"value","nativeSrc":"5450:5:39","nodeType":"YulIdentifier","src":"5450:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5432:17:39","nodeType":"YulIdentifier","src":"5432:17:39"},"nativeSrc":"5432:24:39","nodeType":"YulFunctionCall","src":"5432:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"5421:7:39","nodeType":"YulIdentifier","src":"5421:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"5366:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5393:5:39","nodeType":"YulTypedName","src":"5393:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5403:7:39","nodeType":"YulTypedName","src":"5403:7:39","type":""}],"src":"5366:96:39"},{"body":{"nativeSrc":"5533:53:39","nodeType":"YulBlock","src":"5533:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5550:3:39","nodeType":"YulIdentifier","src":"5550:3:39"},{"arguments":[{"name":"value","nativeSrc":"5573:5:39","nodeType":"YulIdentifier","src":"5573:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5555:17:39","nodeType":"YulIdentifier","src":"5555:17:39"},"nativeSrc":"5555:24:39","nodeType":"YulFunctionCall","src":"5555:24:39"}],"functionName":{"name":"mstore","nativeSrc":"5543:6:39","nodeType":"YulIdentifier","src":"5543:6:39"},"nativeSrc":"5543:37:39","nodeType":"YulFunctionCall","src":"5543:37:39"},"nativeSrc":"5543:37:39","nodeType":"YulExpressionStatement","src":"5543:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5468:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5521:5:39","nodeType":"YulTypedName","src":"5521:5:39","type":""},{"name":"pos","nativeSrc":"5528:3:39","nodeType":"YulTypedName","src":"5528:3:39","type":""}],"src":"5468:118:39"},{"body":{"nativeSrc":"5690:124:39","nodeType":"YulBlock","src":"5690:124:39","statements":[{"nativeSrc":"5700:26:39","nodeType":"YulAssignment","src":"5700:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"5712:9:39","nodeType":"YulIdentifier","src":"5712:9:39"},{"kind":"number","nativeSrc":"5723:2:39","nodeType":"YulLiteral","src":"5723:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5708:3:39","nodeType":"YulIdentifier","src":"5708:3:39"},"nativeSrc":"5708:18:39","nodeType":"YulFunctionCall","src":"5708:18:39"},"variableNames":[{"name":"tail","nativeSrc":"5700:4:39","nodeType":"YulIdentifier","src":"5700:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5780:6:39","nodeType":"YulIdentifier","src":"5780:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"5793:9:39","nodeType":"YulIdentifier","src":"5793:9:39"},{"kind":"number","nativeSrc":"5804:1:39","nodeType":"YulLiteral","src":"5804:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5789:3:39","nodeType":"YulIdentifier","src":"5789:3:39"},"nativeSrc":"5789:17:39","nodeType":"YulFunctionCall","src":"5789:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5736:43:39","nodeType":"YulIdentifier","src":"5736:43:39"},"nativeSrc":"5736:71:39","nodeType":"YulFunctionCall","src":"5736:71:39"},"nativeSrc":"5736:71:39","nodeType":"YulExpressionStatement","src":"5736:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5592:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5662:9:39","nodeType":"YulTypedName","src":"5662:9:39","type":""},{"name":"value0","nativeSrc":"5674:6:39","nodeType":"YulTypedName","src":"5674:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5685:4:39","nodeType":"YulTypedName","src":"5685:4:39","type":""}],"src":"5592:222:39"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50336040518060400160405280601381526020017f4c6561726e696e67204d6f64756c65204e4654000000000000000000000000008152506040518060400160405280600581526020017f4c4d4e4654000000000000000000000000000000000000000000000000000000815250816000908162000090919062000472565b508060019081620000a2919062000472565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200011191906200059e565b60405180910390fd5b6200012b816200013260201b60201c565b50620005bb565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027a57607f821691505b60208210810362000290576200028f62000232565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bb565b620003068683620002bb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003536200034d62000347846200031e565b62000328565b6200031e565b9050919050565b6000819050919050565b6200036f8362000332565b620003876200037e826200035a565b848454620002c8565b825550505050565b600090565b6200039e6200038f565b620003ab81848462000364565b505050565b5b81811015620003d357620003c760008262000394565b600181019050620003b1565b5050565b601f8211156200042257620003ec8162000296565b620003f784620002ab565b8101602085101562000407578190505b6200041f6200041685620002ab565b830182620003b0565b50505b505050565b600082821c905092915050565b6000620004476000198460080262000427565b1980831691505092915050565b600062000462838362000434565b9150826002028217905092915050565b6200047d82620001f8565b67ffffffffffffffff81111562000499576200049862000203565b5b620004a5825462000261565b620004b2828285620003d7565b600060209050601f831160018114620004ea5760008415620004d5578287015190505b620004e1858262000454565b86555062000551565b601f198416620004fa8662000296565b60005b828110156200052457848901518255600182019150602085019450602081019050620004fd565b8683101562000544578489015162000540601f89168262000434565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005868262000559565b9050919050565b620005988162000579565b82525050565b6000602082019050620005b560008301846200058d565b92915050565b61283f80620005cb6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063b88d4fde11610071578063b88d4fde14610308578063c87b56dd14610324578063d0def52114610354578063e985e9c514610370578063f2fde38b146103a057610121565b8063715018a61461028857806375794a3c146102925780638da5cb5b146102b057806395d89b41146102ce578063a22cb465146102ec57610121565b806323b872dd116100f457806323b872dd146101c057806338e21cce146101dc57806342842e0e1461020c5780636352211e1461022857806370a082311461025857610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611c2b565b6103bc565b60405161014d9190611c73565b60405180910390f35b61015e61041d565b60405161016b9190611d1e565b60405180910390f35b61018e60048036038101906101899190611d76565b6104af565b60405161019b9190611de4565b60405180910390f35b6101be60048036038101906101b99190611e2b565b6104cb565b005b6101da60048036038101906101d59190611e6b565b6104e1565b005b6101f660048036038101906101f19190611ebe565b6105e3565b6040516102039190611c73565b60405180910390f35b61022660048036038101906102219190611e6b565b610603565b005b610242600480360381019061023d9190611d76565b610623565b60405161024f9190611de4565b60405180910390f35b610272600480360381019061026d9190611ebe565b610635565b60405161027f9190611efa565b60405180910390f35b6102906106ef565b005b61029a610703565b6040516102a79190611efa565b60405180910390f35b6102b8610709565b6040516102c59190611de4565b60405180910390f35b6102d6610733565b6040516102e39190611d1e565b60405180910390f35b61030660048036038101906103019190611f41565b6107c5565b005b610322600480360381019061031d91906120b6565b6107db565b005b61033e60048036038101906103399190611d76565b610800565b60405161034b9190611d1e565b60405180910390f35b61036e600480360381019061036991906121da565b610913565b005b61038a60048036038101906103859190612236565b610a34565b6040516103979190611c73565b60405180910390f35b6103ba60048036038101906103b59190611ebe565b610ac8565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610416575061041582610b4e565b5b9050919050565b60606000805461042c906122a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610458906122a5565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b5050505050905090565b60006104ba82610c30565b506104c482610cb8565b9050919050565b6104dd82826104d8610cf5565b610cfd565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105535760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161054a9190611de4565b60405180910390fd5b60006105678383610562610cf5565b610d0f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105dd578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105d4939291906122d6565b60405180910390fd5b50505050565b60096020528060005260406000206000915054906101000a900460ff1681565b61061e838383604051806020016040528060008152506107db565b505050565b600061062e82610c30565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a85760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161069f9190611de4565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106f7610f29565b6107016000610fb0565b565b60085481565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610742906122a5565b80601f016020809104026020016040519081016040528092919081815260200182805461076e906122a5565b80156107bb5780601f10610790576101008083540402835291602001916107bb565b820191906000526020600020905b81548152906001019060200180831161079e57829003601f168201915b5050505050905090565b6107d76107d0610cf5565b8383611076565b5050565b6107e68484846104e1565b6107fa6107f1610cf5565b858585856111e5565b50505050565b606061080b82610c30565b50600060066000848152602001908152602001600020805461082c906122a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610858906122a5565b80156108a55780601f1061087a576101008083540402835291602001916108a5565b820191906000526020600020905b81548152906001019060200180831161088857829003601f168201915b5050505050905060006108b6611396565b905060008151036108cb57819250505061090e565b6000825111156109005780826040516020016108e8929190612349565b6040516020818303038152906040529250505061090e565b610909846113ad565b925050505b919050565b61091b610f29565b600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f906123b9565b60405180910390fd5b6109b482600854611416565b6109c060085482611434565b6001600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060086000815480929190610a2b90612408565b91905055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610ad0610f29565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b399190611de4565b60405180910390fd5b610b4b81610fb0565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c1957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c295750610c2882611490565b5b9050919050565b600080610c3c836114fa565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caf57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ca69190611efa565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610d0a8383836001611537565b505050565b600080610d1b846114fa565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d5d57610d5c8184866116fc565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dee57610d9f600085600080611537565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e71576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610f31610cf5565b73ffffffffffffffffffffffffffffffffffffffff16610f4f610709565b73ffffffffffffffffffffffffffffffffffffffff1614610fae57610f72610cf5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fa59190611de4565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e757816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110de9190611de4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111d89190611c73565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561138f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161124494939291906124a5565b6020604051808303816000875af192505050801561128057506040513d601f19601f8201168201806040525081019061127d9190612506565b60015b611304573d80600081146112b0576040519150601f19603f3d011682016040523d82523d6000602084013e6112b5565b606091505b5060008151036112fc57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112f39190611de4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461138d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113849190611de4565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606113b882610c30565b5060006113c3611396565b905060008151116113e3576040518060200160405280600081525061140e565b806113ed846117c0565b6040516020016113fe929190612349565b6040516020818303038152906040525b915050919050565b61143082826040518060200160405280600081525061188e565b5050565b8060066000848152602001908152602001600020908161145491906126df565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114849190611efa565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115705750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116a457600061158084610c30565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115eb57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115fe57506115fc8184610a34565b155b1561164057826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116379190611de4565b60405180910390fd5b81156116a257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117078383836118b2565b6117bb57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361177c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117739190611efa565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117b29291906127b1565b60405180910390fd5b505050565b6060600060016117cf84611973565b01905060008167ffffffffffffffff8111156117ee576117ed611f8b565b5b6040519080825280601f01601f1916602001820160405280156118205781602001600182028036833780820191505090505b509050600082602001820190505b600115611883578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611877576118766127da565b5b0494506000850361182e575b819350505050919050565b6118988383611ac6565b6118ad6118a3610cf5565b60008585856111e5565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561196a57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061192b575061192a8484610a34565b5b8061196957508273ffffffffffffffffffffffffffffffffffffffff1661195183610cb8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119d1577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119c7576119c66127da565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a0e576d04ee2d6d415b85acef81000000008381611a0457611a036127da565b5b0492506020810190505b662386f26fc100008310611a3d57662386f26fc100008381611a3357611a326127da565b5b0492506010810190505b6305f5e1008310611a66576305f5e1008381611a5c57611a5b6127da565b5b0492506008810190505b6127108310611a8b576127108381611a8157611a806127da565b5b0492506004810190505b60648310611aae5760648381611aa457611aa36127da565b5b0492506002810190505b600a8310611abd576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b385760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b2f9190611de4565b60405180910390fd5b6000611b4683836000610d0f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bba5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611bb19190611de4565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c0881611bd3565b8114611c1357600080fd5b50565b600081359050611c2581611bff565b92915050565b600060208284031215611c4157611c40611bc9565b5b6000611c4f84828501611c16565b91505092915050565b60008115159050919050565b611c6d81611c58565b82525050565b6000602082019050611c886000830184611c64565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cc8578082015181840152602081019050611cad565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cf082611c8e565b611cfa8185611c99565b9350611d0a818560208601611caa565b611d1381611cd4565b840191505092915050565b60006020820190508181036000830152611d388184611ce5565b905092915050565b6000819050919050565b611d5381611d40565b8114611d5e57600080fd5b50565b600081359050611d7081611d4a565b92915050565b600060208284031215611d8c57611d8b611bc9565b5b6000611d9a84828501611d61565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dce82611da3565b9050919050565b611dde81611dc3565b82525050565b6000602082019050611df96000830184611dd5565b92915050565b611e0881611dc3565b8114611e1357600080fd5b50565b600081359050611e2581611dff565b92915050565b60008060408385031215611e4257611e41611bc9565b5b6000611e5085828601611e16565b9250506020611e6185828601611d61565b9150509250929050565b600080600060608486031215611e8457611e83611bc9565b5b6000611e9286828701611e16565b9350506020611ea386828701611e16565b9250506040611eb486828701611d61565b9150509250925092565b600060208284031215611ed457611ed3611bc9565b5b6000611ee284828501611e16565b91505092915050565b611ef481611d40565b82525050565b6000602082019050611f0f6000830184611eeb565b92915050565b611f1e81611c58565b8114611f2957600080fd5b50565b600081359050611f3b81611f15565b92915050565b60008060408385031215611f5857611f57611bc9565b5b6000611f6685828601611e16565b9250506020611f7785828601611f2c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611fc382611cd4565b810181811067ffffffffffffffff82111715611fe257611fe1611f8b565b5b80604052505050565b6000611ff5611bbf565b90506120018282611fba565b919050565b600067ffffffffffffffff82111561202157612020611f8b565b5b61202a82611cd4565b9050602081019050919050565b82818337600083830152505050565b600061205961205484612006565b611feb565b90508281526020810184848401111561207557612074611f86565b5b612080848285612037565b509392505050565b600082601f83011261209d5761209c611f81565b5b81356120ad848260208601612046565b91505092915050565b600080600080608085870312156120d0576120cf611bc9565b5b60006120de87828801611e16565b94505060206120ef87828801611e16565b935050604061210087828801611d61565b925050606085013567ffffffffffffffff81111561212157612120611bce565b5b61212d87828801612088565b91505092959194509250565b600067ffffffffffffffff82111561215457612153611f8b565b5b61215d82611cd4565b9050602081019050919050565b600061217d61217884612139565b611feb565b90508281526020810184848401111561219957612198611f86565b5b6121a4848285612037565b509392505050565b600082601f8301126121c1576121c0611f81565b5b81356121d184826020860161216a565b91505092915050565b600080604083850312156121f1576121f0611bc9565b5b60006121ff85828601611e16565b925050602083013567ffffffffffffffff8111156122205761221f611bce565b5b61222c858286016121ac565b9150509250929050565b6000806040838503121561224d5761224c611bc9565b5b600061225b85828601611e16565b925050602061226c85828601611e16565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122bd57607f821691505b6020821081036122d0576122cf612276565b5b50919050565b60006060820190506122eb6000830186611dd5565b6122f86020830185611eeb565b6123056040830184611dd5565b949350505050565b600081905092915050565b600061232382611c8e565b61232d818561230d565b935061233d818560208601611caa565b80840191505092915050565b60006123558285612318565b91506123618284612318565b91508190509392505050565b7f416c7265616479206d696e746564000000000000000000000000000000000000600082015250565b60006123a3600e83611c99565b91506123ae8261236d565b602082019050919050565b600060208201905081810360008301526123d281612396565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061241382611d40565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612445576124446123d9565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061247782612450565b612481818561245b565b9350612491818560208601611caa565b61249a81611cd4565b840191505092915050565b60006080820190506124ba6000830187611dd5565b6124c76020830186611dd5565b6124d46040830185611eeb565b81810360608301526124e6818461246c565b905095945050505050565b60008151905061250081611bff565b92915050565b60006020828403121561251c5761251b611bc9565b5b600061252a848285016124f1565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026125957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612558565b61259f8683612558565b95508019841693508086168417925050509392505050565b6000819050919050565b60006125dc6125d76125d284611d40565b6125b7565b611d40565b9050919050565b6000819050919050565b6125f6836125c1565b61260a612602826125e3565b848454612565565b825550505050565b600090565b61261f612612565b61262a8184846125ed565b505050565b5b8181101561264e57612643600082612617565b600181019050612630565b5050565b601f8211156126935761266481612533565b61266d84612548565b8101602085101561267c578190505b61269061268885612548565b83018261262f565b50505b505050565b600082821c905092915050565b60006126b660001984600802612698565b1980831691505092915050565b60006126cf83836126a5565b9150826002028217905092915050565b6126e882611c8e565b67ffffffffffffffff81111561270157612700611f8b565b5b61270b82546122a5565b612716828285612652565b600060209050601f8311600181146127495760008415612737578287015190505b61274185826126c3565b8655506127a9565b601f19841661275786612533565b60005b8281101561277f5784890151825560018201915060208501945060208101905061275a565b8683101561279c5784890151612798601f8916826126a5565b8355505b6001600288020188555050505b505050505050565b60006040820190506127c66000830185611dd5565b6127d36020830184611eeb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212200ef0c83e33cb18d794c927f62c8853ebfa5beae57b0907cfa3a04b1b7c8781c664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6561726E696E67204D6F64756C65204E465400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C4D4E4654000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA2 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x111 SWAP2 SWAP1 PUSH3 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x232 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2BB JUMP JUMPDEST PUSH3 0x306 DUP7 DUP4 PUSH3 0x2BB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x353 PUSH3 0x34D PUSH3 0x347 DUP5 PUSH3 0x31E JUMP JUMPDEST PUSH3 0x328 JUMP JUMPDEST PUSH3 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x36F DUP4 PUSH3 0x332 JUMP JUMPDEST PUSH3 0x387 PUSH3 0x37E DUP3 PUSH3 0x35A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x38F JUMP JUMPDEST PUSH3 0x3AB DUP2 DUP5 DUP5 PUSH3 0x364 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D3 JUMPI PUSH3 0x3C7 PUSH1 0x0 DUP3 PUSH3 0x394 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x422 JUMPI PUSH3 0x3EC DUP2 PUSH3 0x296 JUMP JUMPDEST PUSH3 0x3F7 DUP5 PUSH3 0x2AB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x407 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x41F PUSH3 0x416 DUP6 PUSH3 0x2AB JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x447 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x427 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x462 DUP4 DUP4 PUSH3 0x434 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x47D DUP3 PUSH3 0x1F8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x499 JUMPI PUSH3 0x498 PUSH3 0x203 JUMP JUMPDEST JUMPDEST PUSH3 0x4A5 DUP3 SLOAD PUSH3 0x261 JUMP JUMPDEST PUSH3 0x4B2 DUP3 DUP3 DUP6 PUSH3 0x3D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4D5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E1 DUP6 DUP3 PUSH3 0x454 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x551 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FA DUP7 PUSH3 0x296 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x544 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x540 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x434 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 DUP3 PUSH3 0x559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x598 DUP2 PUSH3 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x283F DUP1 PUSH3 0x5CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2EC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x38E21CCE EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x6EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x21DA JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x416 JUMPI POP PUSH2 0x415 DUP3 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x488 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA DUP3 PUSH2 0xC30 JUMP JUMPDEST POP PUSH2 0x4C4 DUP3 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x4D8 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x553 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x567 DUP4 DUP4 PUSH2 0x562 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5DD JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x61E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E DUP3 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x701 PUSH1 0x0 PUSH2 0xFB0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x790 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x79E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x7D0 PUSH2 0xCF5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1076 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7E6 DUP5 DUP5 DUP5 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0x7F1 PUSH2 0xCF5 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x11E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x80B DUP3 PUSH2 0xC30 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x82C SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x858 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x888 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x8B6 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x8CB JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x90E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x900 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E8 SWAP3 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x90E JUMP JUMPDEST PUSH2 0x909 DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B4 DUP3 PUSH1 0x8 SLOAD PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x1434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA2B SWAP1 PUSH2 0x2408 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD0 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4B DUP2 PUSH2 0xFB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC19 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC29 JUMPI POP PUSH2 0xC28 DUP3 PUSH2 0x1490 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC3C DUP4 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCAF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD0A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1537 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD1B DUP5 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH2 0xD5C DUP2 DUP5 DUP7 PUSH2 0x16FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDEE JUMPI PUSH2 0xD9F PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE71 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF31 PUSH2 0xCF5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF4F PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFAE JUMPI PUSH2 0xF72 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x138F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1244 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1280 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1304 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12FC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F3 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x138D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13B8 DUP3 PUSH2 0xC30 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13C3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x13E3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x140E JUMP JUMPDEST DUP1 PUSH2 0x13ED DUP5 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13FE SWAP3 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1430 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x188E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x26DF JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1484 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1570 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x0 PUSH2 0x1580 DUP5 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15FE JUMPI POP PUSH2 0x15FC DUP2 DUP5 PUSH2 0xA34 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1640 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16A2 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1707 DUP4 DUP4 DUP4 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x17BB JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B2 SWAP3 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x17CF DUP5 PUSH2 0x1973 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1820 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1883 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1877 JUMPI PUSH2 0x1876 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x182E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1898 DUP4 DUP4 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x18AD PUSH2 0x18A3 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x11E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x196A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x192B JUMPI POP PUSH2 0x192A DUP5 DUP5 PUSH2 0xA34 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1969 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1951 DUP4 PUSH2 0xCB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19D1 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19C7 JUMPI PUSH2 0x19C6 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A0E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A3D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A33 JUMPI PUSH2 0x1A32 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A66 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A8B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AAE JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AA4 JUMPI PUSH2 0x1AA3 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1ABD JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B38 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B2F SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B46 DUP4 DUP4 PUSH1 0x0 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C08 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C25 DUP2 PUSH2 0x1BFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C41 JUMPI PUSH2 0x1C40 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP5 DUP3 DUP6 ADD PUSH2 0x1C16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6D DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1CFA DUP2 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D38 DUP2 DUP5 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D53 DUP2 PUSH2 0x1D40 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D70 DUP2 PUSH2 0x1D4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1D8B PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D9A DUP5 DUP3 DUP6 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCE DUP3 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1DC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x1DC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E25 DUP2 PUSH2 0x1DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E50 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E61 DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E84 JUMPI PUSH2 0x1E83 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EA3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EB4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF4 DUP2 PUSH2 0x1D40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3B DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F66 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F77 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FC3 DUP3 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FE2 JUMPI PUSH2 0x1FE1 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF5 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP PUSH2 0x2001 DUP3 DUP3 PUSH2 0x1FBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2020 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH2 0x202A DUP3 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH2 0x2054 DUP5 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1F86 JUMP JUMPDEST JUMPDEST PUSH2 0x2080 DUP5 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2046 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20DE DUP8 DUP3 DUP9 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20EF DUP8 DUP3 DUP9 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2100 DUP8 DUP3 DUP9 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2121 JUMPI PUSH2 0x2120 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST PUSH2 0x212D DUP8 DUP3 DUP9 ADD PUSH2 0x2088 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2154 JUMPI PUSH2 0x2153 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH2 0x215D DUP3 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217D PUSH2 0x2178 DUP5 PUSH2 0x2139 JUMP JUMPDEST PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x1F86 JUMP JUMPDEST JUMPDEST PUSH2 0x21A4 DUP5 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21C1 JUMPI PUSH2 0x21C0 PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x216A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F1 JUMPI PUSH2 0x21F0 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21FF DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST PUSH2 0x222C DUP6 DUP3 DUP7 ADD PUSH2 0x21AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225B DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226C DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22D0 JUMPI PUSH2 0x22CF PUSH2 0x2276 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22EB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0x2305 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x232D DUP2 DUP6 PUSH2 0x230D JUMP JUMPDEST SWAP4 POP PUSH2 0x233D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2355 DUP3 DUP6 PUSH2 0x2318 JUMP JUMPDEST SWAP2 POP PUSH2 0x2361 DUP3 DUP5 PUSH2 0x2318 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C7265616479206D696E746564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A3 PUSH1 0xE DUP4 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH2 0x23AE DUP3 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D2 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2413 DUP3 PUSH2 0x1D40 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2445 JUMPI PUSH2 0x2444 PUSH2 0x23D9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2477 DUP3 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x2481 DUP2 DUP6 PUSH2 0x245B JUMP JUMPDEST SWAP4 POP PUSH2 0x2491 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x249A DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24BA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x24C7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x24D4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EEB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24E6 DUP2 DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2500 DUP2 PUSH2 0x1BFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251C JUMPI PUSH2 0x251B PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252A DUP5 DUP3 DUP6 ADD PUSH2 0x24F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2595 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x259F DUP7 DUP4 PUSH2 0x2558 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DC PUSH2 0x25D7 PUSH2 0x25D2 DUP5 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F6 DUP4 PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x260A PUSH2 0x2602 DUP3 PUSH2 0x25E3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2565 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x261F PUSH2 0x2612 JUMP JUMPDEST PUSH2 0x262A DUP2 DUP5 DUP5 PUSH2 0x25ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x264E JUMPI PUSH2 0x2643 PUSH1 0x0 DUP3 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2630 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x2664 DUP2 PUSH2 0x2533 JUMP JUMPDEST PUSH2 0x266D DUP5 PUSH2 0x2548 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x267C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2690 PUSH2 0x2688 DUP6 PUSH2 0x2548 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x262F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2698 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26CF DUP4 DUP4 PUSH2 0x26A5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E8 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2701 JUMPI PUSH2 0x2700 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH2 0x270B DUP3 SLOAD PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x2716 DUP3 DUP3 DUP6 PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2749 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2737 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2741 DUP6 DUP3 PUSH2 0x26C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2757 DUP7 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x277F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x275A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x279C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2798 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x26A5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27C6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x27D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE CREATE 0xC8 RETURNDATACOPY CALLER 0xCB XOR 0xD7 SWAP5 0xC9 0x27 0xF6 0x2C DUP9 MSTORE8 0xEB STATICCALL JUMPDEST 0xEA 0xE5 PUSH28 0x907CFA3A04B1B7C8781C664736F6C63430008180033000000000000 ","sourceMap":"191:476:37:-:0;;;333:75;;;;;;;;;;394:10;1380:113:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:7;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;191:476:37;;2912:187:7;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:39:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;191:476:37:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_3178":{"entryPoint":3325,"id":3178,"parameterSlots":3,"returnSlots":0},"@_approve_3244":{"entryPoint":5431,"id":3244,"parameterSlots":4,"returnSlots":0},"@_baseURI_2559":{"entryPoint":5014,"id":2559,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2818":{"entryPoint":5884,"id":2818,"parameterSlots":3,"returnSlots":0},"@_checkOwner_1683":{"entryPoint":3881,"id":1683,"parameterSlots":0,"returnSlots":0},"@_getApproved_2745":{"entryPoint":3256,"id":2745,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_2781":{"entryPoint":6322,"id":2781,"parameterSlots":3,"returnSlots":1},"@_mint_2974":{"entryPoint":6854,"id":2974,"parameterSlots":2,"returnSlots":0},"@_msgSender_3949":{"entryPoint":3317,"id":3949,"parameterSlots":0,"returnSlots":1},"@_ownerOf_2732":{"entryPoint":5370,"id":2732,"parameterSlots":1,"returnSlots":1},"@_requireOwned_3310":{"entryPoint":3120,"id":3310,"parameterSlots":1,"returnSlots":1},"@_safeMint_2989":{"entryPoint":5142,"id":2989,"parameterSlots":2,"returnSlots":0},"@_safeMint_3019":{"entryPoint":6286,"id":3019,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_3281":{"entryPoint":4214,"id":3281,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_3571":{"entryPoint":5172,"id":3571,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1745":{"entryPoint":4016,"id":1745,"parameterSlots":1,"returnSlots":0},"@_update_2924":{"entryPoint":3343,"id":2924,"parameterSlots":3,"returnSlots":1},"@approve_2575":{"entryPoint":1227,"id":2575,"parameterSlots":2,"returnSlots":0},"@balanceOf_2483":{"entryPoint":1589,"id":2483,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_3676":{"entryPoint":4581,"id":3676,"parameterSlots":5,"returnSlots":0},"@getApproved_2592":{"entryPoint":1199,"id":2592,"parameterSlots":1,"returnSlots":1},"@hasMinted_9243":{"entryPoint":1507,"id":9243,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_2625":{"entryPoint":2612,"id":2625,"parameterSlots":2,"returnSlots":1},"@log10_7056":{"entryPoint":6515,"id":7056,"parameterSlots":1,"returnSlots":1},"@mint_9292":{"entryPoint":2323,"id":9292,"parameterSlots":2,"returnSlots":0},"@name_2505":{"entryPoint":1053,"id":2505,"parameterSlots":0,"returnSlots":1},"@nextTokenId_9239":{"entryPoint":1795,"id":9239,"parameterSlots":0,"returnSlots":0},"@ownerOf_2496":{"entryPoint":1571,"id":2496,"parameterSlots":1,"returnSlots":1},"@owner_1666":{"entryPoint":1801,"id":1666,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1697":{"entryPoint":1775,"id":1697,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_2689":{"entryPoint":1539,"id":2689,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_2719":{"entryPoint":2011,"id":2719,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_2608":{"entryPoint":1989,"id":2608,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2455":{"entryPoint":2894,"id":2455,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3495":{"entryPoint":956,"id":3495,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5590":{"entryPoint":5264,"id":5590,"parameterSlots":1,"returnSlots":1},"@symbol_2514":{"entryPoint":1843,"id":2514,"parameterSlots":0,"returnSlots":1},"@toString_4279":{"entryPoint":6080,"id":4279,"parameterSlots":1,"returnSlots":1},"@tokenURI_2550":{"entryPoint":5037,"id":2550,"parameterSlots":1,"returnSlots":1},"@tokenURI_3552":{"entryPoint":2048,"id":3552,"parameterSlots":1,"returnSlots":1},"@transferFrom_2671":{"entryPoint":1249,"id":2671,"parameterSlots":3,"returnSlots":0},"@transferOwnership_1725":{"entryPoint":2760,"id":1725,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8262,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8554,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":9457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8758,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7787,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8374,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8001,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":8666,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7723,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7211,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":9478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7637,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7268,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9324,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack":{"entryPoint":9110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7915,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9033,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9381,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":10161,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":8918,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9145,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7930,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8171,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7103,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8198,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8505,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":9523,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9296,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7310,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":9307,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7321,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8973,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":9810,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7256,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7123,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7488,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":9775,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":9665,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":9951,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8247,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7338,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":9544,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8869,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":9923,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8122,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9655,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":9224,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":9893,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9177,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10202,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8822,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8075,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":9699,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8065,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8070,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7118,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7113,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7380,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9560,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":9880,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":9751,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59":{"entryPoint":9069,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":9573,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":9709,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7679,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7957,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7167,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7498,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":9746,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:22246:39","nodeType":"YulBlock","src":"0:22246:39","statements":[{"body":{"nativeSrc":"47:35:39","nodeType":"YulBlock","src":"47:35:39","statements":[{"nativeSrc":"57:19:39","nodeType":"YulAssignment","src":"57:19:39","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:39","nodeType":"YulLiteral","src":"73:2:39","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:39","nodeType":"YulIdentifier","src":"67:5:39"},"nativeSrc":"67:9:39","nodeType":"YulFunctionCall","src":"67:9:39"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:39","nodeType":"YulIdentifier","src":"57:6:39"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:39","nodeType":"YulTypedName","src":"40:6:39","type":""}],"src":"7:75:39"},{"body":{"nativeSrc":"177:28:39","nodeType":"YulBlock","src":"177:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:39","nodeType":"YulLiteral","src":"194:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:39","nodeType":"YulLiteral","src":"197:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:39","nodeType":"YulIdentifier","src":"187:6:39"},"nativeSrc":"187:12:39","nodeType":"YulFunctionCall","src":"187:12:39"},"nativeSrc":"187:12:39","nodeType":"YulExpressionStatement","src":"187:12:39"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:39","nodeType":"YulFunctionDefinition","src":"88:117:39"},{"body":{"nativeSrc":"300:28:39","nodeType":"YulBlock","src":"300:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:39","nodeType":"YulLiteral","src":"317:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:39","nodeType":"YulLiteral","src":"320:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:39","nodeType":"YulIdentifier","src":"310:6:39"},"nativeSrc":"310:12:39","nodeType":"YulFunctionCall","src":"310:12:39"},"nativeSrc":"310:12:39","nodeType":"YulExpressionStatement","src":"310:12:39"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:39","nodeType":"YulFunctionDefinition","src":"211:117:39"},{"body":{"nativeSrc":"378:105:39","nodeType":"YulBlock","src":"378:105:39","statements":[{"nativeSrc":"388:89:39","nodeType":"YulAssignment","src":"388:89:39","value":{"arguments":[{"name":"value","nativeSrc":"403:5:39","nodeType":"YulIdentifier","src":"403:5:39"},{"kind":"number","nativeSrc":"410:66:39","nodeType":"YulLiteral","src":"410:66:39","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:39","nodeType":"YulIdentifier","src":"399:3:39"},"nativeSrc":"399:78:39","nodeType":"YulFunctionCall","src":"399:78:39"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:39","nodeType":"YulIdentifier","src":"388:7:39"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:39","nodeType":"YulTypedName","src":"360:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:39","nodeType":"YulTypedName","src":"370:7:39","type":""}],"src":"334:149:39"},{"body":{"nativeSrc":"531:78:39","nodeType":"YulBlock","src":"531:78:39","statements":[{"body":{"nativeSrc":"587:16:39","nodeType":"YulBlock","src":"587:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:39","nodeType":"YulLiteral","src":"596:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:39","nodeType":"YulLiteral","src":"599:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:39","nodeType":"YulIdentifier","src":"589:6:39"},"nativeSrc":"589:12:39","nodeType":"YulFunctionCall","src":"589:12:39"},"nativeSrc":"589:12:39","nodeType":"YulExpressionStatement","src":"589:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:39","nodeType":"YulIdentifier","src":"554:5:39"},{"arguments":[{"name":"value","nativeSrc":"578:5:39","nodeType":"YulIdentifier","src":"578:5:39"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:39","nodeType":"YulIdentifier","src":"561:16:39"},"nativeSrc":"561:23:39","nodeType":"YulFunctionCall","src":"561:23:39"}],"functionName":{"name":"eq","nativeSrc":"551:2:39","nodeType":"YulIdentifier","src":"551:2:39"},"nativeSrc":"551:34:39","nodeType":"YulFunctionCall","src":"551:34:39"}],"functionName":{"name":"iszero","nativeSrc":"544:6:39","nodeType":"YulIdentifier","src":"544:6:39"},"nativeSrc":"544:42:39","nodeType":"YulFunctionCall","src":"544:42:39"},"nativeSrc":"541:62:39","nodeType":"YulIf","src":"541:62:39"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:39","nodeType":"YulTypedName","src":"524:5:39","type":""}],"src":"489:120:39"},{"body":{"nativeSrc":"666:86:39","nodeType":"YulBlock","src":"666:86:39","statements":[{"nativeSrc":"676:29:39","nodeType":"YulAssignment","src":"676:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:39","nodeType":"YulIdentifier","src":"698:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:39","nodeType":"YulIdentifier","src":"685:12:39"},"nativeSrc":"685:20:39","nodeType":"YulFunctionCall","src":"685:20:39"},"variableNames":[{"name":"value","nativeSrc":"676:5:39","nodeType":"YulIdentifier","src":"676:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:39","nodeType":"YulIdentifier","src":"740:5:39"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:39","nodeType":"YulIdentifier","src":"714:25:39"},"nativeSrc":"714:32:39","nodeType":"YulFunctionCall","src":"714:32:39"},"nativeSrc":"714:32:39","nodeType":"YulExpressionStatement","src":"714:32:39"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:39","nodeType":"YulTypedName","src":"644:6:39","type":""},{"name":"end","nativeSrc":"652:3:39","nodeType":"YulTypedName","src":"652:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:39","nodeType":"YulTypedName","src":"660:5:39","type":""}],"src":"615:137:39"},{"body":{"nativeSrc":"823:262:39","nodeType":"YulBlock","src":"823:262:39","statements":[{"body":{"nativeSrc":"869:83:39","nodeType":"YulBlock","src":"869:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:39","nodeType":"YulIdentifier","src":"871:77:39"},"nativeSrc":"871:79:39","nodeType":"YulFunctionCall","src":"871:79:39"},"nativeSrc":"871:79:39","nodeType":"YulExpressionStatement","src":"871:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:39","nodeType":"YulIdentifier","src":"844:7:39"},{"name":"headStart","nativeSrc":"853:9:39","nodeType":"YulIdentifier","src":"853:9:39"}],"functionName":{"name":"sub","nativeSrc":"840:3:39","nodeType":"YulIdentifier","src":"840:3:39"},"nativeSrc":"840:23:39","nodeType":"YulFunctionCall","src":"840:23:39"},{"kind":"number","nativeSrc":"865:2:39","nodeType":"YulLiteral","src":"865:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:39","nodeType":"YulIdentifier","src":"836:3:39"},"nativeSrc":"836:32:39","nodeType":"YulFunctionCall","src":"836:32:39"},"nativeSrc":"833:119:39","nodeType":"YulIf","src":"833:119:39"},{"nativeSrc":"962:116:39","nodeType":"YulBlock","src":"962:116:39","statements":[{"nativeSrc":"977:15:39","nodeType":"YulVariableDeclaration","src":"977:15:39","value":{"kind":"number","nativeSrc":"991:1:39","nodeType":"YulLiteral","src":"991:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:39","nodeType":"YulTypedName","src":"981:6:39","type":""}]},{"nativeSrc":"1006:62:39","nodeType":"YulAssignment","src":"1006:62:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:39","nodeType":"YulIdentifier","src":"1040:9:39"},{"name":"offset","nativeSrc":"1051:6:39","nodeType":"YulIdentifier","src":"1051:6:39"}],"functionName":{"name":"add","nativeSrc":"1036:3:39","nodeType":"YulIdentifier","src":"1036:3:39"},"nativeSrc":"1036:22:39","nodeType":"YulFunctionCall","src":"1036:22:39"},{"name":"dataEnd","nativeSrc":"1060:7:39","nodeType":"YulIdentifier","src":"1060:7:39"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:39","nodeType":"YulIdentifier","src":"1016:19:39"},"nativeSrc":"1016:52:39","nodeType":"YulFunctionCall","src":"1016:52:39"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:39","nodeType":"YulIdentifier","src":"1006:6:39"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:39","nodeType":"YulTypedName","src":"793:9:39","type":""},{"name":"dataEnd","nativeSrc":"804:7:39","nodeType":"YulTypedName","src":"804:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:39","nodeType":"YulTypedName","src":"816:6:39","type":""}],"src":"758:327:39"},{"body":{"nativeSrc":"1133:48:39","nodeType":"YulBlock","src":"1133:48:39","statements":[{"nativeSrc":"1143:32:39","nodeType":"YulAssignment","src":"1143:32:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:39","nodeType":"YulIdentifier","src":"1168:5:39"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:39","nodeType":"YulIdentifier","src":"1161:6:39"},"nativeSrc":"1161:13:39","nodeType":"YulFunctionCall","src":"1161:13:39"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:39","nodeType":"YulIdentifier","src":"1154:6:39"},"nativeSrc":"1154:21:39","nodeType":"YulFunctionCall","src":"1154:21:39"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:39","nodeType":"YulIdentifier","src":"1143:7:39"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:39","nodeType":"YulTypedName","src":"1115:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:39","nodeType":"YulTypedName","src":"1125:7:39","type":""}],"src":"1091:90:39"},{"body":{"nativeSrc":"1246:50:39","nodeType":"YulBlock","src":"1246:50:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:39","nodeType":"YulIdentifier","src":"1263:3:39"},{"arguments":[{"name":"value","nativeSrc":"1283:5:39","nodeType":"YulIdentifier","src":"1283:5:39"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:39","nodeType":"YulIdentifier","src":"1268:14:39"},"nativeSrc":"1268:21:39","nodeType":"YulFunctionCall","src":"1268:21:39"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:39","nodeType":"YulIdentifier","src":"1256:6:39"},"nativeSrc":"1256:34:39","nodeType":"YulFunctionCall","src":"1256:34:39"},"nativeSrc":"1256:34:39","nodeType":"YulExpressionStatement","src":"1256:34:39"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:39","nodeType":"YulTypedName","src":"1234:5:39","type":""},{"name":"pos","nativeSrc":"1241:3:39","nodeType":"YulTypedName","src":"1241:3:39","type":""}],"src":"1187:109:39"},{"body":{"nativeSrc":"1394:118:39","nodeType":"YulBlock","src":"1394:118:39","statements":[{"nativeSrc":"1404:26:39","nodeType":"YulAssignment","src":"1404:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:39","nodeType":"YulIdentifier","src":"1416:9:39"},{"kind":"number","nativeSrc":"1427:2:39","nodeType":"YulLiteral","src":"1427:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:39","nodeType":"YulIdentifier","src":"1412:3:39"},"nativeSrc":"1412:18:39","nodeType":"YulFunctionCall","src":"1412:18:39"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:39","nodeType":"YulIdentifier","src":"1404:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:39","nodeType":"YulIdentifier","src":"1478:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:39","nodeType":"YulIdentifier","src":"1491:9:39"},{"kind":"number","nativeSrc":"1502:1:39","nodeType":"YulLiteral","src":"1502:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:39","nodeType":"YulIdentifier","src":"1487:3:39"},"nativeSrc":"1487:17:39","nodeType":"YulFunctionCall","src":"1487:17:39"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:39","nodeType":"YulIdentifier","src":"1440:37:39"},"nativeSrc":"1440:65:39","nodeType":"YulFunctionCall","src":"1440:65:39"},"nativeSrc":"1440:65:39","nodeType":"YulExpressionStatement","src":"1440:65:39"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:39","nodeType":"YulTypedName","src":"1366:9:39","type":""},{"name":"value0","nativeSrc":"1378:6:39","nodeType":"YulTypedName","src":"1378:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:39","nodeType":"YulTypedName","src":"1389:4:39","type":""}],"src":"1302:210:39"},{"body":{"nativeSrc":"1577:40:39","nodeType":"YulBlock","src":"1577:40:39","statements":[{"nativeSrc":"1588:22:39","nodeType":"YulAssignment","src":"1588:22:39","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:39","nodeType":"YulIdentifier","src":"1604:5:39"}],"functionName":{"name":"mload","nativeSrc":"1598:5:39","nodeType":"YulIdentifier","src":"1598:5:39"},"nativeSrc":"1598:12:39","nodeType":"YulFunctionCall","src":"1598:12:39"},"variableNames":[{"name":"length","nativeSrc":"1588:6:39","nodeType":"YulIdentifier","src":"1588:6:39"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:39","nodeType":"YulTypedName","src":"1560:5:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:39","nodeType":"YulTypedName","src":"1570:6:39","type":""}],"src":"1518:99:39"},{"body":{"nativeSrc":"1719:73:39","nodeType":"YulBlock","src":"1719:73:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:39","nodeType":"YulIdentifier","src":"1736:3:39"},{"name":"length","nativeSrc":"1741:6:39","nodeType":"YulIdentifier","src":"1741:6:39"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:39","nodeType":"YulIdentifier","src":"1729:6:39"},"nativeSrc":"1729:19:39","nodeType":"YulFunctionCall","src":"1729:19:39"},"nativeSrc":"1729:19:39","nodeType":"YulExpressionStatement","src":"1729:19:39"},{"nativeSrc":"1757:29:39","nodeType":"YulAssignment","src":"1757:29:39","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:39","nodeType":"YulIdentifier","src":"1776:3:39"},{"kind":"number","nativeSrc":"1781:4:39","nodeType":"YulLiteral","src":"1781:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:39","nodeType":"YulIdentifier","src":"1772:3:39"},"nativeSrc":"1772:14:39","nodeType":"YulFunctionCall","src":"1772:14:39"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:39","nodeType":"YulIdentifier","src":"1757:11:39"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:39","nodeType":"YulTypedName","src":"1691:3:39","type":""},{"name":"length","nativeSrc":"1696:6:39","nodeType":"YulTypedName","src":"1696:6:39","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:39","nodeType":"YulTypedName","src":"1707:11:39","type":""}],"src":"1623:169:39"},{"body":{"nativeSrc":"1860:184:39","nodeType":"YulBlock","src":"1860:184:39","statements":[{"nativeSrc":"1870:10:39","nodeType":"YulVariableDeclaration","src":"1870:10:39","value":{"kind":"number","nativeSrc":"1879:1:39","nodeType":"YulLiteral","src":"1879:1:39","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:39","nodeType":"YulTypedName","src":"1874:1:39","type":""}]},{"body":{"nativeSrc":"1939:63:39","nodeType":"YulBlock","src":"1939:63:39","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:39","nodeType":"YulIdentifier","src":"1964:3:39"},{"name":"i","nativeSrc":"1969:1:39","nodeType":"YulIdentifier","src":"1969:1:39"}],"functionName":{"name":"add","nativeSrc":"1960:3:39","nodeType":"YulIdentifier","src":"1960:3:39"},"nativeSrc":"1960:11:39","nodeType":"YulFunctionCall","src":"1960:11:39"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:39","nodeType":"YulIdentifier","src":"1983:3:39"},{"name":"i","nativeSrc":"1988:1:39","nodeType":"YulIdentifier","src":"1988:1:39"}],"functionName":{"name":"add","nativeSrc":"1979:3:39","nodeType":"YulIdentifier","src":"1979:3:39"},"nativeSrc":"1979:11:39","nodeType":"YulFunctionCall","src":"1979:11:39"}],"functionName":{"name":"mload","nativeSrc":"1973:5:39","nodeType":"YulIdentifier","src":"1973:5:39"},"nativeSrc":"1973:18:39","nodeType":"YulFunctionCall","src":"1973:18:39"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:39","nodeType":"YulIdentifier","src":"1953:6:39"},"nativeSrc":"1953:39:39","nodeType":"YulFunctionCall","src":"1953:39:39"},"nativeSrc":"1953:39:39","nodeType":"YulExpressionStatement","src":"1953:39:39"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:39","nodeType":"YulIdentifier","src":"1900:1:39"},{"name":"length","nativeSrc":"1903:6:39","nodeType":"YulIdentifier","src":"1903:6:39"}],"functionName":{"name":"lt","nativeSrc":"1897:2:39","nodeType":"YulIdentifier","src":"1897:2:39"},"nativeSrc":"1897:13:39","nodeType":"YulFunctionCall","src":"1897:13:39"},"nativeSrc":"1889:113:39","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:39","nodeType":"YulBlock","src":"1911:19:39","statements":[{"nativeSrc":"1913:15:39","nodeType":"YulAssignment","src":"1913:15:39","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:39","nodeType":"YulIdentifier","src":"1922:1:39"},{"kind":"number","nativeSrc":"1925:2:39","nodeType":"YulLiteral","src":"1925:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:39","nodeType":"YulIdentifier","src":"1918:3:39"},"nativeSrc":"1918:10:39","nodeType":"YulFunctionCall","src":"1918:10:39"},"variableNames":[{"name":"i","nativeSrc":"1913:1:39","nodeType":"YulIdentifier","src":"1913:1:39"}]}]},"pre":{"nativeSrc":"1893:3:39","nodeType":"YulBlock","src":"1893:3:39","statements":[]},"src":"1889:113:39"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:39","nodeType":"YulIdentifier","src":"2022:3:39"},{"name":"length","nativeSrc":"2027:6:39","nodeType":"YulIdentifier","src":"2027:6:39"}],"functionName":{"name":"add","nativeSrc":"2018:3:39","nodeType":"YulIdentifier","src":"2018:3:39"},"nativeSrc":"2018:16:39","nodeType":"YulFunctionCall","src":"2018:16:39"},{"kind":"number","nativeSrc":"2036:1:39","nodeType":"YulLiteral","src":"2036:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:39","nodeType":"YulIdentifier","src":"2011:6:39"},"nativeSrc":"2011:27:39","nodeType":"YulFunctionCall","src":"2011:27:39"},"nativeSrc":"2011:27:39","nodeType":"YulExpressionStatement","src":"2011:27:39"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:39","nodeType":"YulTypedName","src":"1842:3:39","type":""},{"name":"dst","nativeSrc":"1847:3:39","nodeType":"YulTypedName","src":"1847:3:39","type":""},{"name":"length","nativeSrc":"1852:6:39","nodeType":"YulTypedName","src":"1852:6:39","type":""}],"src":"1798:246:39"},{"body":{"nativeSrc":"2098:54:39","nodeType":"YulBlock","src":"2098:54:39","statements":[{"nativeSrc":"2108:38:39","nodeType":"YulAssignment","src":"2108:38:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:39","nodeType":"YulIdentifier","src":"2126:5:39"},{"kind":"number","nativeSrc":"2133:2:39","nodeType":"YulLiteral","src":"2133:2:39","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:39","nodeType":"YulIdentifier","src":"2122:3:39"},"nativeSrc":"2122:14:39","nodeType":"YulFunctionCall","src":"2122:14:39"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:39","nodeType":"YulLiteral","src":"2142:2:39","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:39","nodeType":"YulIdentifier","src":"2138:3:39"},"nativeSrc":"2138:7:39","nodeType":"YulFunctionCall","src":"2138:7:39"}],"functionName":{"name":"and","nativeSrc":"2118:3:39","nodeType":"YulIdentifier","src":"2118:3:39"},"nativeSrc":"2118:28:39","nodeType":"YulFunctionCall","src":"2118:28:39"},"variableNames":[{"name":"result","nativeSrc":"2108:6:39","nodeType":"YulIdentifier","src":"2108:6:39"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:39","nodeType":"YulTypedName","src":"2081:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:39","nodeType":"YulTypedName","src":"2091:6:39","type":""}],"src":"2050:102:39"},{"body":{"nativeSrc":"2250:285:39","nodeType":"YulBlock","src":"2250:285:39","statements":[{"nativeSrc":"2260:53:39","nodeType":"YulVariableDeclaration","src":"2260:53:39","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:39","nodeType":"YulIdentifier","src":"2307:5:39"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:39","nodeType":"YulIdentifier","src":"2274:32:39"},"nativeSrc":"2274:39:39","nodeType":"YulFunctionCall","src":"2274:39:39"},"variables":[{"name":"length","nativeSrc":"2264:6:39","nodeType":"YulTypedName","src":"2264:6:39","type":""}]},{"nativeSrc":"2322:78:39","nodeType":"YulAssignment","src":"2322:78:39","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:39","nodeType":"YulIdentifier","src":"2388:3:39"},{"name":"length","nativeSrc":"2393:6:39","nodeType":"YulIdentifier","src":"2393:6:39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:39","nodeType":"YulIdentifier","src":"2329:58:39"},"nativeSrc":"2329:71:39","nodeType":"YulFunctionCall","src":"2329:71:39"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:39","nodeType":"YulIdentifier","src":"2322:3:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:39","nodeType":"YulIdentifier","src":"2448:5:39"},{"kind":"number","nativeSrc":"2455:4:39","nodeType":"YulLiteral","src":"2455:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:39","nodeType":"YulIdentifier","src":"2444:3:39"},"nativeSrc":"2444:16:39","nodeType":"YulFunctionCall","src":"2444:16:39"},{"name":"pos","nativeSrc":"2462:3:39","nodeType":"YulIdentifier","src":"2462:3:39"},{"name":"length","nativeSrc":"2467:6:39","nodeType":"YulIdentifier","src":"2467:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:39","nodeType":"YulIdentifier","src":"2409:34:39"},"nativeSrc":"2409:65:39","nodeType":"YulFunctionCall","src":"2409:65:39"},"nativeSrc":"2409:65:39","nodeType":"YulExpressionStatement","src":"2409:65:39"},{"nativeSrc":"2483:46:39","nodeType":"YulAssignment","src":"2483:46:39","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:39","nodeType":"YulIdentifier","src":"2494:3:39"},{"arguments":[{"name":"length","nativeSrc":"2521:6:39","nodeType":"YulIdentifier","src":"2521:6:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:39","nodeType":"YulIdentifier","src":"2499:21:39"},"nativeSrc":"2499:29:39","nodeType":"YulFunctionCall","src":"2499:29:39"}],"functionName":{"name":"add","nativeSrc":"2490:3:39","nodeType":"YulIdentifier","src":"2490:3:39"},"nativeSrc":"2490:39:39","nodeType":"YulFunctionCall","src":"2490:39:39"},"variableNames":[{"name":"end","nativeSrc":"2483:3:39","nodeType":"YulIdentifier","src":"2483:3:39"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:39","nodeType":"YulTypedName","src":"2231:5:39","type":""},{"name":"pos","nativeSrc":"2238:3:39","nodeType":"YulTypedName","src":"2238:3:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:39","nodeType":"YulTypedName","src":"2246:3:39","type":""}],"src":"2158:377:39"},{"body":{"nativeSrc":"2659:195:39","nodeType":"YulBlock","src":"2659:195:39","statements":[{"nativeSrc":"2669:26:39","nodeType":"YulAssignment","src":"2669:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:39","nodeType":"YulIdentifier","src":"2681:9:39"},{"kind":"number","nativeSrc":"2692:2:39","nodeType":"YulLiteral","src":"2692:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:39","nodeType":"YulIdentifier","src":"2677:3:39"},"nativeSrc":"2677:18:39","nodeType":"YulFunctionCall","src":"2677:18:39"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:39","nodeType":"YulIdentifier","src":"2669:4:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:39","nodeType":"YulIdentifier","src":"2716:9:39"},{"kind":"number","nativeSrc":"2727:1:39","nodeType":"YulLiteral","src":"2727:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:39","nodeType":"YulIdentifier","src":"2712:3:39"},"nativeSrc":"2712:17:39","nodeType":"YulFunctionCall","src":"2712:17:39"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:39","nodeType":"YulIdentifier","src":"2735:4:39"},{"name":"headStart","nativeSrc":"2741:9:39","nodeType":"YulIdentifier","src":"2741:9:39"}],"functionName":{"name":"sub","nativeSrc":"2731:3:39","nodeType":"YulIdentifier","src":"2731:3:39"},"nativeSrc":"2731:20:39","nodeType":"YulFunctionCall","src":"2731:20:39"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:39","nodeType":"YulIdentifier","src":"2705:6:39"},"nativeSrc":"2705:47:39","nodeType":"YulFunctionCall","src":"2705:47:39"},"nativeSrc":"2705:47:39","nodeType":"YulExpressionStatement","src":"2705:47:39"},{"nativeSrc":"2761:86:39","nodeType":"YulAssignment","src":"2761:86:39","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:39","nodeType":"YulIdentifier","src":"2833:6:39"},{"name":"tail","nativeSrc":"2842:4:39","nodeType":"YulIdentifier","src":"2842:4:39"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:39","nodeType":"YulIdentifier","src":"2769:63:39"},"nativeSrc":"2769:78:39","nodeType":"YulFunctionCall","src":"2769:78:39"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:39","nodeType":"YulIdentifier","src":"2761:4:39"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:39","nodeType":"YulTypedName","src":"2631:9:39","type":""},{"name":"value0","nativeSrc":"2643:6:39","nodeType":"YulTypedName","src":"2643:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:39","nodeType":"YulTypedName","src":"2654:4:39","type":""}],"src":"2541:313:39"},{"body":{"nativeSrc":"2905:32:39","nodeType":"YulBlock","src":"2905:32:39","statements":[{"nativeSrc":"2915:16:39","nodeType":"YulAssignment","src":"2915:16:39","value":{"name":"value","nativeSrc":"2926:5:39","nodeType":"YulIdentifier","src":"2926:5:39"},"variableNames":[{"name":"cleaned","nativeSrc":"2915:7:39","nodeType":"YulIdentifier","src":"2915:7:39"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2860:77:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2887:5:39","nodeType":"YulTypedName","src":"2887:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2897:7:39","nodeType":"YulTypedName","src":"2897:7:39","type":""}],"src":"2860:77:39"},{"body":{"nativeSrc":"2986:79:39","nodeType":"YulBlock","src":"2986:79:39","statements":[{"body":{"nativeSrc":"3043:16:39","nodeType":"YulBlock","src":"3043:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3052:1:39","nodeType":"YulLiteral","src":"3052:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"3055:1:39","nodeType":"YulLiteral","src":"3055:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3045:6:39","nodeType":"YulIdentifier","src":"3045:6:39"},"nativeSrc":"3045:12:39","nodeType":"YulFunctionCall","src":"3045:12:39"},"nativeSrc":"3045:12:39","nodeType":"YulExpressionStatement","src":"3045:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3009:5:39","nodeType":"YulIdentifier","src":"3009:5:39"},{"arguments":[{"name":"value","nativeSrc":"3034:5:39","nodeType":"YulIdentifier","src":"3034:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3016:17:39","nodeType":"YulIdentifier","src":"3016:17:39"},"nativeSrc":"3016:24:39","nodeType":"YulFunctionCall","src":"3016:24:39"}],"functionName":{"name":"eq","nativeSrc":"3006:2:39","nodeType":"YulIdentifier","src":"3006:2:39"},"nativeSrc":"3006:35:39","nodeType":"YulFunctionCall","src":"3006:35:39"}],"functionName":{"name":"iszero","nativeSrc":"2999:6:39","nodeType":"YulIdentifier","src":"2999:6:39"},"nativeSrc":"2999:43:39","nodeType":"YulFunctionCall","src":"2999:43:39"},"nativeSrc":"2996:63:39","nodeType":"YulIf","src":"2996:63:39"}]},"name":"validator_revert_t_uint256","nativeSrc":"2943:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2979:5:39","nodeType":"YulTypedName","src":"2979:5:39","type":""}],"src":"2943:122:39"},{"body":{"nativeSrc":"3123:87:39","nodeType":"YulBlock","src":"3123:87:39","statements":[{"nativeSrc":"3133:29:39","nodeType":"YulAssignment","src":"3133:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"3155:6:39","nodeType":"YulIdentifier","src":"3155:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"3142:12:39","nodeType":"YulIdentifier","src":"3142:12:39"},"nativeSrc":"3142:20:39","nodeType":"YulFunctionCall","src":"3142:20:39"},"variableNames":[{"name":"value","nativeSrc":"3133:5:39","nodeType":"YulIdentifier","src":"3133:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3198:5:39","nodeType":"YulIdentifier","src":"3198:5:39"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3171:26:39","nodeType":"YulIdentifier","src":"3171:26:39"},"nativeSrc":"3171:33:39","nodeType":"YulFunctionCall","src":"3171:33:39"},"nativeSrc":"3171:33:39","nodeType":"YulExpressionStatement","src":"3171:33:39"}]},"name":"abi_decode_t_uint256","nativeSrc":"3071:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3101:6:39","nodeType":"YulTypedName","src":"3101:6:39","type":""},{"name":"end","nativeSrc":"3109:3:39","nodeType":"YulTypedName","src":"3109:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3117:5:39","nodeType":"YulTypedName","src":"3117:5:39","type":""}],"src":"3071:139:39"},{"body":{"nativeSrc":"3282:263:39","nodeType":"YulBlock","src":"3282:263:39","statements":[{"body":{"nativeSrc":"3328:83:39","nodeType":"YulBlock","src":"3328:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3330:77:39","nodeType":"YulIdentifier","src":"3330:77:39"},"nativeSrc":"3330:79:39","nodeType":"YulFunctionCall","src":"3330:79:39"},"nativeSrc":"3330:79:39","nodeType":"YulExpressionStatement","src":"3330:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3303:7:39","nodeType":"YulIdentifier","src":"3303:7:39"},{"name":"headStart","nativeSrc":"3312:9:39","nodeType":"YulIdentifier","src":"3312:9:39"}],"functionName":{"name":"sub","nativeSrc":"3299:3:39","nodeType":"YulIdentifier","src":"3299:3:39"},"nativeSrc":"3299:23:39","nodeType":"YulFunctionCall","src":"3299:23:39"},{"kind":"number","nativeSrc":"3324:2:39","nodeType":"YulLiteral","src":"3324:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3295:3:39","nodeType":"YulIdentifier","src":"3295:3:39"},"nativeSrc":"3295:32:39","nodeType":"YulFunctionCall","src":"3295:32:39"},"nativeSrc":"3292:119:39","nodeType":"YulIf","src":"3292:119:39"},{"nativeSrc":"3421:117:39","nodeType":"YulBlock","src":"3421:117:39","statements":[{"nativeSrc":"3436:15:39","nodeType":"YulVariableDeclaration","src":"3436:15:39","value":{"kind":"number","nativeSrc":"3450:1:39","nodeType":"YulLiteral","src":"3450:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3440:6:39","nodeType":"YulTypedName","src":"3440:6:39","type":""}]},{"nativeSrc":"3465:63:39","nodeType":"YulAssignment","src":"3465:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3500:9:39","nodeType":"YulIdentifier","src":"3500:9:39"},{"name":"offset","nativeSrc":"3511:6:39","nodeType":"YulIdentifier","src":"3511:6:39"}],"functionName":{"name":"add","nativeSrc":"3496:3:39","nodeType":"YulIdentifier","src":"3496:3:39"},"nativeSrc":"3496:22:39","nodeType":"YulFunctionCall","src":"3496:22:39"},{"name":"dataEnd","nativeSrc":"3520:7:39","nodeType":"YulIdentifier","src":"3520:7:39"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3475:20:39","nodeType":"YulIdentifier","src":"3475:20:39"},"nativeSrc":"3475:53:39","nodeType":"YulFunctionCall","src":"3475:53:39"},"variableNames":[{"name":"value0","nativeSrc":"3465:6:39","nodeType":"YulIdentifier","src":"3465:6:39"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3216:329:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3252:9:39","nodeType":"YulTypedName","src":"3252:9:39","type":""},{"name":"dataEnd","nativeSrc":"3263:7:39","nodeType":"YulTypedName","src":"3263:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3275:6:39","nodeType":"YulTypedName","src":"3275:6:39","type":""}],"src":"3216:329:39"},{"body":{"nativeSrc":"3596:81:39","nodeType":"YulBlock","src":"3596:81:39","statements":[{"nativeSrc":"3606:65:39","nodeType":"YulAssignment","src":"3606:65:39","value":{"arguments":[{"name":"value","nativeSrc":"3621:5:39","nodeType":"YulIdentifier","src":"3621:5:39"},{"kind":"number","nativeSrc":"3628:42:39","nodeType":"YulLiteral","src":"3628:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3617:3:39","nodeType":"YulIdentifier","src":"3617:3:39"},"nativeSrc":"3617:54:39","nodeType":"YulFunctionCall","src":"3617:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"3606:7:39","nodeType":"YulIdentifier","src":"3606:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3551:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3578:5:39","nodeType":"YulTypedName","src":"3578:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3588:7:39","nodeType":"YulTypedName","src":"3588:7:39","type":""}],"src":"3551:126:39"},{"body":{"nativeSrc":"3728:51:39","nodeType":"YulBlock","src":"3728:51:39","statements":[{"nativeSrc":"3738:35:39","nodeType":"YulAssignment","src":"3738:35:39","value":{"arguments":[{"name":"value","nativeSrc":"3767:5:39","nodeType":"YulIdentifier","src":"3767:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3749:17:39","nodeType":"YulIdentifier","src":"3749:17:39"},"nativeSrc":"3749:24:39","nodeType":"YulFunctionCall","src":"3749:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"3738:7:39","nodeType":"YulIdentifier","src":"3738:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"3683:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3710:5:39","nodeType":"YulTypedName","src":"3710:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3720:7:39","nodeType":"YulTypedName","src":"3720:7:39","type":""}],"src":"3683:96:39"},{"body":{"nativeSrc":"3850:53:39","nodeType":"YulBlock","src":"3850:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3867:3:39","nodeType":"YulIdentifier","src":"3867:3:39"},{"arguments":[{"name":"value","nativeSrc":"3890:5:39","nodeType":"YulIdentifier","src":"3890:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3872:17:39","nodeType":"YulIdentifier","src":"3872:17:39"},"nativeSrc":"3872:24:39","nodeType":"YulFunctionCall","src":"3872:24:39"}],"functionName":{"name":"mstore","nativeSrc":"3860:6:39","nodeType":"YulIdentifier","src":"3860:6:39"},"nativeSrc":"3860:37:39","nodeType":"YulFunctionCall","src":"3860:37:39"},"nativeSrc":"3860:37:39","nodeType":"YulExpressionStatement","src":"3860:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3785:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3838:5:39","nodeType":"YulTypedName","src":"3838:5:39","type":""},{"name":"pos","nativeSrc":"3845:3:39","nodeType":"YulTypedName","src":"3845:3:39","type":""}],"src":"3785:118:39"},{"body":{"nativeSrc":"4007:124:39","nodeType":"YulBlock","src":"4007:124:39","statements":[{"nativeSrc":"4017:26:39","nodeType":"YulAssignment","src":"4017:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"4029:9:39","nodeType":"YulIdentifier","src":"4029:9:39"},{"kind":"number","nativeSrc":"4040:2:39","nodeType":"YulLiteral","src":"4040:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4025:3:39","nodeType":"YulIdentifier","src":"4025:3:39"},"nativeSrc":"4025:18:39","nodeType":"YulFunctionCall","src":"4025:18:39"},"variableNames":[{"name":"tail","nativeSrc":"4017:4:39","nodeType":"YulIdentifier","src":"4017:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4097:6:39","nodeType":"YulIdentifier","src":"4097:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"4110:9:39","nodeType":"YulIdentifier","src":"4110:9:39"},{"kind":"number","nativeSrc":"4121:1:39","nodeType":"YulLiteral","src":"4121:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4106:3:39","nodeType":"YulIdentifier","src":"4106:3:39"},"nativeSrc":"4106:17:39","nodeType":"YulFunctionCall","src":"4106:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4053:43:39","nodeType":"YulIdentifier","src":"4053:43:39"},"nativeSrc":"4053:71:39","nodeType":"YulFunctionCall","src":"4053:71:39"},"nativeSrc":"4053:71:39","nodeType":"YulExpressionStatement","src":"4053:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3909:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3979:9:39","nodeType":"YulTypedName","src":"3979:9:39","type":""},{"name":"value0","nativeSrc":"3991:6:39","nodeType":"YulTypedName","src":"3991:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4002:4:39","nodeType":"YulTypedName","src":"4002:4:39","type":""}],"src":"3909:222:39"},{"body":{"nativeSrc":"4180:79:39","nodeType":"YulBlock","src":"4180:79:39","statements":[{"body":{"nativeSrc":"4237:16:39","nodeType":"YulBlock","src":"4237:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4246:1:39","nodeType":"YulLiteral","src":"4246:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"4249:1:39","nodeType":"YulLiteral","src":"4249:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4239:6:39","nodeType":"YulIdentifier","src":"4239:6:39"},"nativeSrc":"4239:12:39","nodeType":"YulFunctionCall","src":"4239:12:39"},"nativeSrc":"4239:12:39","nodeType":"YulExpressionStatement","src":"4239:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4203:5:39","nodeType":"YulIdentifier","src":"4203:5:39"},{"arguments":[{"name":"value","nativeSrc":"4228:5:39","nodeType":"YulIdentifier","src":"4228:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4210:17:39","nodeType":"YulIdentifier","src":"4210:17:39"},"nativeSrc":"4210:24:39","nodeType":"YulFunctionCall","src":"4210:24:39"}],"functionName":{"name":"eq","nativeSrc":"4200:2:39","nodeType":"YulIdentifier","src":"4200:2:39"},"nativeSrc":"4200:35:39","nodeType":"YulFunctionCall","src":"4200:35:39"}],"functionName":{"name":"iszero","nativeSrc":"4193:6:39","nodeType":"YulIdentifier","src":"4193:6:39"},"nativeSrc":"4193:43:39","nodeType":"YulFunctionCall","src":"4193:43:39"},"nativeSrc":"4190:63:39","nodeType":"YulIf","src":"4190:63:39"}]},"name":"validator_revert_t_address","nativeSrc":"4137:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4173:5:39","nodeType":"YulTypedName","src":"4173:5:39","type":""}],"src":"4137:122:39"},{"body":{"nativeSrc":"4317:87:39","nodeType":"YulBlock","src":"4317:87:39","statements":[{"nativeSrc":"4327:29:39","nodeType":"YulAssignment","src":"4327:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"4349:6:39","nodeType":"YulIdentifier","src":"4349:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"4336:12:39","nodeType":"YulIdentifier","src":"4336:12:39"},"nativeSrc":"4336:20:39","nodeType":"YulFunctionCall","src":"4336:20:39"},"variableNames":[{"name":"value","nativeSrc":"4327:5:39","nodeType":"YulIdentifier","src":"4327:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4392:5:39","nodeType":"YulIdentifier","src":"4392:5:39"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4365:26:39","nodeType":"YulIdentifier","src":"4365:26:39"},"nativeSrc":"4365:33:39","nodeType":"YulFunctionCall","src":"4365:33:39"},"nativeSrc":"4365:33:39","nodeType":"YulExpressionStatement","src":"4365:33:39"}]},"name":"abi_decode_t_address","nativeSrc":"4265:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4295:6:39","nodeType":"YulTypedName","src":"4295:6:39","type":""},{"name":"end","nativeSrc":"4303:3:39","nodeType":"YulTypedName","src":"4303:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4311:5:39","nodeType":"YulTypedName","src":"4311:5:39","type":""}],"src":"4265:139:39"},{"body":{"nativeSrc":"4493:391:39","nodeType":"YulBlock","src":"4493:391:39","statements":[{"body":{"nativeSrc":"4539:83:39","nodeType":"YulBlock","src":"4539:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4541:77:39","nodeType":"YulIdentifier","src":"4541:77:39"},"nativeSrc":"4541:79:39","nodeType":"YulFunctionCall","src":"4541:79:39"},"nativeSrc":"4541:79:39","nodeType":"YulExpressionStatement","src":"4541:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4514:7:39","nodeType":"YulIdentifier","src":"4514:7:39"},{"name":"headStart","nativeSrc":"4523:9:39","nodeType":"YulIdentifier","src":"4523:9:39"}],"functionName":{"name":"sub","nativeSrc":"4510:3:39","nodeType":"YulIdentifier","src":"4510:3:39"},"nativeSrc":"4510:23:39","nodeType":"YulFunctionCall","src":"4510:23:39"},{"kind":"number","nativeSrc":"4535:2:39","nodeType":"YulLiteral","src":"4535:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4506:3:39","nodeType":"YulIdentifier","src":"4506:3:39"},"nativeSrc":"4506:32:39","nodeType":"YulFunctionCall","src":"4506:32:39"},"nativeSrc":"4503:119:39","nodeType":"YulIf","src":"4503:119:39"},{"nativeSrc":"4632:117:39","nodeType":"YulBlock","src":"4632:117:39","statements":[{"nativeSrc":"4647:15:39","nodeType":"YulVariableDeclaration","src":"4647:15:39","value":{"kind":"number","nativeSrc":"4661:1:39","nodeType":"YulLiteral","src":"4661:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4651:6:39","nodeType":"YulTypedName","src":"4651:6:39","type":""}]},{"nativeSrc":"4676:63:39","nodeType":"YulAssignment","src":"4676:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4711:9:39","nodeType":"YulIdentifier","src":"4711:9:39"},{"name":"offset","nativeSrc":"4722:6:39","nodeType":"YulIdentifier","src":"4722:6:39"}],"functionName":{"name":"add","nativeSrc":"4707:3:39","nodeType":"YulIdentifier","src":"4707:3:39"},"nativeSrc":"4707:22:39","nodeType":"YulFunctionCall","src":"4707:22:39"},{"name":"dataEnd","nativeSrc":"4731:7:39","nodeType":"YulIdentifier","src":"4731:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4686:20:39","nodeType":"YulIdentifier","src":"4686:20:39"},"nativeSrc":"4686:53:39","nodeType":"YulFunctionCall","src":"4686:53:39"},"variableNames":[{"name":"value0","nativeSrc":"4676:6:39","nodeType":"YulIdentifier","src":"4676:6:39"}]}]},{"nativeSrc":"4759:118:39","nodeType":"YulBlock","src":"4759:118:39","statements":[{"nativeSrc":"4774:16:39","nodeType":"YulVariableDeclaration","src":"4774:16:39","value":{"kind":"number","nativeSrc":"4788:2:39","nodeType":"YulLiteral","src":"4788:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4778:6:39","nodeType":"YulTypedName","src":"4778:6:39","type":""}]},{"nativeSrc":"4804:63:39","nodeType":"YulAssignment","src":"4804:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4839:9:39","nodeType":"YulIdentifier","src":"4839:9:39"},{"name":"offset","nativeSrc":"4850:6:39","nodeType":"YulIdentifier","src":"4850:6:39"}],"functionName":{"name":"add","nativeSrc":"4835:3:39","nodeType":"YulIdentifier","src":"4835:3:39"},"nativeSrc":"4835:22:39","nodeType":"YulFunctionCall","src":"4835:22:39"},{"name":"dataEnd","nativeSrc":"4859:7:39","nodeType":"YulIdentifier","src":"4859:7:39"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4814:20:39","nodeType":"YulIdentifier","src":"4814:20:39"},"nativeSrc":"4814:53:39","nodeType":"YulFunctionCall","src":"4814:53:39"},"variableNames":[{"name":"value1","nativeSrc":"4804:6:39","nodeType":"YulIdentifier","src":"4804:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4410:474:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4455:9:39","nodeType":"YulTypedName","src":"4455:9:39","type":""},{"name":"dataEnd","nativeSrc":"4466:7:39","nodeType":"YulTypedName","src":"4466:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4478:6:39","nodeType":"YulTypedName","src":"4478:6:39","type":""},{"name":"value1","nativeSrc":"4486:6:39","nodeType":"YulTypedName","src":"4486:6:39","type":""}],"src":"4410:474:39"},{"body":{"nativeSrc":"4990:519:39","nodeType":"YulBlock","src":"4990:519:39","statements":[{"body":{"nativeSrc":"5036:83:39","nodeType":"YulBlock","src":"5036:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5038:77:39","nodeType":"YulIdentifier","src":"5038:77:39"},"nativeSrc":"5038:79:39","nodeType":"YulFunctionCall","src":"5038:79:39"},"nativeSrc":"5038:79:39","nodeType":"YulExpressionStatement","src":"5038:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5011:7:39","nodeType":"YulIdentifier","src":"5011:7:39"},{"name":"headStart","nativeSrc":"5020:9:39","nodeType":"YulIdentifier","src":"5020:9:39"}],"functionName":{"name":"sub","nativeSrc":"5007:3:39","nodeType":"YulIdentifier","src":"5007:3:39"},"nativeSrc":"5007:23:39","nodeType":"YulFunctionCall","src":"5007:23:39"},{"kind":"number","nativeSrc":"5032:2:39","nodeType":"YulLiteral","src":"5032:2:39","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5003:3:39","nodeType":"YulIdentifier","src":"5003:3:39"},"nativeSrc":"5003:32:39","nodeType":"YulFunctionCall","src":"5003:32:39"},"nativeSrc":"5000:119:39","nodeType":"YulIf","src":"5000:119:39"},{"nativeSrc":"5129:117:39","nodeType":"YulBlock","src":"5129:117:39","statements":[{"nativeSrc":"5144:15:39","nodeType":"YulVariableDeclaration","src":"5144:15:39","value":{"kind":"number","nativeSrc":"5158:1:39","nodeType":"YulLiteral","src":"5158:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5148:6:39","nodeType":"YulTypedName","src":"5148:6:39","type":""}]},{"nativeSrc":"5173:63:39","nodeType":"YulAssignment","src":"5173:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5208:9:39","nodeType":"YulIdentifier","src":"5208:9:39"},{"name":"offset","nativeSrc":"5219:6:39","nodeType":"YulIdentifier","src":"5219:6:39"}],"functionName":{"name":"add","nativeSrc":"5204:3:39","nodeType":"YulIdentifier","src":"5204:3:39"},"nativeSrc":"5204:22:39","nodeType":"YulFunctionCall","src":"5204:22:39"},{"name":"dataEnd","nativeSrc":"5228:7:39","nodeType":"YulIdentifier","src":"5228:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5183:20:39","nodeType":"YulIdentifier","src":"5183:20:39"},"nativeSrc":"5183:53:39","nodeType":"YulFunctionCall","src":"5183:53:39"},"variableNames":[{"name":"value0","nativeSrc":"5173:6:39","nodeType":"YulIdentifier","src":"5173:6:39"}]}]},{"nativeSrc":"5256:118:39","nodeType":"YulBlock","src":"5256:118:39","statements":[{"nativeSrc":"5271:16:39","nodeType":"YulVariableDeclaration","src":"5271:16:39","value":{"kind":"number","nativeSrc":"5285:2:39","nodeType":"YulLiteral","src":"5285:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5275:6:39","nodeType":"YulTypedName","src":"5275:6:39","type":""}]},{"nativeSrc":"5301:63:39","nodeType":"YulAssignment","src":"5301:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5336:9:39","nodeType":"YulIdentifier","src":"5336:9:39"},{"name":"offset","nativeSrc":"5347:6:39","nodeType":"YulIdentifier","src":"5347:6:39"}],"functionName":{"name":"add","nativeSrc":"5332:3:39","nodeType":"YulIdentifier","src":"5332:3:39"},"nativeSrc":"5332:22:39","nodeType":"YulFunctionCall","src":"5332:22:39"},{"name":"dataEnd","nativeSrc":"5356:7:39","nodeType":"YulIdentifier","src":"5356:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5311:20:39","nodeType":"YulIdentifier","src":"5311:20:39"},"nativeSrc":"5311:53:39","nodeType":"YulFunctionCall","src":"5311:53:39"},"variableNames":[{"name":"value1","nativeSrc":"5301:6:39","nodeType":"YulIdentifier","src":"5301:6:39"}]}]},{"nativeSrc":"5384:118:39","nodeType":"YulBlock","src":"5384:118:39","statements":[{"nativeSrc":"5399:16:39","nodeType":"YulVariableDeclaration","src":"5399:16:39","value":{"kind":"number","nativeSrc":"5413:2:39","nodeType":"YulLiteral","src":"5413:2:39","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5403:6:39","nodeType":"YulTypedName","src":"5403:6:39","type":""}]},{"nativeSrc":"5429:63:39","nodeType":"YulAssignment","src":"5429:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5464:9:39","nodeType":"YulIdentifier","src":"5464:9:39"},{"name":"offset","nativeSrc":"5475:6:39","nodeType":"YulIdentifier","src":"5475:6:39"}],"functionName":{"name":"add","nativeSrc":"5460:3:39","nodeType":"YulIdentifier","src":"5460:3:39"},"nativeSrc":"5460:22:39","nodeType":"YulFunctionCall","src":"5460:22:39"},{"name":"dataEnd","nativeSrc":"5484:7:39","nodeType":"YulIdentifier","src":"5484:7:39"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5439:20:39","nodeType":"YulIdentifier","src":"5439:20:39"},"nativeSrc":"5439:53:39","nodeType":"YulFunctionCall","src":"5439:53:39"},"variableNames":[{"name":"value2","nativeSrc":"5429:6:39","nodeType":"YulIdentifier","src":"5429:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4890:619:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4944:9:39","nodeType":"YulTypedName","src":"4944:9:39","type":""},{"name":"dataEnd","nativeSrc":"4955:7:39","nodeType":"YulTypedName","src":"4955:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4967:6:39","nodeType":"YulTypedName","src":"4967:6:39","type":""},{"name":"value1","nativeSrc":"4975:6:39","nodeType":"YulTypedName","src":"4975:6:39","type":""},{"name":"value2","nativeSrc":"4983:6:39","nodeType":"YulTypedName","src":"4983:6:39","type":""}],"src":"4890:619:39"},{"body":{"nativeSrc":"5581:263:39","nodeType":"YulBlock","src":"5581:263:39","statements":[{"body":{"nativeSrc":"5627:83:39","nodeType":"YulBlock","src":"5627:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5629:77:39","nodeType":"YulIdentifier","src":"5629:77:39"},"nativeSrc":"5629:79:39","nodeType":"YulFunctionCall","src":"5629:79:39"},"nativeSrc":"5629:79:39","nodeType":"YulExpressionStatement","src":"5629:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5602:7:39","nodeType":"YulIdentifier","src":"5602:7:39"},{"name":"headStart","nativeSrc":"5611:9:39","nodeType":"YulIdentifier","src":"5611:9:39"}],"functionName":{"name":"sub","nativeSrc":"5598:3:39","nodeType":"YulIdentifier","src":"5598:3:39"},"nativeSrc":"5598:23:39","nodeType":"YulFunctionCall","src":"5598:23:39"},{"kind":"number","nativeSrc":"5623:2:39","nodeType":"YulLiteral","src":"5623:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5594:3:39","nodeType":"YulIdentifier","src":"5594:3:39"},"nativeSrc":"5594:32:39","nodeType":"YulFunctionCall","src":"5594:32:39"},"nativeSrc":"5591:119:39","nodeType":"YulIf","src":"5591:119:39"},{"nativeSrc":"5720:117:39","nodeType":"YulBlock","src":"5720:117:39","statements":[{"nativeSrc":"5735:15:39","nodeType":"YulVariableDeclaration","src":"5735:15:39","value":{"kind":"number","nativeSrc":"5749:1:39","nodeType":"YulLiteral","src":"5749:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5739:6:39","nodeType":"YulTypedName","src":"5739:6:39","type":""}]},{"nativeSrc":"5764:63:39","nodeType":"YulAssignment","src":"5764:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5799:9:39","nodeType":"YulIdentifier","src":"5799:9:39"},{"name":"offset","nativeSrc":"5810:6:39","nodeType":"YulIdentifier","src":"5810:6:39"}],"functionName":{"name":"add","nativeSrc":"5795:3:39","nodeType":"YulIdentifier","src":"5795:3:39"},"nativeSrc":"5795:22:39","nodeType":"YulFunctionCall","src":"5795:22:39"},{"name":"dataEnd","nativeSrc":"5819:7:39","nodeType":"YulIdentifier","src":"5819:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5774:20:39","nodeType":"YulIdentifier","src":"5774:20:39"},"nativeSrc":"5774:53:39","nodeType":"YulFunctionCall","src":"5774:53:39"},"variableNames":[{"name":"value0","nativeSrc":"5764:6:39","nodeType":"YulIdentifier","src":"5764:6:39"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5515:329:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5551:9:39","nodeType":"YulTypedName","src":"5551:9:39","type":""},{"name":"dataEnd","nativeSrc":"5562:7:39","nodeType":"YulTypedName","src":"5562:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5574:6:39","nodeType":"YulTypedName","src":"5574:6:39","type":""}],"src":"5515:329:39"},{"body":{"nativeSrc":"5915:53:39","nodeType":"YulBlock","src":"5915:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5932:3:39","nodeType":"YulIdentifier","src":"5932:3:39"},{"arguments":[{"name":"value","nativeSrc":"5955:5:39","nodeType":"YulIdentifier","src":"5955:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5937:17:39","nodeType":"YulIdentifier","src":"5937:17:39"},"nativeSrc":"5937:24:39","nodeType":"YulFunctionCall","src":"5937:24:39"}],"functionName":{"name":"mstore","nativeSrc":"5925:6:39","nodeType":"YulIdentifier","src":"5925:6:39"},"nativeSrc":"5925:37:39","nodeType":"YulFunctionCall","src":"5925:37:39"},"nativeSrc":"5925:37:39","nodeType":"YulExpressionStatement","src":"5925:37:39"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5850:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5903:5:39","nodeType":"YulTypedName","src":"5903:5:39","type":""},{"name":"pos","nativeSrc":"5910:3:39","nodeType":"YulTypedName","src":"5910:3:39","type":""}],"src":"5850:118:39"},{"body":{"nativeSrc":"6072:124:39","nodeType":"YulBlock","src":"6072:124:39","statements":[{"nativeSrc":"6082:26:39","nodeType":"YulAssignment","src":"6082:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"6094:9:39","nodeType":"YulIdentifier","src":"6094:9:39"},{"kind":"number","nativeSrc":"6105:2:39","nodeType":"YulLiteral","src":"6105:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6090:3:39","nodeType":"YulIdentifier","src":"6090:3:39"},"nativeSrc":"6090:18:39","nodeType":"YulFunctionCall","src":"6090:18:39"},"variableNames":[{"name":"tail","nativeSrc":"6082:4:39","nodeType":"YulIdentifier","src":"6082:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6162:6:39","nodeType":"YulIdentifier","src":"6162:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"6175:9:39","nodeType":"YulIdentifier","src":"6175:9:39"},{"kind":"number","nativeSrc":"6186:1:39","nodeType":"YulLiteral","src":"6186:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6171:3:39","nodeType":"YulIdentifier","src":"6171:3:39"},"nativeSrc":"6171:17:39","nodeType":"YulFunctionCall","src":"6171:17:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6118:43:39","nodeType":"YulIdentifier","src":"6118:43:39"},"nativeSrc":"6118:71:39","nodeType":"YulFunctionCall","src":"6118:71:39"},"nativeSrc":"6118:71:39","nodeType":"YulExpressionStatement","src":"6118:71:39"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5974:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6044:9:39","nodeType":"YulTypedName","src":"6044:9:39","type":""},{"name":"value0","nativeSrc":"6056:6:39","nodeType":"YulTypedName","src":"6056:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6067:4:39","nodeType":"YulTypedName","src":"6067:4:39","type":""}],"src":"5974:222:39"},{"body":{"nativeSrc":"6242:76:39","nodeType":"YulBlock","src":"6242:76:39","statements":[{"body":{"nativeSrc":"6296:16:39","nodeType":"YulBlock","src":"6296:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6305:1:39","nodeType":"YulLiteral","src":"6305:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"6308:1:39","nodeType":"YulLiteral","src":"6308:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6298:6:39","nodeType":"YulIdentifier","src":"6298:6:39"},"nativeSrc":"6298:12:39","nodeType":"YulFunctionCall","src":"6298:12:39"},"nativeSrc":"6298:12:39","nodeType":"YulExpressionStatement","src":"6298:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6265:5:39","nodeType":"YulIdentifier","src":"6265:5:39"},{"arguments":[{"name":"value","nativeSrc":"6287:5:39","nodeType":"YulIdentifier","src":"6287:5:39"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6272:14:39","nodeType":"YulIdentifier","src":"6272:14:39"},"nativeSrc":"6272:21:39","nodeType":"YulFunctionCall","src":"6272:21:39"}],"functionName":{"name":"eq","nativeSrc":"6262:2:39","nodeType":"YulIdentifier","src":"6262:2:39"},"nativeSrc":"6262:32:39","nodeType":"YulFunctionCall","src":"6262:32:39"}],"functionName":{"name":"iszero","nativeSrc":"6255:6:39","nodeType":"YulIdentifier","src":"6255:6:39"},"nativeSrc":"6255:40:39","nodeType":"YulFunctionCall","src":"6255:40:39"},"nativeSrc":"6252:60:39","nodeType":"YulIf","src":"6252:60:39"}]},"name":"validator_revert_t_bool","nativeSrc":"6202:116:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6235:5:39","nodeType":"YulTypedName","src":"6235:5:39","type":""}],"src":"6202:116:39"},{"body":{"nativeSrc":"6373:84:39","nodeType":"YulBlock","src":"6373:84:39","statements":[{"nativeSrc":"6383:29:39","nodeType":"YulAssignment","src":"6383:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"6405:6:39","nodeType":"YulIdentifier","src":"6405:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"6392:12:39","nodeType":"YulIdentifier","src":"6392:12:39"},"nativeSrc":"6392:20:39","nodeType":"YulFunctionCall","src":"6392:20:39"},"variableNames":[{"name":"value","nativeSrc":"6383:5:39","nodeType":"YulIdentifier","src":"6383:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6445:5:39","nodeType":"YulIdentifier","src":"6445:5:39"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6421:23:39","nodeType":"YulIdentifier","src":"6421:23:39"},"nativeSrc":"6421:30:39","nodeType":"YulFunctionCall","src":"6421:30:39"},"nativeSrc":"6421:30:39","nodeType":"YulExpressionStatement","src":"6421:30:39"}]},"name":"abi_decode_t_bool","nativeSrc":"6324:133:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6351:6:39","nodeType":"YulTypedName","src":"6351:6:39","type":""},{"name":"end","nativeSrc":"6359:3:39","nodeType":"YulTypedName","src":"6359:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6367:5:39","nodeType":"YulTypedName","src":"6367:5:39","type":""}],"src":"6324:133:39"},{"body":{"nativeSrc":"6543:388:39","nodeType":"YulBlock","src":"6543:388:39","statements":[{"body":{"nativeSrc":"6589:83:39","nodeType":"YulBlock","src":"6589:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6591:77:39","nodeType":"YulIdentifier","src":"6591:77:39"},"nativeSrc":"6591:79:39","nodeType":"YulFunctionCall","src":"6591:79:39"},"nativeSrc":"6591:79:39","nodeType":"YulExpressionStatement","src":"6591:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6564:7:39","nodeType":"YulIdentifier","src":"6564:7:39"},{"name":"headStart","nativeSrc":"6573:9:39","nodeType":"YulIdentifier","src":"6573:9:39"}],"functionName":{"name":"sub","nativeSrc":"6560:3:39","nodeType":"YulIdentifier","src":"6560:3:39"},"nativeSrc":"6560:23:39","nodeType":"YulFunctionCall","src":"6560:23:39"},{"kind":"number","nativeSrc":"6585:2:39","nodeType":"YulLiteral","src":"6585:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6556:3:39","nodeType":"YulIdentifier","src":"6556:3:39"},"nativeSrc":"6556:32:39","nodeType":"YulFunctionCall","src":"6556:32:39"},"nativeSrc":"6553:119:39","nodeType":"YulIf","src":"6553:119:39"},{"nativeSrc":"6682:117:39","nodeType":"YulBlock","src":"6682:117:39","statements":[{"nativeSrc":"6697:15:39","nodeType":"YulVariableDeclaration","src":"6697:15:39","value":{"kind":"number","nativeSrc":"6711:1:39","nodeType":"YulLiteral","src":"6711:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6701:6:39","nodeType":"YulTypedName","src":"6701:6:39","type":""}]},{"nativeSrc":"6726:63:39","nodeType":"YulAssignment","src":"6726:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6761:9:39","nodeType":"YulIdentifier","src":"6761:9:39"},{"name":"offset","nativeSrc":"6772:6:39","nodeType":"YulIdentifier","src":"6772:6:39"}],"functionName":{"name":"add","nativeSrc":"6757:3:39","nodeType":"YulIdentifier","src":"6757:3:39"},"nativeSrc":"6757:22:39","nodeType":"YulFunctionCall","src":"6757:22:39"},{"name":"dataEnd","nativeSrc":"6781:7:39","nodeType":"YulIdentifier","src":"6781:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6736:20:39","nodeType":"YulIdentifier","src":"6736:20:39"},"nativeSrc":"6736:53:39","nodeType":"YulFunctionCall","src":"6736:53:39"},"variableNames":[{"name":"value0","nativeSrc":"6726:6:39","nodeType":"YulIdentifier","src":"6726:6:39"}]}]},{"nativeSrc":"6809:115:39","nodeType":"YulBlock","src":"6809:115:39","statements":[{"nativeSrc":"6824:16:39","nodeType":"YulVariableDeclaration","src":"6824:16:39","value":{"kind":"number","nativeSrc":"6838:2:39","nodeType":"YulLiteral","src":"6838:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6828:6:39","nodeType":"YulTypedName","src":"6828:6:39","type":""}]},{"nativeSrc":"6854:60:39","nodeType":"YulAssignment","src":"6854:60:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6886:9:39","nodeType":"YulIdentifier","src":"6886:9:39"},{"name":"offset","nativeSrc":"6897:6:39","nodeType":"YulIdentifier","src":"6897:6:39"}],"functionName":{"name":"add","nativeSrc":"6882:3:39","nodeType":"YulIdentifier","src":"6882:3:39"},"nativeSrc":"6882:22:39","nodeType":"YulFunctionCall","src":"6882:22:39"},{"name":"dataEnd","nativeSrc":"6906:7:39","nodeType":"YulIdentifier","src":"6906:7:39"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"6864:17:39","nodeType":"YulIdentifier","src":"6864:17:39"},"nativeSrc":"6864:50:39","nodeType":"YulFunctionCall","src":"6864:50:39"},"variableNames":[{"name":"value1","nativeSrc":"6854:6:39","nodeType":"YulIdentifier","src":"6854:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"6463:468:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6505:9:39","nodeType":"YulTypedName","src":"6505:9:39","type":""},{"name":"dataEnd","nativeSrc":"6516:7:39","nodeType":"YulTypedName","src":"6516:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6528:6:39","nodeType":"YulTypedName","src":"6528:6:39","type":""},{"name":"value1","nativeSrc":"6536:6:39","nodeType":"YulTypedName","src":"6536:6:39","type":""}],"src":"6463:468:39"},{"body":{"nativeSrc":"7026:28:39","nodeType":"YulBlock","src":"7026:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7043:1:39","nodeType":"YulLiteral","src":"7043:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7046:1:39","nodeType":"YulLiteral","src":"7046:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7036:6:39","nodeType":"YulIdentifier","src":"7036:6:39"},"nativeSrc":"7036:12:39","nodeType":"YulFunctionCall","src":"7036:12:39"},"nativeSrc":"7036:12:39","nodeType":"YulExpressionStatement","src":"7036:12:39"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6937:117:39","nodeType":"YulFunctionDefinition","src":"6937:117:39"},{"body":{"nativeSrc":"7149:28:39","nodeType":"YulBlock","src":"7149:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7166:1:39","nodeType":"YulLiteral","src":"7166:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7169:1:39","nodeType":"YulLiteral","src":"7169:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7159:6:39","nodeType":"YulIdentifier","src":"7159:6:39"},"nativeSrc":"7159:12:39","nodeType":"YulFunctionCall","src":"7159:12:39"},"nativeSrc":"7159:12:39","nodeType":"YulExpressionStatement","src":"7159:12:39"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7060:117:39","nodeType":"YulFunctionDefinition","src":"7060:117:39"},{"body":{"nativeSrc":"7211:152:39","nodeType":"YulBlock","src":"7211:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7228:1:39","nodeType":"YulLiteral","src":"7228:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7231:77:39","nodeType":"YulLiteral","src":"7231:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7221:6:39","nodeType":"YulIdentifier","src":"7221:6:39"},"nativeSrc":"7221:88:39","nodeType":"YulFunctionCall","src":"7221:88:39"},"nativeSrc":"7221:88:39","nodeType":"YulExpressionStatement","src":"7221:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7325:1:39","nodeType":"YulLiteral","src":"7325:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"7328:4:39","nodeType":"YulLiteral","src":"7328:4:39","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"7318:6:39","nodeType":"YulIdentifier","src":"7318:6:39"},"nativeSrc":"7318:15:39","nodeType":"YulFunctionCall","src":"7318:15:39"},"nativeSrc":"7318:15:39","nodeType":"YulExpressionStatement","src":"7318:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7349:1:39","nodeType":"YulLiteral","src":"7349:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"7352:4:39","nodeType":"YulLiteral","src":"7352:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7342:6:39","nodeType":"YulIdentifier","src":"7342:6:39"},"nativeSrc":"7342:15:39","nodeType":"YulFunctionCall","src":"7342:15:39"},"nativeSrc":"7342:15:39","nodeType":"YulExpressionStatement","src":"7342:15:39"}]},"name":"panic_error_0x41","nativeSrc":"7183:180:39","nodeType":"YulFunctionDefinition","src":"7183:180:39"},{"body":{"nativeSrc":"7412:238:39","nodeType":"YulBlock","src":"7412:238:39","statements":[{"nativeSrc":"7422:58:39","nodeType":"YulVariableDeclaration","src":"7422:58:39","value":{"arguments":[{"name":"memPtr","nativeSrc":"7444:6:39","nodeType":"YulIdentifier","src":"7444:6:39"},{"arguments":[{"name":"size","nativeSrc":"7474:4:39","nodeType":"YulIdentifier","src":"7474:4:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7452:21:39","nodeType":"YulIdentifier","src":"7452:21:39"},"nativeSrc":"7452:27:39","nodeType":"YulFunctionCall","src":"7452:27:39"}],"functionName":{"name":"add","nativeSrc":"7440:3:39","nodeType":"YulIdentifier","src":"7440:3:39"},"nativeSrc":"7440:40:39","nodeType":"YulFunctionCall","src":"7440:40:39"},"variables":[{"name":"newFreePtr","nativeSrc":"7426:10:39","nodeType":"YulTypedName","src":"7426:10:39","type":""}]},{"body":{"nativeSrc":"7591:22:39","nodeType":"YulBlock","src":"7591:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7593:16:39","nodeType":"YulIdentifier","src":"7593:16:39"},"nativeSrc":"7593:18:39","nodeType":"YulFunctionCall","src":"7593:18:39"},"nativeSrc":"7593:18:39","nodeType":"YulExpressionStatement","src":"7593:18:39"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7534:10:39","nodeType":"YulIdentifier","src":"7534:10:39"},{"kind":"number","nativeSrc":"7546:18:39","nodeType":"YulLiteral","src":"7546:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7531:2:39","nodeType":"YulIdentifier","src":"7531:2:39"},"nativeSrc":"7531:34:39","nodeType":"YulFunctionCall","src":"7531:34:39"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7570:10:39","nodeType":"YulIdentifier","src":"7570:10:39"},{"name":"memPtr","nativeSrc":"7582:6:39","nodeType":"YulIdentifier","src":"7582:6:39"}],"functionName":{"name":"lt","nativeSrc":"7567:2:39","nodeType":"YulIdentifier","src":"7567:2:39"},"nativeSrc":"7567:22:39","nodeType":"YulFunctionCall","src":"7567:22:39"}],"functionName":{"name":"or","nativeSrc":"7528:2:39","nodeType":"YulIdentifier","src":"7528:2:39"},"nativeSrc":"7528:62:39","nodeType":"YulFunctionCall","src":"7528:62:39"},"nativeSrc":"7525:88:39","nodeType":"YulIf","src":"7525:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7629:2:39","nodeType":"YulLiteral","src":"7629:2:39","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7633:10:39","nodeType":"YulIdentifier","src":"7633:10:39"}],"functionName":{"name":"mstore","nativeSrc":"7622:6:39","nodeType":"YulIdentifier","src":"7622:6:39"},"nativeSrc":"7622:22:39","nodeType":"YulFunctionCall","src":"7622:22:39"},"nativeSrc":"7622:22:39","nodeType":"YulExpressionStatement","src":"7622:22:39"}]},"name":"finalize_allocation","nativeSrc":"7369:281:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7398:6:39","nodeType":"YulTypedName","src":"7398:6:39","type":""},{"name":"size","nativeSrc":"7406:4:39","nodeType":"YulTypedName","src":"7406:4:39","type":""}],"src":"7369:281:39"},{"body":{"nativeSrc":"7697:88:39","nodeType":"YulBlock","src":"7697:88:39","statements":[{"nativeSrc":"7707:30:39","nodeType":"YulAssignment","src":"7707:30:39","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"7717:18:39","nodeType":"YulIdentifier","src":"7717:18:39"},"nativeSrc":"7717:20:39","nodeType":"YulFunctionCall","src":"7717:20:39"},"variableNames":[{"name":"memPtr","nativeSrc":"7707:6:39","nodeType":"YulIdentifier","src":"7707:6:39"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"7766:6:39","nodeType":"YulIdentifier","src":"7766:6:39"},{"name":"size","nativeSrc":"7774:4:39","nodeType":"YulIdentifier","src":"7774:4:39"}],"functionName":{"name":"finalize_allocation","nativeSrc":"7746:19:39","nodeType":"YulIdentifier","src":"7746:19:39"},"nativeSrc":"7746:33:39","nodeType":"YulFunctionCall","src":"7746:33:39"},"nativeSrc":"7746:33:39","nodeType":"YulExpressionStatement","src":"7746:33:39"}]},"name":"allocate_memory","nativeSrc":"7656:129:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"7681:4:39","nodeType":"YulTypedName","src":"7681:4:39","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"7690:6:39","nodeType":"YulTypedName","src":"7690:6:39","type":""}],"src":"7656:129:39"},{"body":{"nativeSrc":"7857:241:39","nodeType":"YulBlock","src":"7857:241:39","statements":[{"body":{"nativeSrc":"7962:22:39","nodeType":"YulBlock","src":"7962:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7964:16:39","nodeType":"YulIdentifier","src":"7964:16:39"},"nativeSrc":"7964:18:39","nodeType":"YulFunctionCall","src":"7964:18:39"},"nativeSrc":"7964:18:39","nodeType":"YulExpressionStatement","src":"7964:18:39"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7934:6:39","nodeType":"YulIdentifier","src":"7934:6:39"},{"kind":"number","nativeSrc":"7942:18:39","nodeType":"YulLiteral","src":"7942:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7931:2:39","nodeType":"YulIdentifier","src":"7931:2:39"},"nativeSrc":"7931:30:39","nodeType":"YulFunctionCall","src":"7931:30:39"},"nativeSrc":"7928:56:39","nodeType":"YulIf","src":"7928:56:39"},{"nativeSrc":"7994:37:39","nodeType":"YulAssignment","src":"7994:37:39","value":{"arguments":[{"name":"length","nativeSrc":"8024:6:39","nodeType":"YulIdentifier","src":"8024:6:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8002:21:39","nodeType":"YulIdentifier","src":"8002:21:39"},"nativeSrc":"8002:29:39","nodeType":"YulFunctionCall","src":"8002:29:39"},"variableNames":[{"name":"size","nativeSrc":"7994:4:39","nodeType":"YulIdentifier","src":"7994:4:39"}]},{"nativeSrc":"8068:23:39","nodeType":"YulAssignment","src":"8068:23:39","value":{"arguments":[{"name":"size","nativeSrc":"8080:4:39","nodeType":"YulIdentifier","src":"8080:4:39"},{"kind":"number","nativeSrc":"8086:4:39","nodeType":"YulLiteral","src":"8086:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8076:3:39","nodeType":"YulIdentifier","src":"8076:3:39"},"nativeSrc":"8076:15:39","nodeType":"YulFunctionCall","src":"8076:15:39"},"variableNames":[{"name":"size","nativeSrc":"8068:4:39","nodeType":"YulIdentifier","src":"8068:4:39"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7791:307:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7841:6:39","nodeType":"YulTypedName","src":"7841:6:39","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7852:4:39","nodeType":"YulTypedName","src":"7852:4:39","type":""}],"src":"7791:307:39"},{"body":{"nativeSrc":"8168:82:39","nodeType":"YulBlock","src":"8168:82:39","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8191:3:39","nodeType":"YulIdentifier","src":"8191:3:39"},{"name":"src","nativeSrc":"8196:3:39","nodeType":"YulIdentifier","src":"8196:3:39"},{"name":"length","nativeSrc":"8201:6:39","nodeType":"YulIdentifier","src":"8201:6:39"}],"functionName":{"name":"calldatacopy","nativeSrc":"8178:12:39","nodeType":"YulIdentifier","src":"8178:12:39"},"nativeSrc":"8178:30:39","nodeType":"YulFunctionCall","src":"8178:30:39"},"nativeSrc":"8178:30:39","nodeType":"YulExpressionStatement","src":"8178:30:39"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8228:3:39","nodeType":"YulIdentifier","src":"8228:3:39"},{"name":"length","nativeSrc":"8233:6:39","nodeType":"YulIdentifier","src":"8233:6:39"}],"functionName":{"name":"add","nativeSrc":"8224:3:39","nodeType":"YulIdentifier","src":"8224:3:39"},"nativeSrc":"8224:16:39","nodeType":"YulFunctionCall","src":"8224:16:39"},{"kind":"number","nativeSrc":"8242:1:39","nodeType":"YulLiteral","src":"8242:1:39","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8217:6:39","nodeType":"YulIdentifier","src":"8217:6:39"},"nativeSrc":"8217:27:39","nodeType":"YulFunctionCall","src":"8217:27:39"},"nativeSrc":"8217:27:39","nodeType":"YulExpressionStatement","src":"8217:27:39"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8104:146:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8150:3:39","nodeType":"YulTypedName","src":"8150:3:39","type":""},{"name":"dst","nativeSrc":"8155:3:39","nodeType":"YulTypedName","src":"8155:3:39","type":""},{"name":"length","nativeSrc":"8160:6:39","nodeType":"YulTypedName","src":"8160:6:39","type":""}],"src":"8104:146:39"},{"body":{"nativeSrc":"8339:340:39","nodeType":"YulBlock","src":"8339:340:39","statements":[{"nativeSrc":"8349:74:39","nodeType":"YulAssignment","src":"8349:74:39","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8415:6:39","nodeType":"YulIdentifier","src":"8415:6:39"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8374:40:39","nodeType":"YulIdentifier","src":"8374:40:39"},"nativeSrc":"8374:48:39","nodeType":"YulFunctionCall","src":"8374:48:39"}],"functionName":{"name":"allocate_memory","nativeSrc":"8358:15:39","nodeType":"YulIdentifier","src":"8358:15:39"},"nativeSrc":"8358:65:39","nodeType":"YulFunctionCall","src":"8358:65:39"},"variableNames":[{"name":"array","nativeSrc":"8349:5:39","nodeType":"YulIdentifier","src":"8349:5:39"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8439:5:39","nodeType":"YulIdentifier","src":"8439:5:39"},{"name":"length","nativeSrc":"8446:6:39","nodeType":"YulIdentifier","src":"8446:6:39"}],"functionName":{"name":"mstore","nativeSrc":"8432:6:39","nodeType":"YulIdentifier","src":"8432:6:39"},"nativeSrc":"8432:21:39","nodeType":"YulFunctionCall","src":"8432:21:39"},"nativeSrc":"8432:21:39","nodeType":"YulExpressionStatement","src":"8432:21:39"},{"nativeSrc":"8462:27:39","nodeType":"YulVariableDeclaration","src":"8462:27:39","value":{"arguments":[{"name":"array","nativeSrc":"8477:5:39","nodeType":"YulIdentifier","src":"8477:5:39"},{"kind":"number","nativeSrc":"8484:4:39","nodeType":"YulLiteral","src":"8484:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8473:3:39","nodeType":"YulIdentifier","src":"8473:3:39"},"nativeSrc":"8473:16:39","nodeType":"YulFunctionCall","src":"8473:16:39"},"variables":[{"name":"dst","nativeSrc":"8466:3:39","nodeType":"YulTypedName","src":"8466:3:39","type":""}]},{"body":{"nativeSrc":"8527:83:39","nodeType":"YulBlock","src":"8527:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8529:77:39","nodeType":"YulIdentifier","src":"8529:77:39"},"nativeSrc":"8529:79:39","nodeType":"YulFunctionCall","src":"8529:79:39"},"nativeSrc":"8529:79:39","nodeType":"YulExpressionStatement","src":"8529:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8508:3:39","nodeType":"YulIdentifier","src":"8508:3:39"},{"name":"length","nativeSrc":"8513:6:39","nodeType":"YulIdentifier","src":"8513:6:39"}],"functionName":{"name":"add","nativeSrc":"8504:3:39","nodeType":"YulIdentifier","src":"8504:3:39"},"nativeSrc":"8504:16:39","nodeType":"YulFunctionCall","src":"8504:16:39"},{"name":"end","nativeSrc":"8522:3:39","nodeType":"YulIdentifier","src":"8522:3:39"}],"functionName":{"name":"gt","nativeSrc":"8501:2:39","nodeType":"YulIdentifier","src":"8501:2:39"},"nativeSrc":"8501:25:39","nodeType":"YulFunctionCall","src":"8501:25:39"},"nativeSrc":"8498:112:39","nodeType":"YulIf","src":"8498:112:39"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8656:3:39","nodeType":"YulIdentifier","src":"8656:3:39"},{"name":"dst","nativeSrc":"8661:3:39","nodeType":"YulIdentifier","src":"8661:3:39"},{"name":"length","nativeSrc":"8666:6:39","nodeType":"YulIdentifier","src":"8666:6:39"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8619:36:39","nodeType":"YulIdentifier","src":"8619:36:39"},"nativeSrc":"8619:54:39","nodeType":"YulFunctionCall","src":"8619:54:39"},"nativeSrc":"8619:54:39","nodeType":"YulExpressionStatement","src":"8619:54:39"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8256:423:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8312:3:39","nodeType":"YulTypedName","src":"8312:3:39","type":""},{"name":"length","nativeSrc":"8317:6:39","nodeType":"YulTypedName","src":"8317:6:39","type":""},{"name":"end","nativeSrc":"8325:3:39","nodeType":"YulTypedName","src":"8325:3:39","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8333:5:39","nodeType":"YulTypedName","src":"8333:5:39","type":""}],"src":"8256:423:39"},{"body":{"nativeSrc":"8759:277:39","nodeType":"YulBlock","src":"8759:277:39","statements":[{"body":{"nativeSrc":"8808:83:39","nodeType":"YulBlock","src":"8808:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8810:77:39","nodeType":"YulIdentifier","src":"8810:77:39"},"nativeSrc":"8810:79:39","nodeType":"YulFunctionCall","src":"8810:79:39"},"nativeSrc":"8810:79:39","nodeType":"YulExpressionStatement","src":"8810:79:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8787:6:39","nodeType":"YulIdentifier","src":"8787:6:39"},{"kind":"number","nativeSrc":"8795:4:39","nodeType":"YulLiteral","src":"8795:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8783:3:39","nodeType":"YulIdentifier","src":"8783:3:39"},"nativeSrc":"8783:17:39","nodeType":"YulFunctionCall","src":"8783:17:39"},{"name":"end","nativeSrc":"8802:3:39","nodeType":"YulIdentifier","src":"8802:3:39"}],"functionName":{"name":"slt","nativeSrc":"8779:3:39","nodeType":"YulIdentifier","src":"8779:3:39"},"nativeSrc":"8779:27:39","nodeType":"YulFunctionCall","src":"8779:27:39"}],"functionName":{"name":"iszero","nativeSrc":"8772:6:39","nodeType":"YulIdentifier","src":"8772:6:39"},"nativeSrc":"8772:35:39","nodeType":"YulFunctionCall","src":"8772:35:39"},"nativeSrc":"8769:122:39","nodeType":"YulIf","src":"8769:122:39"},{"nativeSrc":"8900:34:39","nodeType":"YulVariableDeclaration","src":"8900:34:39","value":{"arguments":[{"name":"offset","nativeSrc":"8927:6:39","nodeType":"YulIdentifier","src":"8927:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"8914:12:39","nodeType":"YulIdentifier","src":"8914:12:39"},"nativeSrc":"8914:20:39","nodeType":"YulFunctionCall","src":"8914:20:39"},"variables":[{"name":"length","nativeSrc":"8904:6:39","nodeType":"YulTypedName","src":"8904:6:39","type":""}]},{"nativeSrc":"8943:87:39","nodeType":"YulAssignment","src":"8943:87:39","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9003:6:39","nodeType":"YulIdentifier","src":"9003:6:39"},{"kind":"number","nativeSrc":"9011:4:39","nodeType":"YulLiteral","src":"9011:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8999:3:39","nodeType":"YulIdentifier","src":"8999:3:39"},"nativeSrc":"8999:17:39","nodeType":"YulFunctionCall","src":"8999:17:39"},{"name":"length","nativeSrc":"9018:6:39","nodeType":"YulIdentifier","src":"9018:6:39"},{"name":"end","nativeSrc":"9026:3:39","nodeType":"YulIdentifier","src":"9026:3:39"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8952:46:39","nodeType":"YulIdentifier","src":"8952:46:39"},"nativeSrc":"8952:78:39","nodeType":"YulFunctionCall","src":"8952:78:39"},"variableNames":[{"name":"array","nativeSrc":"8943:5:39","nodeType":"YulIdentifier","src":"8943:5:39"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8698:338:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8737:6:39","nodeType":"YulTypedName","src":"8737:6:39","type":""},{"name":"end","nativeSrc":"8745:3:39","nodeType":"YulTypedName","src":"8745:3:39","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8753:5:39","nodeType":"YulTypedName","src":"8753:5:39","type":""}],"src":"8698:338:39"},{"body":{"nativeSrc":"9168:817:39","nodeType":"YulBlock","src":"9168:817:39","statements":[{"body":{"nativeSrc":"9215:83:39","nodeType":"YulBlock","src":"9215:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9217:77:39","nodeType":"YulIdentifier","src":"9217:77:39"},"nativeSrc":"9217:79:39","nodeType":"YulFunctionCall","src":"9217:79:39"},"nativeSrc":"9217:79:39","nodeType":"YulExpressionStatement","src":"9217:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9189:7:39","nodeType":"YulIdentifier","src":"9189:7:39"},{"name":"headStart","nativeSrc":"9198:9:39","nodeType":"YulIdentifier","src":"9198:9:39"}],"functionName":{"name":"sub","nativeSrc":"9185:3:39","nodeType":"YulIdentifier","src":"9185:3:39"},"nativeSrc":"9185:23:39","nodeType":"YulFunctionCall","src":"9185:23:39"},{"kind":"number","nativeSrc":"9210:3:39","nodeType":"YulLiteral","src":"9210:3:39","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"9181:3:39","nodeType":"YulIdentifier","src":"9181:3:39"},"nativeSrc":"9181:33:39","nodeType":"YulFunctionCall","src":"9181:33:39"},"nativeSrc":"9178:120:39","nodeType":"YulIf","src":"9178:120:39"},{"nativeSrc":"9308:117:39","nodeType":"YulBlock","src":"9308:117:39","statements":[{"nativeSrc":"9323:15:39","nodeType":"YulVariableDeclaration","src":"9323:15:39","value":{"kind":"number","nativeSrc":"9337:1:39","nodeType":"YulLiteral","src":"9337:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9327:6:39","nodeType":"YulTypedName","src":"9327:6:39","type":""}]},{"nativeSrc":"9352:63:39","nodeType":"YulAssignment","src":"9352:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9387:9:39","nodeType":"YulIdentifier","src":"9387:9:39"},{"name":"offset","nativeSrc":"9398:6:39","nodeType":"YulIdentifier","src":"9398:6:39"}],"functionName":{"name":"add","nativeSrc":"9383:3:39","nodeType":"YulIdentifier","src":"9383:3:39"},"nativeSrc":"9383:22:39","nodeType":"YulFunctionCall","src":"9383:22:39"},{"name":"dataEnd","nativeSrc":"9407:7:39","nodeType":"YulIdentifier","src":"9407:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9362:20:39","nodeType":"YulIdentifier","src":"9362:20:39"},"nativeSrc":"9362:53:39","nodeType":"YulFunctionCall","src":"9362:53:39"},"variableNames":[{"name":"value0","nativeSrc":"9352:6:39","nodeType":"YulIdentifier","src":"9352:6:39"}]}]},{"nativeSrc":"9435:118:39","nodeType":"YulBlock","src":"9435:118:39","statements":[{"nativeSrc":"9450:16:39","nodeType":"YulVariableDeclaration","src":"9450:16:39","value":{"kind":"number","nativeSrc":"9464:2:39","nodeType":"YulLiteral","src":"9464:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9454:6:39","nodeType":"YulTypedName","src":"9454:6:39","type":""}]},{"nativeSrc":"9480:63:39","nodeType":"YulAssignment","src":"9480:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9515:9:39","nodeType":"YulIdentifier","src":"9515:9:39"},{"name":"offset","nativeSrc":"9526:6:39","nodeType":"YulIdentifier","src":"9526:6:39"}],"functionName":{"name":"add","nativeSrc":"9511:3:39","nodeType":"YulIdentifier","src":"9511:3:39"},"nativeSrc":"9511:22:39","nodeType":"YulFunctionCall","src":"9511:22:39"},{"name":"dataEnd","nativeSrc":"9535:7:39","nodeType":"YulIdentifier","src":"9535:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9490:20:39","nodeType":"YulIdentifier","src":"9490:20:39"},"nativeSrc":"9490:53:39","nodeType":"YulFunctionCall","src":"9490:53:39"},"variableNames":[{"name":"value1","nativeSrc":"9480:6:39","nodeType":"YulIdentifier","src":"9480:6:39"}]}]},{"nativeSrc":"9563:118:39","nodeType":"YulBlock","src":"9563:118:39","statements":[{"nativeSrc":"9578:16:39","nodeType":"YulVariableDeclaration","src":"9578:16:39","value":{"kind":"number","nativeSrc":"9592:2:39","nodeType":"YulLiteral","src":"9592:2:39","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9582:6:39","nodeType":"YulTypedName","src":"9582:6:39","type":""}]},{"nativeSrc":"9608:63:39","nodeType":"YulAssignment","src":"9608:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9643:9:39","nodeType":"YulIdentifier","src":"9643:9:39"},{"name":"offset","nativeSrc":"9654:6:39","nodeType":"YulIdentifier","src":"9654:6:39"}],"functionName":{"name":"add","nativeSrc":"9639:3:39","nodeType":"YulIdentifier","src":"9639:3:39"},"nativeSrc":"9639:22:39","nodeType":"YulFunctionCall","src":"9639:22:39"},{"name":"dataEnd","nativeSrc":"9663:7:39","nodeType":"YulIdentifier","src":"9663:7:39"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9618:20:39","nodeType":"YulIdentifier","src":"9618:20:39"},"nativeSrc":"9618:53:39","nodeType":"YulFunctionCall","src":"9618:53:39"},"variableNames":[{"name":"value2","nativeSrc":"9608:6:39","nodeType":"YulIdentifier","src":"9608:6:39"}]}]},{"nativeSrc":"9691:287:39","nodeType":"YulBlock","src":"9691:287:39","statements":[{"nativeSrc":"9706:46:39","nodeType":"YulVariableDeclaration","src":"9706:46:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9737:9:39","nodeType":"YulIdentifier","src":"9737:9:39"},{"kind":"number","nativeSrc":"9748:2:39","nodeType":"YulLiteral","src":"9748:2:39","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9733:3:39","nodeType":"YulIdentifier","src":"9733:3:39"},"nativeSrc":"9733:18:39","nodeType":"YulFunctionCall","src":"9733:18:39"}],"functionName":{"name":"calldataload","nativeSrc":"9720:12:39","nodeType":"YulIdentifier","src":"9720:12:39"},"nativeSrc":"9720:32:39","nodeType":"YulFunctionCall","src":"9720:32:39"},"variables":[{"name":"offset","nativeSrc":"9710:6:39","nodeType":"YulTypedName","src":"9710:6:39","type":""}]},{"body":{"nativeSrc":"9799:83:39","nodeType":"YulBlock","src":"9799:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9801:77:39","nodeType":"YulIdentifier","src":"9801:77:39"},"nativeSrc":"9801:79:39","nodeType":"YulFunctionCall","src":"9801:79:39"},"nativeSrc":"9801:79:39","nodeType":"YulExpressionStatement","src":"9801:79:39"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9771:6:39","nodeType":"YulIdentifier","src":"9771:6:39"},{"kind":"number","nativeSrc":"9779:18:39","nodeType":"YulLiteral","src":"9779:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9768:2:39","nodeType":"YulIdentifier","src":"9768:2:39"},"nativeSrc":"9768:30:39","nodeType":"YulFunctionCall","src":"9768:30:39"},"nativeSrc":"9765:117:39","nodeType":"YulIf","src":"9765:117:39"},{"nativeSrc":"9896:72:39","nodeType":"YulAssignment","src":"9896:72:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9940:9:39","nodeType":"YulIdentifier","src":"9940:9:39"},{"name":"offset","nativeSrc":"9951:6:39","nodeType":"YulIdentifier","src":"9951:6:39"}],"functionName":{"name":"add","nativeSrc":"9936:3:39","nodeType":"YulIdentifier","src":"9936:3:39"},"nativeSrc":"9936:22:39","nodeType":"YulFunctionCall","src":"9936:22:39"},{"name":"dataEnd","nativeSrc":"9960:7:39","nodeType":"YulIdentifier","src":"9960:7:39"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9906:29:39","nodeType":"YulIdentifier","src":"9906:29:39"},"nativeSrc":"9906:62:39","nodeType":"YulFunctionCall","src":"9906:62:39"},"variableNames":[{"name":"value3","nativeSrc":"9896:6:39","nodeType":"YulIdentifier","src":"9896:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"9042:943:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9114:9:39","nodeType":"YulTypedName","src":"9114:9:39","type":""},{"name":"dataEnd","nativeSrc":"9125:7:39","nodeType":"YulTypedName","src":"9125:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9137:6:39","nodeType":"YulTypedName","src":"9137:6:39","type":""},{"name":"value1","nativeSrc":"9145:6:39","nodeType":"YulTypedName","src":"9145:6:39","type":""},{"name":"value2","nativeSrc":"9153:6:39","nodeType":"YulTypedName","src":"9153:6:39","type":""},{"name":"value3","nativeSrc":"9161:6:39","nodeType":"YulTypedName","src":"9161:6:39","type":""}],"src":"9042:943:39"},{"body":{"nativeSrc":"10058:241:39","nodeType":"YulBlock","src":"10058:241:39","statements":[{"body":{"nativeSrc":"10163:22:39","nodeType":"YulBlock","src":"10163:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10165:16:39","nodeType":"YulIdentifier","src":"10165:16:39"},"nativeSrc":"10165:18:39","nodeType":"YulFunctionCall","src":"10165:18:39"},"nativeSrc":"10165:18:39","nodeType":"YulExpressionStatement","src":"10165:18:39"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10135:6:39","nodeType":"YulIdentifier","src":"10135:6:39"},{"kind":"number","nativeSrc":"10143:18:39","nodeType":"YulLiteral","src":"10143:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10132:2:39","nodeType":"YulIdentifier","src":"10132:2:39"},"nativeSrc":"10132:30:39","nodeType":"YulFunctionCall","src":"10132:30:39"},"nativeSrc":"10129:56:39","nodeType":"YulIf","src":"10129:56:39"},{"nativeSrc":"10195:37:39","nodeType":"YulAssignment","src":"10195:37:39","value":{"arguments":[{"name":"length","nativeSrc":"10225:6:39","nodeType":"YulIdentifier","src":"10225:6:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10203:21:39","nodeType":"YulIdentifier","src":"10203:21:39"},"nativeSrc":"10203:29:39","nodeType":"YulFunctionCall","src":"10203:29:39"},"variableNames":[{"name":"size","nativeSrc":"10195:4:39","nodeType":"YulIdentifier","src":"10195:4:39"}]},{"nativeSrc":"10269:23:39","nodeType":"YulAssignment","src":"10269:23:39","value":{"arguments":[{"name":"size","nativeSrc":"10281:4:39","nodeType":"YulIdentifier","src":"10281:4:39"},{"kind":"number","nativeSrc":"10287:4:39","nodeType":"YulLiteral","src":"10287:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10277:3:39","nodeType":"YulIdentifier","src":"10277:3:39"},"nativeSrc":"10277:15:39","nodeType":"YulFunctionCall","src":"10277:15:39"},"variableNames":[{"name":"size","nativeSrc":"10269:4:39","nodeType":"YulIdentifier","src":"10269:4:39"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"9991:308:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10042:6:39","nodeType":"YulTypedName","src":"10042:6:39","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10053:4:39","nodeType":"YulTypedName","src":"10053:4:39","type":""}],"src":"9991:308:39"},{"body":{"nativeSrc":"10389:341:39","nodeType":"YulBlock","src":"10389:341:39","statements":[{"nativeSrc":"10399:75:39","nodeType":"YulAssignment","src":"10399:75:39","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10466:6:39","nodeType":"YulIdentifier","src":"10466:6:39"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"10424:41:39","nodeType":"YulIdentifier","src":"10424:41:39"},"nativeSrc":"10424:49:39","nodeType":"YulFunctionCall","src":"10424:49:39"}],"functionName":{"name":"allocate_memory","nativeSrc":"10408:15:39","nodeType":"YulIdentifier","src":"10408:15:39"},"nativeSrc":"10408:66:39","nodeType":"YulFunctionCall","src":"10408:66:39"},"variableNames":[{"name":"array","nativeSrc":"10399:5:39","nodeType":"YulIdentifier","src":"10399:5:39"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"10490:5:39","nodeType":"YulIdentifier","src":"10490:5:39"},{"name":"length","nativeSrc":"10497:6:39","nodeType":"YulIdentifier","src":"10497:6:39"}],"functionName":{"name":"mstore","nativeSrc":"10483:6:39","nodeType":"YulIdentifier","src":"10483:6:39"},"nativeSrc":"10483:21:39","nodeType":"YulFunctionCall","src":"10483:21:39"},"nativeSrc":"10483:21:39","nodeType":"YulExpressionStatement","src":"10483:21:39"},{"nativeSrc":"10513:27:39","nodeType":"YulVariableDeclaration","src":"10513:27:39","value":{"arguments":[{"name":"array","nativeSrc":"10528:5:39","nodeType":"YulIdentifier","src":"10528:5:39"},{"kind":"number","nativeSrc":"10535:4:39","nodeType":"YulLiteral","src":"10535:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10524:3:39","nodeType":"YulIdentifier","src":"10524:3:39"},"nativeSrc":"10524:16:39","nodeType":"YulFunctionCall","src":"10524:16:39"},"variables":[{"name":"dst","nativeSrc":"10517:3:39","nodeType":"YulTypedName","src":"10517:3:39","type":""}]},{"body":{"nativeSrc":"10578:83:39","nodeType":"YulBlock","src":"10578:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10580:77:39","nodeType":"YulIdentifier","src":"10580:77:39"},"nativeSrc":"10580:79:39","nodeType":"YulFunctionCall","src":"10580:79:39"},"nativeSrc":"10580:79:39","nodeType":"YulExpressionStatement","src":"10580:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10559:3:39","nodeType":"YulIdentifier","src":"10559:3:39"},{"name":"length","nativeSrc":"10564:6:39","nodeType":"YulIdentifier","src":"10564:6:39"}],"functionName":{"name":"add","nativeSrc":"10555:3:39","nodeType":"YulIdentifier","src":"10555:3:39"},"nativeSrc":"10555:16:39","nodeType":"YulFunctionCall","src":"10555:16:39"},{"name":"end","nativeSrc":"10573:3:39","nodeType":"YulIdentifier","src":"10573:3:39"}],"functionName":{"name":"gt","nativeSrc":"10552:2:39","nodeType":"YulIdentifier","src":"10552:2:39"},"nativeSrc":"10552:25:39","nodeType":"YulFunctionCall","src":"10552:25:39"},"nativeSrc":"10549:112:39","nodeType":"YulIf","src":"10549:112:39"},{"expression":{"arguments":[{"name":"src","nativeSrc":"10707:3:39","nodeType":"YulIdentifier","src":"10707:3:39"},{"name":"dst","nativeSrc":"10712:3:39","nodeType":"YulIdentifier","src":"10712:3:39"},{"name":"length","nativeSrc":"10717:6:39","nodeType":"YulIdentifier","src":"10717:6:39"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"10670:36:39","nodeType":"YulIdentifier","src":"10670:36:39"},"nativeSrc":"10670:54:39","nodeType":"YulFunctionCall","src":"10670:54:39"},"nativeSrc":"10670:54:39","nodeType":"YulExpressionStatement","src":"10670:54:39"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"10305:425:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10362:3:39","nodeType":"YulTypedName","src":"10362:3:39","type":""},{"name":"length","nativeSrc":"10367:6:39","nodeType":"YulTypedName","src":"10367:6:39","type":""},{"name":"end","nativeSrc":"10375:3:39","nodeType":"YulTypedName","src":"10375:3:39","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10383:5:39","nodeType":"YulTypedName","src":"10383:5:39","type":""}],"src":"10305:425:39"},{"body":{"nativeSrc":"10812:278:39","nodeType":"YulBlock","src":"10812:278:39","statements":[{"body":{"nativeSrc":"10861:83:39","nodeType":"YulBlock","src":"10861:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10863:77:39","nodeType":"YulIdentifier","src":"10863:77:39"},"nativeSrc":"10863:79:39","nodeType":"YulFunctionCall","src":"10863:79:39"},"nativeSrc":"10863:79:39","nodeType":"YulExpressionStatement","src":"10863:79:39"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10840:6:39","nodeType":"YulIdentifier","src":"10840:6:39"},{"kind":"number","nativeSrc":"10848:4:39","nodeType":"YulLiteral","src":"10848:4:39","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10836:3:39","nodeType":"YulIdentifier","src":"10836:3:39"},"nativeSrc":"10836:17:39","nodeType":"YulFunctionCall","src":"10836:17:39"},{"name":"end","nativeSrc":"10855:3:39","nodeType":"YulIdentifier","src":"10855:3:39"}],"functionName":{"name":"slt","nativeSrc":"10832:3:39","nodeType":"YulIdentifier","src":"10832:3:39"},"nativeSrc":"10832:27:39","nodeType":"YulFunctionCall","src":"10832:27:39"}],"functionName":{"name":"iszero","nativeSrc":"10825:6:39","nodeType":"YulIdentifier","src":"10825:6:39"},"nativeSrc":"10825:35:39","nodeType":"YulFunctionCall","src":"10825:35:39"},"nativeSrc":"10822:122:39","nodeType":"YulIf","src":"10822:122:39"},{"nativeSrc":"10953:34:39","nodeType":"YulVariableDeclaration","src":"10953:34:39","value":{"arguments":[{"name":"offset","nativeSrc":"10980:6:39","nodeType":"YulIdentifier","src":"10980:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"10967:12:39","nodeType":"YulIdentifier","src":"10967:12:39"},"nativeSrc":"10967:20:39","nodeType":"YulFunctionCall","src":"10967:20:39"},"variables":[{"name":"length","nativeSrc":"10957:6:39","nodeType":"YulTypedName","src":"10957:6:39","type":""}]},{"nativeSrc":"10996:88:39","nodeType":"YulAssignment","src":"10996:88:39","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11057:6:39","nodeType":"YulIdentifier","src":"11057:6:39"},{"kind":"number","nativeSrc":"11065:4:39","nodeType":"YulLiteral","src":"11065:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11053:3:39","nodeType":"YulIdentifier","src":"11053:3:39"},"nativeSrc":"11053:17:39","nodeType":"YulFunctionCall","src":"11053:17:39"},{"name":"length","nativeSrc":"11072:6:39","nodeType":"YulIdentifier","src":"11072:6:39"},{"name":"end","nativeSrc":"11080:3:39","nodeType":"YulIdentifier","src":"11080:3:39"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"11005:47:39","nodeType":"YulIdentifier","src":"11005:47:39"},"nativeSrc":"11005:79:39","nodeType":"YulFunctionCall","src":"11005:79:39"},"variableNames":[{"name":"array","nativeSrc":"10996:5:39","nodeType":"YulIdentifier","src":"10996:5:39"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"10750:340:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10790:6:39","nodeType":"YulTypedName","src":"10790:6:39","type":""},{"name":"end","nativeSrc":"10798:3:39","nodeType":"YulTypedName","src":"10798:3:39","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10806:5:39","nodeType":"YulTypedName","src":"10806:5:39","type":""}],"src":"10750:340:39"},{"body":{"nativeSrc":"11189:561:39","nodeType":"YulBlock","src":"11189:561:39","statements":[{"body":{"nativeSrc":"11235:83:39","nodeType":"YulBlock","src":"11235:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11237:77:39","nodeType":"YulIdentifier","src":"11237:77:39"},"nativeSrc":"11237:79:39","nodeType":"YulFunctionCall","src":"11237:79:39"},"nativeSrc":"11237:79:39","nodeType":"YulExpressionStatement","src":"11237:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11210:7:39","nodeType":"YulIdentifier","src":"11210:7:39"},{"name":"headStart","nativeSrc":"11219:9:39","nodeType":"YulIdentifier","src":"11219:9:39"}],"functionName":{"name":"sub","nativeSrc":"11206:3:39","nodeType":"YulIdentifier","src":"11206:3:39"},"nativeSrc":"11206:23:39","nodeType":"YulFunctionCall","src":"11206:23:39"},{"kind":"number","nativeSrc":"11231:2:39","nodeType":"YulLiteral","src":"11231:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11202:3:39","nodeType":"YulIdentifier","src":"11202:3:39"},"nativeSrc":"11202:32:39","nodeType":"YulFunctionCall","src":"11202:32:39"},"nativeSrc":"11199:119:39","nodeType":"YulIf","src":"11199:119:39"},{"nativeSrc":"11328:117:39","nodeType":"YulBlock","src":"11328:117:39","statements":[{"nativeSrc":"11343:15:39","nodeType":"YulVariableDeclaration","src":"11343:15:39","value":{"kind":"number","nativeSrc":"11357:1:39","nodeType":"YulLiteral","src":"11357:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11347:6:39","nodeType":"YulTypedName","src":"11347:6:39","type":""}]},{"nativeSrc":"11372:63:39","nodeType":"YulAssignment","src":"11372:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11407:9:39","nodeType":"YulIdentifier","src":"11407:9:39"},{"name":"offset","nativeSrc":"11418:6:39","nodeType":"YulIdentifier","src":"11418:6:39"}],"functionName":{"name":"add","nativeSrc":"11403:3:39","nodeType":"YulIdentifier","src":"11403:3:39"},"nativeSrc":"11403:22:39","nodeType":"YulFunctionCall","src":"11403:22:39"},{"name":"dataEnd","nativeSrc":"11427:7:39","nodeType":"YulIdentifier","src":"11427:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11382:20:39","nodeType":"YulIdentifier","src":"11382:20:39"},"nativeSrc":"11382:53:39","nodeType":"YulFunctionCall","src":"11382:53:39"},"variableNames":[{"name":"value0","nativeSrc":"11372:6:39","nodeType":"YulIdentifier","src":"11372:6:39"}]}]},{"nativeSrc":"11455:288:39","nodeType":"YulBlock","src":"11455:288:39","statements":[{"nativeSrc":"11470:46:39","nodeType":"YulVariableDeclaration","src":"11470:46:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11501:9:39","nodeType":"YulIdentifier","src":"11501:9:39"},{"kind":"number","nativeSrc":"11512:2:39","nodeType":"YulLiteral","src":"11512:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11497:3:39","nodeType":"YulIdentifier","src":"11497:3:39"},"nativeSrc":"11497:18:39","nodeType":"YulFunctionCall","src":"11497:18:39"}],"functionName":{"name":"calldataload","nativeSrc":"11484:12:39","nodeType":"YulIdentifier","src":"11484:12:39"},"nativeSrc":"11484:32:39","nodeType":"YulFunctionCall","src":"11484:32:39"},"variables":[{"name":"offset","nativeSrc":"11474:6:39","nodeType":"YulTypedName","src":"11474:6:39","type":""}]},{"body":{"nativeSrc":"11563:83:39","nodeType":"YulBlock","src":"11563:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11565:77:39","nodeType":"YulIdentifier","src":"11565:77:39"},"nativeSrc":"11565:79:39","nodeType":"YulFunctionCall","src":"11565:79:39"},"nativeSrc":"11565:79:39","nodeType":"YulExpressionStatement","src":"11565:79:39"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11535:6:39","nodeType":"YulIdentifier","src":"11535:6:39"},{"kind":"number","nativeSrc":"11543:18:39","nodeType":"YulLiteral","src":"11543:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11532:2:39","nodeType":"YulIdentifier","src":"11532:2:39"},"nativeSrc":"11532:30:39","nodeType":"YulFunctionCall","src":"11532:30:39"},"nativeSrc":"11529:117:39","nodeType":"YulIf","src":"11529:117:39"},{"nativeSrc":"11660:73:39","nodeType":"YulAssignment","src":"11660:73:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11705:9:39","nodeType":"YulIdentifier","src":"11705:9:39"},{"name":"offset","nativeSrc":"11716:6:39","nodeType":"YulIdentifier","src":"11716:6:39"}],"functionName":{"name":"add","nativeSrc":"11701:3:39","nodeType":"YulIdentifier","src":"11701:3:39"},"nativeSrc":"11701:22:39","nodeType":"YulFunctionCall","src":"11701:22:39"},{"name":"dataEnd","nativeSrc":"11725:7:39","nodeType":"YulIdentifier","src":"11725:7:39"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"11670:30:39","nodeType":"YulIdentifier","src":"11670:30:39"},"nativeSrc":"11670:63:39","nodeType":"YulFunctionCall","src":"11670:63:39"},"variableNames":[{"name":"value1","nativeSrc":"11660:6:39","nodeType":"YulIdentifier","src":"11660:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"11096:654:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11151:9:39","nodeType":"YulTypedName","src":"11151:9:39","type":""},{"name":"dataEnd","nativeSrc":"11162:7:39","nodeType":"YulTypedName","src":"11162:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11174:6:39","nodeType":"YulTypedName","src":"11174:6:39","type":""},{"name":"value1","nativeSrc":"11182:6:39","nodeType":"YulTypedName","src":"11182:6:39","type":""}],"src":"11096:654:39"},{"body":{"nativeSrc":"11839:391:39","nodeType":"YulBlock","src":"11839:391:39","statements":[{"body":{"nativeSrc":"11885:83:39","nodeType":"YulBlock","src":"11885:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11887:77:39","nodeType":"YulIdentifier","src":"11887:77:39"},"nativeSrc":"11887:79:39","nodeType":"YulFunctionCall","src":"11887:79:39"},"nativeSrc":"11887:79:39","nodeType":"YulExpressionStatement","src":"11887:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11860:7:39","nodeType":"YulIdentifier","src":"11860:7:39"},{"name":"headStart","nativeSrc":"11869:9:39","nodeType":"YulIdentifier","src":"11869:9:39"}],"functionName":{"name":"sub","nativeSrc":"11856:3:39","nodeType":"YulIdentifier","src":"11856:3:39"},"nativeSrc":"11856:23:39","nodeType":"YulFunctionCall","src":"11856:23:39"},{"kind":"number","nativeSrc":"11881:2:39","nodeType":"YulLiteral","src":"11881:2:39","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11852:3:39","nodeType":"YulIdentifier","src":"11852:3:39"},"nativeSrc":"11852:32:39","nodeType":"YulFunctionCall","src":"11852:32:39"},"nativeSrc":"11849:119:39","nodeType":"YulIf","src":"11849:119:39"},{"nativeSrc":"11978:117:39","nodeType":"YulBlock","src":"11978:117:39","statements":[{"nativeSrc":"11993:15:39","nodeType":"YulVariableDeclaration","src":"11993:15:39","value":{"kind":"number","nativeSrc":"12007:1:39","nodeType":"YulLiteral","src":"12007:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11997:6:39","nodeType":"YulTypedName","src":"11997:6:39","type":""}]},{"nativeSrc":"12022:63:39","nodeType":"YulAssignment","src":"12022:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12057:9:39","nodeType":"YulIdentifier","src":"12057:9:39"},{"name":"offset","nativeSrc":"12068:6:39","nodeType":"YulIdentifier","src":"12068:6:39"}],"functionName":{"name":"add","nativeSrc":"12053:3:39","nodeType":"YulIdentifier","src":"12053:3:39"},"nativeSrc":"12053:22:39","nodeType":"YulFunctionCall","src":"12053:22:39"},{"name":"dataEnd","nativeSrc":"12077:7:39","nodeType":"YulIdentifier","src":"12077:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12032:20:39","nodeType":"YulIdentifier","src":"12032:20:39"},"nativeSrc":"12032:53:39","nodeType":"YulFunctionCall","src":"12032:53:39"},"variableNames":[{"name":"value0","nativeSrc":"12022:6:39","nodeType":"YulIdentifier","src":"12022:6:39"}]}]},{"nativeSrc":"12105:118:39","nodeType":"YulBlock","src":"12105:118:39","statements":[{"nativeSrc":"12120:16:39","nodeType":"YulVariableDeclaration","src":"12120:16:39","value":{"kind":"number","nativeSrc":"12134:2:39","nodeType":"YulLiteral","src":"12134:2:39","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12124:6:39","nodeType":"YulTypedName","src":"12124:6:39","type":""}]},{"nativeSrc":"12150:63:39","nodeType":"YulAssignment","src":"12150:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12185:9:39","nodeType":"YulIdentifier","src":"12185:9:39"},{"name":"offset","nativeSrc":"12196:6:39","nodeType":"YulIdentifier","src":"12196:6:39"}],"functionName":{"name":"add","nativeSrc":"12181:3:39","nodeType":"YulIdentifier","src":"12181:3:39"},"nativeSrc":"12181:22:39","nodeType":"YulFunctionCall","src":"12181:22:39"},{"name":"dataEnd","nativeSrc":"12205:7:39","nodeType":"YulIdentifier","src":"12205:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12160:20:39","nodeType":"YulIdentifier","src":"12160:20:39"},"nativeSrc":"12160:53:39","nodeType":"YulFunctionCall","src":"12160:53:39"},"variableNames":[{"name":"value1","nativeSrc":"12150:6:39","nodeType":"YulIdentifier","src":"12150:6:39"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11756:474:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11801:9:39","nodeType":"YulTypedName","src":"11801:9:39","type":""},{"name":"dataEnd","nativeSrc":"11812:7:39","nodeType":"YulTypedName","src":"11812:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11824:6:39","nodeType":"YulTypedName","src":"11824:6:39","type":""},{"name":"value1","nativeSrc":"11832:6:39","nodeType":"YulTypedName","src":"11832:6:39","type":""}],"src":"11756:474:39"},{"body":{"nativeSrc":"12264:152:39","nodeType":"YulBlock","src":"12264:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12281:1:39","nodeType":"YulLiteral","src":"12281:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"12284:77:39","nodeType":"YulLiteral","src":"12284:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12274:6:39","nodeType":"YulIdentifier","src":"12274:6:39"},"nativeSrc":"12274:88:39","nodeType":"YulFunctionCall","src":"12274:88:39"},"nativeSrc":"12274:88:39","nodeType":"YulExpressionStatement","src":"12274:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12378:1:39","nodeType":"YulLiteral","src":"12378:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"12381:4:39","nodeType":"YulLiteral","src":"12381:4:39","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12371:6:39","nodeType":"YulIdentifier","src":"12371:6:39"},"nativeSrc":"12371:15:39","nodeType":"YulFunctionCall","src":"12371:15:39"},"nativeSrc":"12371:15:39","nodeType":"YulExpressionStatement","src":"12371:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12402:1:39","nodeType":"YulLiteral","src":"12402:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"12405:4:39","nodeType":"YulLiteral","src":"12405:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12395:6:39","nodeType":"YulIdentifier","src":"12395:6:39"},"nativeSrc":"12395:15:39","nodeType":"YulFunctionCall","src":"12395:15:39"},"nativeSrc":"12395:15:39","nodeType":"YulExpressionStatement","src":"12395:15:39"}]},"name":"panic_error_0x22","nativeSrc":"12236:180:39","nodeType":"YulFunctionDefinition","src":"12236:180:39"},{"body":{"nativeSrc":"12473:269:39","nodeType":"YulBlock","src":"12473:269:39","statements":[{"nativeSrc":"12483:22:39","nodeType":"YulAssignment","src":"12483:22:39","value":{"arguments":[{"name":"data","nativeSrc":"12497:4:39","nodeType":"YulIdentifier","src":"12497:4:39"},{"kind":"number","nativeSrc":"12503:1:39","nodeType":"YulLiteral","src":"12503:1:39","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"12493:3:39","nodeType":"YulIdentifier","src":"12493:3:39"},"nativeSrc":"12493:12:39","nodeType":"YulFunctionCall","src":"12493:12:39"},"variableNames":[{"name":"length","nativeSrc":"12483:6:39","nodeType":"YulIdentifier","src":"12483:6:39"}]},{"nativeSrc":"12514:38:39","nodeType":"YulVariableDeclaration","src":"12514:38:39","value":{"arguments":[{"name":"data","nativeSrc":"12544:4:39","nodeType":"YulIdentifier","src":"12544:4:39"},{"kind":"number","nativeSrc":"12550:1:39","nodeType":"YulLiteral","src":"12550:1:39","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12540:3:39","nodeType":"YulIdentifier","src":"12540:3:39"},"nativeSrc":"12540:12:39","nodeType":"YulFunctionCall","src":"12540:12:39"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12518:18:39","nodeType":"YulTypedName","src":"12518:18:39","type":""}]},{"body":{"nativeSrc":"12591:51:39","nodeType":"YulBlock","src":"12591:51:39","statements":[{"nativeSrc":"12605:27:39","nodeType":"YulAssignment","src":"12605:27:39","value":{"arguments":[{"name":"length","nativeSrc":"12619:6:39","nodeType":"YulIdentifier","src":"12619:6:39"},{"kind":"number","nativeSrc":"12627:4:39","nodeType":"YulLiteral","src":"12627:4:39","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12615:3:39","nodeType":"YulIdentifier","src":"12615:3:39"},"nativeSrc":"12615:17:39","nodeType":"YulFunctionCall","src":"12615:17:39"},"variableNames":[{"name":"length","nativeSrc":"12605:6:39","nodeType":"YulIdentifier","src":"12605:6:39"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12571:18:39","nodeType":"YulIdentifier","src":"12571:18:39"}],"functionName":{"name":"iszero","nativeSrc":"12564:6:39","nodeType":"YulIdentifier","src":"12564:6:39"},"nativeSrc":"12564:26:39","nodeType":"YulFunctionCall","src":"12564:26:39"},"nativeSrc":"12561:81:39","nodeType":"YulIf","src":"12561:81:39"},{"body":{"nativeSrc":"12694:42:39","nodeType":"YulBlock","src":"12694:42:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"12708:16:39","nodeType":"YulIdentifier","src":"12708:16:39"},"nativeSrc":"12708:18:39","nodeType":"YulFunctionCall","src":"12708:18:39"},"nativeSrc":"12708:18:39","nodeType":"YulExpressionStatement","src":"12708:18:39"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12658:18:39","nodeType":"YulIdentifier","src":"12658:18:39"},{"arguments":[{"name":"length","nativeSrc":"12681:6:39","nodeType":"YulIdentifier","src":"12681:6:39"},{"kind":"number","nativeSrc":"12689:2:39","nodeType":"YulLiteral","src":"12689:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12678:2:39","nodeType":"YulIdentifier","src":"12678:2:39"},"nativeSrc":"12678:14:39","nodeType":"YulFunctionCall","src":"12678:14:39"}],"functionName":{"name":"eq","nativeSrc":"12655:2:39","nodeType":"YulIdentifier","src":"12655:2:39"},"nativeSrc":"12655:38:39","nodeType":"YulFunctionCall","src":"12655:38:39"},"nativeSrc":"12652:84:39","nodeType":"YulIf","src":"12652:84:39"}]},"name":"extract_byte_array_length","nativeSrc":"12422:320:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12457:4:39","nodeType":"YulTypedName","src":"12457:4:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12466:6:39","nodeType":"YulTypedName","src":"12466:6:39","type":""}],"src":"12422:320:39"},{"body":{"nativeSrc":"12902:288:39","nodeType":"YulBlock","src":"12902:288:39","statements":[{"nativeSrc":"12912:26:39","nodeType":"YulAssignment","src":"12912:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"12924:9:39","nodeType":"YulIdentifier","src":"12924:9:39"},{"kind":"number","nativeSrc":"12935:2:39","nodeType":"YulLiteral","src":"12935:2:39","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12920:3:39","nodeType":"YulIdentifier","src":"12920:3:39"},"nativeSrc":"12920:18:39","nodeType":"YulFunctionCall","src":"12920:18:39"},"variableNames":[{"name":"tail","nativeSrc":"12912:4:39","nodeType":"YulIdentifier","src":"12912:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12992:6:39","nodeType":"YulIdentifier","src":"12992:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"13005:9:39","nodeType":"YulIdentifier","src":"13005:9:39"},{"kind":"number","nativeSrc":"13016:1:39","nodeType":"YulLiteral","src":"13016:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13001:3:39","nodeType":"YulIdentifier","src":"13001:3:39"},"nativeSrc":"13001:17:39","nodeType":"YulFunctionCall","src":"13001:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12948:43:39","nodeType":"YulIdentifier","src":"12948:43:39"},"nativeSrc":"12948:71:39","nodeType":"YulFunctionCall","src":"12948:71:39"},"nativeSrc":"12948:71:39","nodeType":"YulExpressionStatement","src":"12948:71:39"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13073:6:39","nodeType":"YulIdentifier","src":"13073:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"13086:9:39","nodeType":"YulIdentifier","src":"13086:9:39"},{"kind":"number","nativeSrc":"13097:2:39","nodeType":"YulLiteral","src":"13097:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13082:3:39","nodeType":"YulIdentifier","src":"13082:3:39"},"nativeSrc":"13082:18:39","nodeType":"YulFunctionCall","src":"13082:18:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13029:43:39","nodeType":"YulIdentifier","src":"13029:43:39"},"nativeSrc":"13029:72:39","nodeType":"YulFunctionCall","src":"13029:72:39"},"nativeSrc":"13029:72:39","nodeType":"YulExpressionStatement","src":"13029:72:39"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13155:6:39","nodeType":"YulIdentifier","src":"13155:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"13168:9:39","nodeType":"YulIdentifier","src":"13168:9:39"},{"kind":"number","nativeSrc":"13179:2:39","nodeType":"YulLiteral","src":"13179:2:39","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13164:3:39","nodeType":"YulIdentifier","src":"13164:3:39"},"nativeSrc":"13164:18:39","nodeType":"YulFunctionCall","src":"13164:18:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13111:43:39","nodeType":"YulIdentifier","src":"13111:43:39"},"nativeSrc":"13111:72:39","nodeType":"YulFunctionCall","src":"13111:72:39"},"nativeSrc":"13111:72:39","nodeType":"YulExpressionStatement","src":"13111:72:39"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"12748:442:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12858:9:39","nodeType":"YulTypedName","src":"12858:9:39","type":""},{"name":"value2","nativeSrc":"12870:6:39","nodeType":"YulTypedName","src":"12870:6:39","type":""},{"name":"value1","nativeSrc":"12878:6:39","nodeType":"YulTypedName","src":"12878:6:39","type":""},{"name":"value0","nativeSrc":"12886:6:39","nodeType":"YulTypedName","src":"12886:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12897:4:39","nodeType":"YulTypedName","src":"12897:4:39","type":""}],"src":"12748:442:39"},{"body":{"nativeSrc":"13310:34:39","nodeType":"YulBlock","src":"13310:34:39","statements":[{"nativeSrc":"13320:18:39","nodeType":"YulAssignment","src":"13320:18:39","value":{"name":"pos","nativeSrc":"13335:3:39","nodeType":"YulIdentifier","src":"13335:3:39"},"variableNames":[{"name":"updated_pos","nativeSrc":"13320:11:39","nodeType":"YulIdentifier","src":"13320:11:39"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13196:148:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13282:3:39","nodeType":"YulTypedName","src":"13282:3:39","type":""},{"name":"length","nativeSrc":"13287:6:39","nodeType":"YulTypedName","src":"13287:6:39","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13298:11:39","nodeType":"YulTypedName","src":"13298:11:39","type":""}],"src":"13196:148:39"},{"body":{"nativeSrc":"13460:280:39","nodeType":"YulBlock","src":"13460:280:39","statements":[{"nativeSrc":"13470:53:39","nodeType":"YulVariableDeclaration","src":"13470:53:39","value":{"arguments":[{"name":"value","nativeSrc":"13517:5:39","nodeType":"YulIdentifier","src":"13517:5:39"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"13484:32:39","nodeType":"YulIdentifier","src":"13484:32:39"},"nativeSrc":"13484:39:39","nodeType":"YulFunctionCall","src":"13484:39:39"},"variables":[{"name":"length","nativeSrc":"13474:6:39","nodeType":"YulTypedName","src":"13474:6:39","type":""}]},{"nativeSrc":"13532:96:39","nodeType":"YulAssignment","src":"13532:96:39","value":{"arguments":[{"name":"pos","nativeSrc":"13616:3:39","nodeType":"YulIdentifier","src":"13616:3:39"},{"name":"length","nativeSrc":"13621:6:39","nodeType":"YulIdentifier","src":"13621:6:39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13539:76:39","nodeType":"YulIdentifier","src":"13539:76:39"},"nativeSrc":"13539:89:39","nodeType":"YulFunctionCall","src":"13539:89:39"},"variableNames":[{"name":"pos","nativeSrc":"13532:3:39","nodeType":"YulIdentifier","src":"13532:3:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13676:5:39","nodeType":"YulIdentifier","src":"13676:5:39"},{"kind":"number","nativeSrc":"13683:4:39","nodeType":"YulLiteral","src":"13683:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13672:3:39","nodeType":"YulIdentifier","src":"13672:3:39"},"nativeSrc":"13672:16:39","nodeType":"YulFunctionCall","src":"13672:16:39"},{"name":"pos","nativeSrc":"13690:3:39","nodeType":"YulIdentifier","src":"13690:3:39"},{"name":"length","nativeSrc":"13695:6:39","nodeType":"YulIdentifier","src":"13695:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13637:34:39","nodeType":"YulIdentifier","src":"13637:34:39"},"nativeSrc":"13637:65:39","nodeType":"YulFunctionCall","src":"13637:65:39"},"nativeSrc":"13637:65:39","nodeType":"YulExpressionStatement","src":"13637:65:39"},{"nativeSrc":"13711:23:39","nodeType":"YulAssignment","src":"13711:23:39","value":{"arguments":[{"name":"pos","nativeSrc":"13722:3:39","nodeType":"YulIdentifier","src":"13722:3:39"},{"name":"length","nativeSrc":"13727:6:39","nodeType":"YulIdentifier","src":"13727:6:39"}],"functionName":{"name":"add","nativeSrc":"13718:3:39","nodeType":"YulIdentifier","src":"13718:3:39"},"nativeSrc":"13718:16:39","nodeType":"YulFunctionCall","src":"13718:16:39"},"variableNames":[{"name":"end","nativeSrc":"13711:3:39","nodeType":"YulIdentifier","src":"13711:3:39"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13350:390:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13441:5:39","nodeType":"YulTypedName","src":"13441:5:39","type":""},{"name":"pos","nativeSrc":"13448:3:39","nodeType":"YulTypedName","src":"13448:3:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13456:3:39","nodeType":"YulTypedName","src":"13456:3:39","type":""}],"src":"13350:390:39"},{"body":{"nativeSrc":"13930:251:39","nodeType":"YulBlock","src":"13930:251:39","statements":[{"nativeSrc":"13941:102:39","nodeType":"YulAssignment","src":"13941:102:39","value":{"arguments":[{"name":"value0","nativeSrc":"14030:6:39","nodeType":"YulIdentifier","src":"14030:6:39"},{"name":"pos","nativeSrc":"14039:3:39","nodeType":"YulIdentifier","src":"14039:3:39"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13948:81:39","nodeType":"YulIdentifier","src":"13948:81:39"},"nativeSrc":"13948:95:39","nodeType":"YulFunctionCall","src":"13948:95:39"},"variableNames":[{"name":"pos","nativeSrc":"13941:3:39","nodeType":"YulIdentifier","src":"13941:3:39"}]},{"nativeSrc":"14053:102:39","nodeType":"YulAssignment","src":"14053:102:39","value":{"arguments":[{"name":"value1","nativeSrc":"14142:6:39","nodeType":"YulIdentifier","src":"14142:6:39"},{"name":"pos","nativeSrc":"14151:3:39","nodeType":"YulIdentifier","src":"14151:3:39"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14060:81:39","nodeType":"YulIdentifier","src":"14060:81:39"},"nativeSrc":"14060:95:39","nodeType":"YulFunctionCall","src":"14060:95:39"},"variableNames":[{"name":"pos","nativeSrc":"14053:3:39","nodeType":"YulIdentifier","src":"14053:3:39"}]},{"nativeSrc":"14165:10:39","nodeType":"YulAssignment","src":"14165:10:39","value":{"name":"pos","nativeSrc":"14172:3:39","nodeType":"YulIdentifier","src":"14172:3:39"},"variableNames":[{"name":"end","nativeSrc":"14165:3:39","nodeType":"YulIdentifier","src":"14165:3:39"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"13746:435:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13901:3:39","nodeType":"YulTypedName","src":"13901:3:39","type":""},{"name":"value1","nativeSrc":"13907:6:39","nodeType":"YulTypedName","src":"13907:6:39","type":""},{"name":"value0","nativeSrc":"13915:6:39","nodeType":"YulTypedName","src":"13915:6:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13926:3:39","nodeType":"YulTypedName","src":"13926:3:39","type":""}],"src":"13746:435:39"},{"body":{"nativeSrc":"14293:58:39","nodeType":"YulBlock","src":"14293:58:39","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14315:6:39","nodeType":"YulIdentifier","src":"14315:6:39"},{"kind":"number","nativeSrc":"14323:1:39","nodeType":"YulLiteral","src":"14323:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14311:3:39","nodeType":"YulIdentifier","src":"14311:3:39"},"nativeSrc":"14311:14:39","nodeType":"YulFunctionCall","src":"14311:14:39"},{"hexValue":"416c7265616479206d696e746564","kind":"string","nativeSrc":"14327:16:39","nodeType":"YulLiteral","src":"14327:16:39","type":"","value":"Already minted"}],"functionName":{"name":"mstore","nativeSrc":"14304:6:39","nodeType":"YulIdentifier","src":"14304:6:39"},"nativeSrc":"14304:40:39","nodeType":"YulFunctionCall","src":"14304:40:39"},"nativeSrc":"14304:40:39","nodeType":"YulExpressionStatement","src":"14304:40:39"}]},"name":"store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59","nativeSrc":"14187:164:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14285:6:39","nodeType":"YulTypedName","src":"14285:6:39","type":""}],"src":"14187:164:39"},{"body":{"nativeSrc":"14503:220:39","nodeType":"YulBlock","src":"14503:220:39","statements":[{"nativeSrc":"14513:74:39","nodeType":"YulAssignment","src":"14513:74:39","value":{"arguments":[{"name":"pos","nativeSrc":"14579:3:39","nodeType":"YulIdentifier","src":"14579:3:39"},{"kind":"number","nativeSrc":"14584:2:39","nodeType":"YulLiteral","src":"14584:2:39","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14520:58:39","nodeType":"YulIdentifier","src":"14520:58:39"},"nativeSrc":"14520:67:39","nodeType":"YulFunctionCall","src":"14520:67:39"},"variableNames":[{"name":"pos","nativeSrc":"14513:3:39","nodeType":"YulIdentifier","src":"14513:3:39"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14685:3:39","nodeType":"YulIdentifier","src":"14685:3:39"}],"functionName":{"name":"store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59","nativeSrc":"14596:88:39","nodeType":"YulIdentifier","src":"14596:88:39"},"nativeSrc":"14596:93:39","nodeType":"YulFunctionCall","src":"14596:93:39"},"nativeSrc":"14596:93:39","nodeType":"YulExpressionStatement","src":"14596:93:39"},{"nativeSrc":"14698:19:39","nodeType":"YulAssignment","src":"14698:19:39","value":{"arguments":[{"name":"pos","nativeSrc":"14709:3:39","nodeType":"YulIdentifier","src":"14709:3:39"},{"kind":"number","nativeSrc":"14714:2:39","nodeType":"YulLiteral","src":"14714:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14705:3:39","nodeType":"YulIdentifier","src":"14705:3:39"},"nativeSrc":"14705:12:39","nodeType":"YulFunctionCall","src":"14705:12:39"},"variableNames":[{"name":"end","nativeSrc":"14698:3:39","nodeType":"YulIdentifier","src":"14698:3:39"}]}]},"name":"abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack","nativeSrc":"14357:366:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14491:3:39","nodeType":"YulTypedName","src":"14491:3:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14499:3:39","nodeType":"YulTypedName","src":"14499:3:39","type":""}],"src":"14357:366:39"},{"body":{"nativeSrc":"14900:248:39","nodeType":"YulBlock","src":"14900:248:39","statements":[{"nativeSrc":"14910:26:39","nodeType":"YulAssignment","src":"14910:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"14922:9:39","nodeType":"YulIdentifier","src":"14922:9:39"},{"kind":"number","nativeSrc":"14933:2:39","nodeType":"YulLiteral","src":"14933:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14918:3:39","nodeType":"YulIdentifier","src":"14918:3:39"},"nativeSrc":"14918:18:39","nodeType":"YulFunctionCall","src":"14918:18:39"},"variableNames":[{"name":"tail","nativeSrc":"14910:4:39","nodeType":"YulIdentifier","src":"14910:4:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14957:9:39","nodeType":"YulIdentifier","src":"14957:9:39"},{"kind":"number","nativeSrc":"14968:1:39","nodeType":"YulLiteral","src":"14968:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14953:3:39","nodeType":"YulIdentifier","src":"14953:3:39"},"nativeSrc":"14953:17:39","nodeType":"YulFunctionCall","src":"14953:17:39"},{"arguments":[{"name":"tail","nativeSrc":"14976:4:39","nodeType":"YulIdentifier","src":"14976:4:39"},{"name":"headStart","nativeSrc":"14982:9:39","nodeType":"YulIdentifier","src":"14982:9:39"}],"functionName":{"name":"sub","nativeSrc":"14972:3:39","nodeType":"YulIdentifier","src":"14972:3:39"},"nativeSrc":"14972:20:39","nodeType":"YulFunctionCall","src":"14972:20:39"}],"functionName":{"name":"mstore","nativeSrc":"14946:6:39","nodeType":"YulIdentifier","src":"14946:6:39"},"nativeSrc":"14946:47:39","nodeType":"YulFunctionCall","src":"14946:47:39"},"nativeSrc":"14946:47:39","nodeType":"YulExpressionStatement","src":"14946:47:39"},{"nativeSrc":"15002:139:39","nodeType":"YulAssignment","src":"15002:139:39","value":{"arguments":[{"name":"tail","nativeSrc":"15136:4:39","nodeType":"YulIdentifier","src":"15136:4:39"}],"functionName":{"name":"abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack","nativeSrc":"15010:124:39","nodeType":"YulIdentifier","src":"15010:124:39"},"nativeSrc":"15010:131:39","nodeType":"YulFunctionCall","src":"15010:131:39"},"variableNames":[{"name":"tail","nativeSrc":"15002:4:39","nodeType":"YulIdentifier","src":"15002:4:39"}]}]},"name":"abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14729:419:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14880:9:39","nodeType":"YulTypedName","src":"14880:9:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14895:4:39","nodeType":"YulTypedName","src":"14895:4:39","type":""}],"src":"14729:419:39"},{"body":{"nativeSrc":"15182:152:39","nodeType":"YulBlock","src":"15182:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15199:1:39","nodeType":"YulLiteral","src":"15199:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"15202:77:39","nodeType":"YulLiteral","src":"15202:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15192:6:39","nodeType":"YulIdentifier","src":"15192:6:39"},"nativeSrc":"15192:88:39","nodeType":"YulFunctionCall","src":"15192:88:39"},"nativeSrc":"15192:88:39","nodeType":"YulExpressionStatement","src":"15192:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15296:1:39","nodeType":"YulLiteral","src":"15296:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"15299:4:39","nodeType":"YulLiteral","src":"15299:4:39","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"15289:6:39","nodeType":"YulIdentifier","src":"15289:6:39"},"nativeSrc":"15289:15:39","nodeType":"YulFunctionCall","src":"15289:15:39"},"nativeSrc":"15289:15:39","nodeType":"YulExpressionStatement","src":"15289:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15320:1:39","nodeType":"YulLiteral","src":"15320:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"15323:4:39","nodeType":"YulLiteral","src":"15323:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15313:6:39","nodeType":"YulIdentifier","src":"15313:6:39"},"nativeSrc":"15313:15:39","nodeType":"YulFunctionCall","src":"15313:15:39"},"nativeSrc":"15313:15:39","nodeType":"YulExpressionStatement","src":"15313:15:39"}]},"name":"panic_error_0x11","nativeSrc":"15154:180:39","nodeType":"YulFunctionDefinition","src":"15154:180:39"},{"body":{"nativeSrc":"15383:190:39","nodeType":"YulBlock","src":"15383:190:39","statements":[{"nativeSrc":"15393:33:39","nodeType":"YulAssignment","src":"15393:33:39","value":{"arguments":[{"name":"value","nativeSrc":"15420:5:39","nodeType":"YulIdentifier","src":"15420:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15402:17:39","nodeType":"YulIdentifier","src":"15402:17:39"},"nativeSrc":"15402:24:39","nodeType":"YulFunctionCall","src":"15402:24:39"},"variableNames":[{"name":"value","nativeSrc":"15393:5:39","nodeType":"YulIdentifier","src":"15393:5:39"}]},{"body":{"nativeSrc":"15516:22:39","nodeType":"YulBlock","src":"15516:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15518:16:39","nodeType":"YulIdentifier","src":"15518:16:39"},"nativeSrc":"15518:18:39","nodeType":"YulFunctionCall","src":"15518:18:39"},"nativeSrc":"15518:18:39","nodeType":"YulExpressionStatement","src":"15518:18:39"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"15441:5:39","nodeType":"YulIdentifier","src":"15441:5:39"},{"kind":"number","nativeSrc":"15448:66:39","nodeType":"YulLiteral","src":"15448:66:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"15438:2:39","nodeType":"YulIdentifier","src":"15438:2:39"},"nativeSrc":"15438:77:39","nodeType":"YulFunctionCall","src":"15438:77:39"},"nativeSrc":"15435:103:39","nodeType":"YulIf","src":"15435:103:39"},{"nativeSrc":"15547:20:39","nodeType":"YulAssignment","src":"15547:20:39","value":{"arguments":[{"name":"value","nativeSrc":"15558:5:39","nodeType":"YulIdentifier","src":"15558:5:39"},{"kind":"number","nativeSrc":"15565:1:39","nodeType":"YulLiteral","src":"15565:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15554:3:39","nodeType":"YulIdentifier","src":"15554:3:39"},"nativeSrc":"15554:13:39","nodeType":"YulFunctionCall","src":"15554:13:39"},"variableNames":[{"name":"ret","nativeSrc":"15547:3:39","nodeType":"YulIdentifier","src":"15547:3:39"}]}]},"name":"increment_t_uint256","nativeSrc":"15340:233:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15369:5:39","nodeType":"YulTypedName","src":"15369:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"15379:3:39","nodeType":"YulTypedName","src":"15379:3:39","type":""}],"src":"15340:233:39"},{"body":{"nativeSrc":"15637:40:39","nodeType":"YulBlock","src":"15637:40:39","statements":[{"nativeSrc":"15648:22:39","nodeType":"YulAssignment","src":"15648:22:39","value":{"arguments":[{"name":"value","nativeSrc":"15664:5:39","nodeType":"YulIdentifier","src":"15664:5:39"}],"functionName":{"name":"mload","nativeSrc":"15658:5:39","nodeType":"YulIdentifier","src":"15658:5:39"},"nativeSrc":"15658:12:39","nodeType":"YulFunctionCall","src":"15658:12:39"},"variableNames":[{"name":"length","nativeSrc":"15648:6:39","nodeType":"YulIdentifier","src":"15648:6:39"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15579:98:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15620:5:39","nodeType":"YulTypedName","src":"15620:5:39","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15630:6:39","nodeType":"YulTypedName","src":"15630:6:39","type":""}],"src":"15579:98:39"},{"body":{"nativeSrc":"15778:73:39","nodeType":"YulBlock","src":"15778:73:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15795:3:39","nodeType":"YulIdentifier","src":"15795:3:39"},{"name":"length","nativeSrc":"15800:6:39","nodeType":"YulIdentifier","src":"15800:6:39"}],"functionName":{"name":"mstore","nativeSrc":"15788:6:39","nodeType":"YulIdentifier","src":"15788:6:39"},"nativeSrc":"15788:19:39","nodeType":"YulFunctionCall","src":"15788:19:39"},"nativeSrc":"15788:19:39","nodeType":"YulExpressionStatement","src":"15788:19:39"},{"nativeSrc":"15816:29:39","nodeType":"YulAssignment","src":"15816:29:39","value":{"arguments":[{"name":"pos","nativeSrc":"15835:3:39","nodeType":"YulIdentifier","src":"15835:3:39"},{"kind":"number","nativeSrc":"15840:4:39","nodeType":"YulLiteral","src":"15840:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15831:3:39","nodeType":"YulIdentifier","src":"15831:3:39"},"nativeSrc":"15831:14:39","nodeType":"YulFunctionCall","src":"15831:14:39"},"variableNames":[{"name":"updated_pos","nativeSrc":"15816:11:39","nodeType":"YulIdentifier","src":"15816:11:39"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"15683:168:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15750:3:39","nodeType":"YulTypedName","src":"15750:3:39","type":""},{"name":"length","nativeSrc":"15755:6:39","nodeType":"YulTypedName","src":"15755:6:39","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"15766:11:39","nodeType":"YulTypedName","src":"15766:11:39","type":""}],"src":"15683:168:39"},{"body":{"nativeSrc":"15947:283:39","nodeType":"YulBlock","src":"15947:283:39","statements":[{"nativeSrc":"15957:52:39","nodeType":"YulVariableDeclaration","src":"15957:52:39","value":{"arguments":[{"name":"value","nativeSrc":"16003:5:39","nodeType":"YulIdentifier","src":"16003:5:39"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15971:31:39","nodeType":"YulIdentifier","src":"15971:31:39"},"nativeSrc":"15971:38:39","nodeType":"YulFunctionCall","src":"15971:38:39"},"variables":[{"name":"length","nativeSrc":"15961:6:39","nodeType":"YulTypedName","src":"15961:6:39","type":""}]},{"nativeSrc":"16018:77:39","nodeType":"YulAssignment","src":"16018:77:39","value":{"arguments":[{"name":"pos","nativeSrc":"16083:3:39","nodeType":"YulIdentifier","src":"16083:3:39"},{"name":"length","nativeSrc":"16088:6:39","nodeType":"YulIdentifier","src":"16088:6:39"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"16025:57:39","nodeType":"YulIdentifier","src":"16025:57:39"},"nativeSrc":"16025:70:39","nodeType":"YulFunctionCall","src":"16025:70:39"},"variableNames":[{"name":"pos","nativeSrc":"16018:3:39","nodeType":"YulIdentifier","src":"16018:3:39"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16143:5:39","nodeType":"YulIdentifier","src":"16143:5:39"},{"kind":"number","nativeSrc":"16150:4:39","nodeType":"YulLiteral","src":"16150:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16139:3:39","nodeType":"YulIdentifier","src":"16139:3:39"},"nativeSrc":"16139:16:39","nodeType":"YulFunctionCall","src":"16139:16:39"},{"name":"pos","nativeSrc":"16157:3:39","nodeType":"YulIdentifier","src":"16157:3:39"},{"name":"length","nativeSrc":"16162:6:39","nodeType":"YulIdentifier","src":"16162:6:39"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16104:34:39","nodeType":"YulIdentifier","src":"16104:34:39"},"nativeSrc":"16104:65:39","nodeType":"YulFunctionCall","src":"16104:65:39"},"nativeSrc":"16104:65:39","nodeType":"YulExpressionStatement","src":"16104:65:39"},{"nativeSrc":"16178:46:39","nodeType":"YulAssignment","src":"16178:46:39","value":{"arguments":[{"name":"pos","nativeSrc":"16189:3:39","nodeType":"YulIdentifier","src":"16189:3:39"},{"arguments":[{"name":"length","nativeSrc":"16216:6:39","nodeType":"YulIdentifier","src":"16216:6:39"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16194:21:39","nodeType":"YulIdentifier","src":"16194:21:39"},"nativeSrc":"16194:29:39","nodeType":"YulFunctionCall","src":"16194:29:39"}],"functionName":{"name":"add","nativeSrc":"16185:3:39","nodeType":"YulIdentifier","src":"16185:3:39"},"nativeSrc":"16185:39:39","nodeType":"YulFunctionCall","src":"16185:39:39"},"variableNames":[{"name":"end","nativeSrc":"16178:3:39","nodeType":"YulIdentifier","src":"16178:3:39"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"15857:373:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15928:5:39","nodeType":"YulTypedName","src":"15928:5:39","type":""},{"name":"pos","nativeSrc":"15935:3:39","nodeType":"YulTypedName","src":"15935:3:39","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15943:3:39","nodeType":"YulTypedName","src":"15943:3:39","type":""}],"src":"15857:373:39"},{"body":{"nativeSrc":"16436:440:39","nodeType":"YulBlock","src":"16436:440:39","statements":[{"nativeSrc":"16446:27:39","nodeType":"YulAssignment","src":"16446:27:39","value":{"arguments":[{"name":"headStart","nativeSrc":"16458:9:39","nodeType":"YulIdentifier","src":"16458:9:39"},{"kind":"number","nativeSrc":"16469:3:39","nodeType":"YulLiteral","src":"16469:3:39","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16454:3:39","nodeType":"YulIdentifier","src":"16454:3:39"},"nativeSrc":"16454:19:39","nodeType":"YulFunctionCall","src":"16454:19:39"},"variableNames":[{"name":"tail","nativeSrc":"16446:4:39","nodeType":"YulIdentifier","src":"16446:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16527:6:39","nodeType":"YulIdentifier","src":"16527:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"16540:9:39","nodeType":"YulIdentifier","src":"16540:9:39"},{"kind":"number","nativeSrc":"16551:1:39","nodeType":"YulLiteral","src":"16551:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16536:3:39","nodeType":"YulIdentifier","src":"16536:3:39"},"nativeSrc":"16536:17:39","nodeType":"YulFunctionCall","src":"16536:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16483:43:39","nodeType":"YulIdentifier","src":"16483:43:39"},"nativeSrc":"16483:71:39","nodeType":"YulFunctionCall","src":"16483:71:39"},"nativeSrc":"16483:71:39","nodeType":"YulExpressionStatement","src":"16483:71:39"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16608:6:39","nodeType":"YulIdentifier","src":"16608:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"16621:9:39","nodeType":"YulIdentifier","src":"16621:9:39"},{"kind":"number","nativeSrc":"16632:2:39","nodeType":"YulLiteral","src":"16632:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16617:3:39","nodeType":"YulIdentifier","src":"16617:3:39"},"nativeSrc":"16617:18:39","nodeType":"YulFunctionCall","src":"16617:18:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16564:43:39","nodeType":"YulIdentifier","src":"16564:43:39"},"nativeSrc":"16564:72:39","nodeType":"YulFunctionCall","src":"16564:72:39"},"nativeSrc":"16564:72:39","nodeType":"YulExpressionStatement","src":"16564:72:39"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16690:6:39","nodeType":"YulIdentifier","src":"16690:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"16703:9:39","nodeType":"YulIdentifier","src":"16703:9:39"},{"kind":"number","nativeSrc":"16714:2:39","nodeType":"YulLiteral","src":"16714:2:39","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16699:3:39","nodeType":"YulIdentifier","src":"16699:3:39"},"nativeSrc":"16699:18:39","nodeType":"YulFunctionCall","src":"16699:18:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16646:43:39","nodeType":"YulIdentifier","src":"16646:43:39"},"nativeSrc":"16646:72:39","nodeType":"YulFunctionCall","src":"16646:72:39"},"nativeSrc":"16646:72:39","nodeType":"YulExpressionStatement","src":"16646:72:39"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16739:9:39","nodeType":"YulIdentifier","src":"16739:9:39"},{"kind":"number","nativeSrc":"16750:2:39","nodeType":"YulLiteral","src":"16750:2:39","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16735:3:39","nodeType":"YulIdentifier","src":"16735:3:39"},"nativeSrc":"16735:18:39","nodeType":"YulFunctionCall","src":"16735:18:39"},{"arguments":[{"name":"tail","nativeSrc":"16759:4:39","nodeType":"YulIdentifier","src":"16759:4:39"},{"name":"headStart","nativeSrc":"16765:9:39","nodeType":"YulIdentifier","src":"16765:9:39"}],"functionName":{"name":"sub","nativeSrc":"16755:3:39","nodeType":"YulIdentifier","src":"16755:3:39"},"nativeSrc":"16755:20:39","nodeType":"YulFunctionCall","src":"16755:20:39"}],"functionName":{"name":"mstore","nativeSrc":"16728:6:39","nodeType":"YulIdentifier","src":"16728:6:39"},"nativeSrc":"16728:48:39","nodeType":"YulFunctionCall","src":"16728:48:39"},"nativeSrc":"16728:48:39","nodeType":"YulExpressionStatement","src":"16728:48:39"},{"nativeSrc":"16785:84:39","nodeType":"YulAssignment","src":"16785:84:39","value":{"arguments":[{"name":"value3","nativeSrc":"16855:6:39","nodeType":"YulIdentifier","src":"16855:6:39"},{"name":"tail","nativeSrc":"16864:4:39","nodeType":"YulIdentifier","src":"16864:4:39"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"16793:61:39","nodeType":"YulIdentifier","src":"16793:61:39"},"nativeSrc":"16793:76:39","nodeType":"YulFunctionCall","src":"16793:76:39"},"variableNames":[{"name":"tail","nativeSrc":"16785:4:39","nodeType":"YulIdentifier","src":"16785:4:39"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"16236:640:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16384:9:39","nodeType":"YulTypedName","src":"16384:9:39","type":""},{"name":"value3","nativeSrc":"16396:6:39","nodeType":"YulTypedName","src":"16396:6:39","type":""},{"name":"value2","nativeSrc":"16404:6:39","nodeType":"YulTypedName","src":"16404:6:39","type":""},{"name":"value1","nativeSrc":"16412:6:39","nodeType":"YulTypedName","src":"16412:6:39","type":""},{"name":"value0","nativeSrc":"16420:6:39","nodeType":"YulTypedName","src":"16420:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16431:4:39","nodeType":"YulTypedName","src":"16431:4:39","type":""}],"src":"16236:640:39"},{"body":{"nativeSrc":"16944:79:39","nodeType":"YulBlock","src":"16944:79:39","statements":[{"nativeSrc":"16954:22:39","nodeType":"YulAssignment","src":"16954:22:39","value":{"arguments":[{"name":"offset","nativeSrc":"16969:6:39","nodeType":"YulIdentifier","src":"16969:6:39"}],"functionName":{"name":"mload","nativeSrc":"16963:5:39","nodeType":"YulIdentifier","src":"16963:5:39"},"nativeSrc":"16963:13:39","nodeType":"YulFunctionCall","src":"16963:13:39"},"variableNames":[{"name":"value","nativeSrc":"16954:5:39","nodeType":"YulIdentifier","src":"16954:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17011:5:39","nodeType":"YulIdentifier","src":"17011:5:39"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"16985:25:39","nodeType":"YulIdentifier","src":"16985:25:39"},"nativeSrc":"16985:32:39","nodeType":"YulFunctionCall","src":"16985:32:39"},"nativeSrc":"16985:32:39","nodeType":"YulExpressionStatement","src":"16985:32:39"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"16882:141:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16922:6:39","nodeType":"YulTypedName","src":"16922:6:39","type":""},{"name":"end","nativeSrc":"16930:3:39","nodeType":"YulTypedName","src":"16930:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16938:5:39","nodeType":"YulTypedName","src":"16938:5:39","type":""}],"src":"16882:141:39"},{"body":{"nativeSrc":"17105:273:39","nodeType":"YulBlock","src":"17105:273:39","statements":[{"body":{"nativeSrc":"17151:83:39","nodeType":"YulBlock","src":"17151:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17153:77:39","nodeType":"YulIdentifier","src":"17153:77:39"},"nativeSrc":"17153:79:39","nodeType":"YulFunctionCall","src":"17153:79:39"},"nativeSrc":"17153:79:39","nodeType":"YulExpressionStatement","src":"17153:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17126:7:39","nodeType":"YulIdentifier","src":"17126:7:39"},{"name":"headStart","nativeSrc":"17135:9:39","nodeType":"YulIdentifier","src":"17135:9:39"}],"functionName":{"name":"sub","nativeSrc":"17122:3:39","nodeType":"YulIdentifier","src":"17122:3:39"},"nativeSrc":"17122:23:39","nodeType":"YulFunctionCall","src":"17122:23:39"},{"kind":"number","nativeSrc":"17147:2:39","nodeType":"YulLiteral","src":"17147:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17118:3:39","nodeType":"YulIdentifier","src":"17118:3:39"},"nativeSrc":"17118:32:39","nodeType":"YulFunctionCall","src":"17118:32:39"},"nativeSrc":"17115:119:39","nodeType":"YulIf","src":"17115:119:39"},{"nativeSrc":"17244:127:39","nodeType":"YulBlock","src":"17244:127:39","statements":[{"nativeSrc":"17259:15:39","nodeType":"YulVariableDeclaration","src":"17259:15:39","value":{"kind":"number","nativeSrc":"17273:1:39","nodeType":"YulLiteral","src":"17273:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17263:6:39","nodeType":"YulTypedName","src":"17263:6:39","type":""}]},{"nativeSrc":"17288:73:39","nodeType":"YulAssignment","src":"17288:73:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17333:9:39","nodeType":"YulIdentifier","src":"17333:9:39"},{"name":"offset","nativeSrc":"17344:6:39","nodeType":"YulIdentifier","src":"17344:6:39"}],"functionName":{"name":"add","nativeSrc":"17329:3:39","nodeType":"YulIdentifier","src":"17329:3:39"},"nativeSrc":"17329:22:39","nodeType":"YulFunctionCall","src":"17329:22:39"},{"name":"dataEnd","nativeSrc":"17353:7:39","nodeType":"YulIdentifier","src":"17353:7:39"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"17298:30:39","nodeType":"YulIdentifier","src":"17298:30:39"},"nativeSrc":"17298:63:39","nodeType":"YulFunctionCall","src":"17298:63:39"},"variableNames":[{"name":"value0","nativeSrc":"17288:6:39","nodeType":"YulIdentifier","src":"17288:6:39"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"17029:349:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17075:9:39","nodeType":"YulTypedName","src":"17075:9:39","type":""},{"name":"dataEnd","nativeSrc":"17086:7:39","nodeType":"YulTypedName","src":"17086:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17098:6:39","nodeType":"YulTypedName","src":"17098:6:39","type":""}],"src":"17029:349:39"},{"body":{"nativeSrc":"17438:87:39","nodeType":"YulBlock","src":"17438:87:39","statements":[{"nativeSrc":"17448:11:39","nodeType":"YulAssignment","src":"17448:11:39","value":{"name":"ptr","nativeSrc":"17456:3:39","nodeType":"YulIdentifier","src":"17456:3:39"},"variableNames":[{"name":"data","nativeSrc":"17448:4:39","nodeType":"YulIdentifier","src":"17448:4:39"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17476:1:39","nodeType":"YulLiteral","src":"17476:1:39","type":"","value":"0"},{"name":"ptr","nativeSrc":"17479:3:39","nodeType":"YulIdentifier","src":"17479:3:39"}],"functionName":{"name":"mstore","nativeSrc":"17469:6:39","nodeType":"YulIdentifier","src":"17469:6:39"},"nativeSrc":"17469:14:39","nodeType":"YulFunctionCall","src":"17469:14:39"},"nativeSrc":"17469:14:39","nodeType":"YulExpressionStatement","src":"17469:14:39"},{"nativeSrc":"17492:26:39","nodeType":"YulAssignment","src":"17492:26:39","value":{"arguments":[{"kind":"number","nativeSrc":"17510:1:39","nodeType":"YulLiteral","src":"17510:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"17513:4:39","nodeType":"YulLiteral","src":"17513:4:39","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"17500:9:39","nodeType":"YulIdentifier","src":"17500:9:39"},"nativeSrc":"17500:18:39","nodeType":"YulFunctionCall","src":"17500:18:39"},"variableNames":[{"name":"data","nativeSrc":"17492:4:39","nodeType":"YulIdentifier","src":"17492:4:39"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"17384:141:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"17425:3:39","nodeType":"YulTypedName","src":"17425:3:39","type":""}],"returnVariables":[{"name":"data","nativeSrc":"17433:4:39","nodeType":"YulTypedName","src":"17433:4:39","type":""}],"src":"17384:141:39"},{"body":{"nativeSrc":"17575:49:39","nodeType":"YulBlock","src":"17575:49:39","statements":[{"nativeSrc":"17585:33:39","nodeType":"YulAssignment","src":"17585:33:39","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17603:5:39","nodeType":"YulIdentifier","src":"17603:5:39"},{"kind":"number","nativeSrc":"17610:2:39","nodeType":"YulLiteral","src":"17610:2:39","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"17599:3:39","nodeType":"YulIdentifier","src":"17599:3:39"},"nativeSrc":"17599:14:39","nodeType":"YulFunctionCall","src":"17599:14:39"},{"kind":"number","nativeSrc":"17615:2:39","nodeType":"YulLiteral","src":"17615:2:39","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"17595:3:39","nodeType":"YulIdentifier","src":"17595:3:39"},"nativeSrc":"17595:23:39","nodeType":"YulFunctionCall","src":"17595:23:39"},"variableNames":[{"name":"result","nativeSrc":"17585:6:39","nodeType":"YulIdentifier","src":"17585:6:39"}]}]},"name":"divide_by_32_ceil","nativeSrc":"17531:93:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17558:5:39","nodeType":"YulTypedName","src":"17558:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"17568:6:39","nodeType":"YulTypedName","src":"17568:6:39","type":""}],"src":"17531:93:39"},{"body":{"nativeSrc":"17683:54:39","nodeType":"YulBlock","src":"17683:54:39","statements":[{"nativeSrc":"17693:37:39","nodeType":"YulAssignment","src":"17693:37:39","value":{"arguments":[{"name":"bits","nativeSrc":"17718:4:39","nodeType":"YulIdentifier","src":"17718:4:39"},{"name":"value","nativeSrc":"17724:5:39","nodeType":"YulIdentifier","src":"17724:5:39"}],"functionName":{"name":"shl","nativeSrc":"17714:3:39","nodeType":"YulIdentifier","src":"17714:3:39"},"nativeSrc":"17714:16:39","nodeType":"YulFunctionCall","src":"17714:16:39"},"variableNames":[{"name":"newValue","nativeSrc":"17693:8:39","nodeType":"YulIdentifier","src":"17693:8:39"}]}]},"name":"shift_left_dynamic","nativeSrc":"17630:107:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"17658:4:39","nodeType":"YulTypedName","src":"17658:4:39","type":""},{"name":"value","nativeSrc":"17664:5:39","nodeType":"YulTypedName","src":"17664:5:39","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"17674:8:39","nodeType":"YulTypedName","src":"17674:8:39","type":""}],"src":"17630:107:39"},{"body":{"nativeSrc":"17819:317:39","nodeType":"YulBlock","src":"17819:317:39","statements":[{"nativeSrc":"17829:35:39","nodeType":"YulVariableDeclaration","src":"17829:35:39","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"17850:10:39","nodeType":"YulIdentifier","src":"17850:10:39"},{"kind":"number","nativeSrc":"17862:1:39","nodeType":"YulLiteral","src":"17862:1:39","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"17846:3:39","nodeType":"YulIdentifier","src":"17846:3:39"},"nativeSrc":"17846:18:39","nodeType":"YulFunctionCall","src":"17846:18:39"},"variables":[{"name":"shiftBits","nativeSrc":"17833:9:39","nodeType":"YulTypedName","src":"17833:9:39","type":""}]},{"nativeSrc":"17873:109:39","nodeType":"YulVariableDeclaration","src":"17873:109:39","value":{"arguments":[{"name":"shiftBits","nativeSrc":"17904:9:39","nodeType":"YulIdentifier","src":"17904:9:39"},{"kind":"number","nativeSrc":"17915:66:39","nodeType":"YulLiteral","src":"17915:66:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"17885:18:39","nodeType":"YulIdentifier","src":"17885:18:39"},"nativeSrc":"17885:97:39","nodeType":"YulFunctionCall","src":"17885:97:39"},"variables":[{"name":"mask","nativeSrc":"17877:4:39","nodeType":"YulTypedName","src":"17877:4:39","type":""}]},{"nativeSrc":"17991:51:39","nodeType":"YulAssignment","src":"17991:51:39","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18022:9:39","nodeType":"YulIdentifier","src":"18022:9:39"},{"name":"toInsert","nativeSrc":"18033:8:39","nodeType":"YulIdentifier","src":"18033:8:39"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18003:18:39","nodeType":"YulIdentifier","src":"18003:18:39"},"nativeSrc":"18003:39:39","nodeType":"YulFunctionCall","src":"18003:39:39"},"variableNames":[{"name":"toInsert","nativeSrc":"17991:8:39","nodeType":"YulIdentifier","src":"17991:8:39"}]},{"nativeSrc":"18051:30:39","nodeType":"YulAssignment","src":"18051:30:39","value":{"arguments":[{"name":"value","nativeSrc":"18064:5:39","nodeType":"YulIdentifier","src":"18064:5:39"},{"arguments":[{"name":"mask","nativeSrc":"18075:4:39","nodeType":"YulIdentifier","src":"18075:4:39"}],"functionName":{"name":"not","nativeSrc":"18071:3:39","nodeType":"YulIdentifier","src":"18071:3:39"},"nativeSrc":"18071:9:39","nodeType":"YulFunctionCall","src":"18071:9:39"}],"functionName":{"name":"and","nativeSrc":"18060:3:39","nodeType":"YulIdentifier","src":"18060:3:39"},"nativeSrc":"18060:21:39","nodeType":"YulFunctionCall","src":"18060:21:39"},"variableNames":[{"name":"value","nativeSrc":"18051:5:39","nodeType":"YulIdentifier","src":"18051:5:39"}]},{"nativeSrc":"18090:40:39","nodeType":"YulAssignment","src":"18090:40:39","value":{"arguments":[{"name":"value","nativeSrc":"18103:5:39","nodeType":"YulIdentifier","src":"18103:5:39"},{"arguments":[{"name":"toInsert","nativeSrc":"18114:8:39","nodeType":"YulIdentifier","src":"18114:8:39"},{"name":"mask","nativeSrc":"18124:4:39","nodeType":"YulIdentifier","src":"18124:4:39"}],"functionName":{"name":"and","nativeSrc":"18110:3:39","nodeType":"YulIdentifier","src":"18110:3:39"},"nativeSrc":"18110:19:39","nodeType":"YulFunctionCall","src":"18110:19:39"}],"functionName":{"name":"or","nativeSrc":"18100:2:39","nodeType":"YulIdentifier","src":"18100:2:39"},"nativeSrc":"18100:30:39","nodeType":"YulFunctionCall","src":"18100:30:39"},"variableNames":[{"name":"result","nativeSrc":"18090:6:39","nodeType":"YulIdentifier","src":"18090:6:39"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"17743:393:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17780:5:39","nodeType":"YulTypedName","src":"17780:5:39","type":""},{"name":"shiftBytes","nativeSrc":"17787:10:39","nodeType":"YulTypedName","src":"17787:10:39","type":""},{"name":"toInsert","nativeSrc":"17799:8:39","nodeType":"YulTypedName","src":"17799:8:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"17812:6:39","nodeType":"YulTypedName","src":"17812:6:39","type":""}],"src":"17743:393:39"},{"body":{"nativeSrc":"18174:28:39","nodeType":"YulBlock","src":"18174:28:39","statements":[{"nativeSrc":"18184:12:39","nodeType":"YulAssignment","src":"18184:12:39","value":{"name":"value","nativeSrc":"18191:5:39","nodeType":"YulIdentifier","src":"18191:5:39"},"variableNames":[{"name":"ret","nativeSrc":"18184:3:39","nodeType":"YulIdentifier","src":"18184:3:39"}]}]},"name":"identity","nativeSrc":"18142:60:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18160:5:39","nodeType":"YulTypedName","src":"18160:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"18170:3:39","nodeType":"YulTypedName","src":"18170:3:39","type":""}],"src":"18142:60:39"},{"body":{"nativeSrc":"18268:82:39","nodeType":"YulBlock","src":"18268:82:39","statements":[{"nativeSrc":"18278:66:39","nodeType":"YulAssignment","src":"18278:66:39","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18336:5:39","nodeType":"YulIdentifier","src":"18336:5:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18318:17:39","nodeType":"YulIdentifier","src":"18318:17:39"},"nativeSrc":"18318:24:39","nodeType":"YulFunctionCall","src":"18318:24:39"}],"functionName":{"name":"identity","nativeSrc":"18309:8:39","nodeType":"YulIdentifier","src":"18309:8:39"},"nativeSrc":"18309:34:39","nodeType":"YulFunctionCall","src":"18309:34:39"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18291:17:39","nodeType":"YulIdentifier","src":"18291:17:39"},"nativeSrc":"18291:53:39","nodeType":"YulFunctionCall","src":"18291:53:39"},"variableNames":[{"name":"converted","nativeSrc":"18278:9:39","nodeType":"YulIdentifier","src":"18278:9:39"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"18208:142:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18248:5:39","nodeType":"YulTypedName","src":"18248:5:39","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"18258:9:39","nodeType":"YulTypedName","src":"18258:9:39","type":""}],"src":"18208:142:39"},{"body":{"nativeSrc":"18403:28:39","nodeType":"YulBlock","src":"18403:28:39","statements":[{"nativeSrc":"18413:12:39","nodeType":"YulAssignment","src":"18413:12:39","value":{"name":"value","nativeSrc":"18420:5:39","nodeType":"YulIdentifier","src":"18420:5:39"},"variableNames":[{"name":"ret","nativeSrc":"18413:3:39","nodeType":"YulIdentifier","src":"18413:3:39"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"18356:75:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18389:5:39","nodeType":"YulTypedName","src":"18389:5:39","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"18399:3:39","nodeType":"YulTypedName","src":"18399:3:39","type":""}],"src":"18356:75:39"},{"body":{"nativeSrc":"18513:193:39","nodeType":"YulBlock","src":"18513:193:39","statements":[{"nativeSrc":"18523:63:39","nodeType":"YulVariableDeclaration","src":"18523:63:39","value":{"arguments":[{"name":"value_0","nativeSrc":"18578:7:39","nodeType":"YulIdentifier","src":"18578:7:39"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"18547:30:39","nodeType":"YulIdentifier","src":"18547:30:39"},"nativeSrc":"18547:39:39","nodeType":"YulFunctionCall","src":"18547:39:39"},"variables":[{"name":"convertedValue_0","nativeSrc":"18527:16:39","nodeType":"YulTypedName","src":"18527:16:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18602:4:39","nodeType":"YulIdentifier","src":"18602:4:39"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"18642:4:39","nodeType":"YulIdentifier","src":"18642:4:39"}],"functionName":{"name":"sload","nativeSrc":"18636:5:39","nodeType":"YulIdentifier","src":"18636:5:39"},"nativeSrc":"18636:11:39","nodeType":"YulFunctionCall","src":"18636:11:39"},{"name":"offset","nativeSrc":"18649:6:39","nodeType":"YulIdentifier","src":"18649:6:39"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"18681:16:39","nodeType":"YulIdentifier","src":"18681:16:39"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"18657:23:39","nodeType":"YulIdentifier","src":"18657:23:39"},"nativeSrc":"18657:41:39","nodeType":"YulFunctionCall","src":"18657:41:39"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"18608:27:39","nodeType":"YulIdentifier","src":"18608:27:39"},"nativeSrc":"18608:91:39","nodeType":"YulFunctionCall","src":"18608:91:39"}],"functionName":{"name":"sstore","nativeSrc":"18595:6:39","nodeType":"YulIdentifier","src":"18595:6:39"},"nativeSrc":"18595:105:39","nodeType":"YulFunctionCall","src":"18595:105:39"},"nativeSrc":"18595:105:39","nodeType":"YulExpressionStatement","src":"18595:105:39"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"18437:269:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"18490:4:39","nodeType":"YulTypedName","src":"18490:4:39","type":""},{"name":"offset","nativeSrc":"18496:6:39","nodeType":"YulTypedName","src":"18496:6:39","type":""},{"name":"value_0","nativeSrc":"18504:7:39","nodeType":"YulTypedName","src":"18504:7:39","type":""}],"src":"18437:269:39"},{"body":{"nativeSrc":"18761:24:39","nodeType":"YulBlock","src":"18761:24:39","statements":[{"nativeSrc":"18771:8:39","nodeType":"YulAssignment","src":"18771:8:39","value":{"kind":"number","nativeSrc":"18778:1:39","nodeType":"YulLiteral","src":"18778:1:39","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"18771:3:39","nodeType":"YulIdentifier","src":"18771:3:39"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"18712:73:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"18757:3:39","nodeType":"YulTypedName","src":"18757:3:39","type":""}],"src":"18712:73:39"},{"body":{"nativeSrc":"18844:136:39","nodeType":"YulBlock","src":"18844:136:39","statements":[{"nativeSrc":"18854:46:39","nodeType":"YulVariableDeclaration","src":"18854:46:39","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"18868:30:39","nodeType":"YulIdentifier","src":"18868:30:39"},"nativeSrc":"18868:32:39","nodeType":"YulFunctionCall","src":"18868:32:39"},"variables":[{"name":"zero_0","nativeSrc":"18858:6:39","nodeType":"YulTypedName","src":"18858:6:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18953:4:39","nodeType":"YulIdentifier","src":"18953:4:39"},{"name":"offset","nativeSrc":"18959:6:39","nodeType":"YulIdentifier","src":"18959:6:39"},{"name":"zero_0","nativeSrc":"18967:6:39","nodeType":"YulIdentifier","src":"18967:6:39"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"18909:43:39","nodeType":"YulIdentifier","src":"18909:43:39"},"nativeSrc":"18909:65:39","nodeType":"YulFunctionCall","src":"18909:65:39"},"nativeSrc":"18909:65:39","nodeType":"YulExpressionStatement","src":"18909:65:39"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"18791:189:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"18830:4:39","nodeType":"YulTypedName","src":"18830:4:39","type":""},{"name":"offset","nativeSrc":"18836:6:39","nodeType":"YulTypedName","src":"18836:6:39","type":""}],"src":"18791:189:39"},{"body":{"nativeSrc":"19036:136:39","nodeType":"YulBlock","src":"19036:136:39","statements":[{"body":{"nativeSrc":"19103:63:39","nodeType":"YulBlock","src":"19103:63:39","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"19147:5:39","nodeType":"YulIdentifier","src":"19147:5:39"},{"kind":"number","nativeSrc":"19154:1:39","nodeType":"YulLiteral","src":"19154:1:39","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"19117:29:39","nodeType":"YulIdentifier","src":"19117:29:39"},"nativeSrc":"19117:39:39","nodeType":"YulFunctionCall","src":"19117:39:39"},"nativeSrc":"19117:39:39","nodeType":"YulExpressionStatement","src":"19117:39:39"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"19056:5:39","nodeType":"YulIdentifier","src":"19056:5:39"},{"name":"end","nativeSrc":"19063:3:39","nodeType":"YulIdentifier","src":"19063:3:39"}],"functionName":{"name":"lt","nativeSrc":"19053:2:39","nodeType":"YulIdentifier","src":"19053:2:39"},"nativeSrc":"19053:14:39","nodeType":"YulFunctionCall","src":"19053:14:39"},"nativeSrc":"19046:120:39","nodeType":"YulForLoop","post":{"nativeSrc":"19068:26:39","nodeType":"YulBlock","src":"19068:26:39","statements":[{"nativeSrc":"19070:22:39","nodeType":"YulAssignment","src":"19070:22:39","value":{"arguments":[{"name":"start","nativeSrc":"19083:5:39","nodeType":"YulIdentifier","src":"19083:5:39"},{"kind":"number","nativeSrc":"19090:1:39","nodeType":"YulLiteral","src":"19090:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19079:3:39","nodeType":"YulIdentifier","src":"19079:3:39"},"nativeSrc":"19079:13:39","nodeType":"YulFunctionCall","src":"19079:13:39"},"variableNames":[{"name":"start","nativeSrc":"19070:5:39","nodeType":"YulIdentifier","src":"19070:5:39"}]}]},"pre":{"nativeSrc":"19050:2:39","nodeType":"YulBlock","src":"19050:2:39","statements":[]},"src":"19046:120:39"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"18986:186:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19024:5:39","nodeType":"YulTypedName","src":"19024:5:39","type":""},{"name":"end","nativeSrc":"19031:3:39","nodeType":"YulTypedName","src":"19031:3:39","type":""}],"src":"18986:186:39"},{"body":{"nativeSrc":"19257:464:39","nodeType":"YulBlock","src":"19257:464:39","statements":[{"body":{"nativeSrc":"19283:431:39","nodeType":"YulBlock","src":"19283:431:39","statements":[{"nativeSrc":"19297:54:39","nodeType":"YulVariableDeclaration","src":"19297:54:39","value":{"arguments":[{"name":"array","nativeSrc":"19345:5:39","nodeType":"YulIdentifier","src":"19345:5:39"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"19313:31:39","nodeType":"YulIdentifier","src":"19313:31:39"},"nativeSrc":"19313:38:39","nodeType":"YulFunctionCall","src":"19313:38:39"},"variables":[{"name":"dataArea","nativeSrc":"19301:8:39","nodeType":"YulTypedName","src":"19301:8:39","type":""}]},{"nativeSrc":"19364:63:39","nodeType":"YulVariableDeclaration","src":"19364:63:39","value":{"arguments":[{"name":"dataArea","nativeSrc":"19387:8:39","nodeType":"YulIdentifier","src":"19387:8:39"},{"arguments":[{"name":"startIndex","nativeSrc":"19415:10:39","nodeType":"YulIdentifier","src":"19415:10:39"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"19397:17:39","nodeType":"YulIdentifier","src":"19397:17:39"},"nativeSrc":"19397:29:39","nodeType":"YulFunctionCall","src":"19397:29:39"}],"functionName":{"name":"add","nativeSrc":"19383:3:39","nodeType":"YulIdentifier","src":"19383:3:39"},"nativeSrc":"19383:44:39","nodeType":"YulFunctionCall","src":"19383:44:39"},"variables":[{"name":"deleteStart","nativeSrc":"19368:11:39","nodeType":"YulTypedName","src":"19368:11:39","type":""}]},{"body":{"nativeSrc":"19584:27:39","nodeType":"YulBlock","src":"19584:27:39","statements":[{"nativeSrc":"19586:23:39","nodeType":"YulAssignment","src":"19586:23:39","value":{"name":"dataArea","nativeSrc":"19601:8:39","nodeType":"YulIdentifier","src":"19601:8:39"},"variableNames":[{"name":"deleteStart","nativeSrc":"19586:11:39","nodeType":"YulIdentifier","src":"19586:11:39"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"19568:10:39","nodeType":"YulIdentifier","src":"19568:10:39"},{"kind":"number","nativeSrc":"19580:2:39","nodeType":"YulLiteral","src":"19580:2:39","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"19565:2:39","nodeType":"YulIdentifier","src":"19565:2:39"},"nativeSrc":"19565:18:39","nodeType":"YulFunctionCall","src":"19565:18:39"},"nativeSrc":"19562:49:39","nodeType":"YulIf","src":"19562:49:39"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"19653:11:39","nodeType":"YulIdentifier","src":"19653:11:39"},{"arguments":[{"name":"dataArea","nativeSrc":"19670:8:39","nodeType":"YulIdentifier","src":"19670:8:39"},{"arguments":[{"name":"len","nativeSrc":"19698:3:39","nodeType":"YulIdentifier","src":"19698:3:39"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"19680:17:39","nodeType":"YulIdentifier","src":"19680:17:39"},"nativeSrc":"19680:22:39","nodeType":"YulFunctionCall","src":"19680:22:39"}],"functionName":{"name":"add","nativeSrc":"19666:3:39","nodeType":"YulIdentifier","src":"19666:3:39"},"nativeSrc":"19666:37:39","nodeType":"YulFunctionCall","src":"19666:37:39"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"19624:28:39","nodeType":"YulIdentifier","src":"19624:28:39"},"nativeSrc":"19624:80:39","nodeType":"YulFunctionCall","src":"19624:80:39"},"nativeSrc":"19624:80:39","nodeType":"YulExpressionStatement","src":"19624:80:39"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"19274:3:39","nodeType":"YulIdentifier","src":"19274:3:39"},{"kind":"number","nativeSrc":"19279:2:39","nodeType":"YulLiteral","src":"19279:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"19271:2:39","nodeType":"YulIdentifier","src":"19271:2:39"},"nativeSrc":"19271:11:39","nodeType":"YulFunctionCall","src":"19271:11:39"},"nativeSrc":"19268:446:39","nodeType":"YulIf","src":"19268:446:39"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"19178:543:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"19233:5:39","nodeType":"YulTypedName","src":"19233:5:39","type":""},{"name":"len","nativeSrc":"19240:3:39","nodeType":"YulTypedName","src":"19240:3:39","type":""},{"name":"startIndex","nativeSrc":"19245:10:39","nodeType":"YulTypedName","src":"19245:10:39","type":""}],"src":"19178:543:39"},{"body":{"nativeSrc":"19790:54:39","nodeType":"YulBlock","src":"19790:54:39","statements":[{"nativeSrc":"19800:37:39","nodeType":"YulAssignment","src":"19800:37:39","value":{"arguments":[{"name":"bits","nativeSrc":"19825:4:39","nodeType":"YulIdentifier","src":"19825:4:39"},{"name":"value","nativeSrc":"19831:5:39","nodeType":"YulIdentifier","src":"19831:5:39"}],"functionName":{"name":"shr","nativeSrc":"19821:3:39","nodeType":"YulIdentifier","src":"19821:3:39"},"nativeSrc":"19821:16:39","nodeType":"YulFunctionCall","src":"19821:16:39"},"variableNames":[{"name":"newValue","nativeSrc":"19800:8:39","nodeType":"YulIdentifier","src":"19800:8:39"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"19727:117:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"19765:4:39","nodeType":"YulTypedName","src":"19765:4:39","type":""},{"name":"value","nativeSrc":"19771:5:39","nodeType":"YulTypedName","src":"19771:5:39","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"19781:8:39","nodeType":"YulTypedName","src":"19781:8:39","type":""}],"src":"19727:117:39"},{"body":{"nativeSrc":"19901:118:39","nodeType":"YulBlock","src":"19901:118:39","statements":[{"nativeSrc":"19911:68:39","nodeType":"YulVariableDeclaration","src":"19911:68:39","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"19960:1:39","nodeType":"YulLiteral","src":"19960:1:39","type":"","value":"8"},{"name":"bytes","nativeSrc":"19963:5:39","nodeType":"YulIdentifier","src":"19963:5:39"}],"functionName":{"name":"mul","nativeSrc":"19956:3:39","nodeType":"YulIdentifier","src":"19956:3:39"},"nativeSrc":"19956:13:39","nodeType":"YulFunctionCall","src":"19956:13:39"},{"arguments":[{"kind":"number","nativeSrc":"19975:1:39","nodeType":"YulLiteral","src":"19975:1:39","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"19971:3:39","nodeType":"YulIdentifier","src":"19971:3:39"},"nativeSrc":"19971:6:39","nodeType":"YulFunctionCall","src":"19971:6:39"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"19927:28:39","nodeType":"YulIdentifier","src":"19927:28:39"},"nativeSrc":"19927:51:39","nodeType":"YulFunctionCall","src":"19927:51:39"}],"functionName":{"name":"not","nativeSrc":"19923:3:39","nodeType":"YulIdentifier","src":"19923:3:39"},"nativeSrc":"19923:56:39","nodeType":"YulFunctionCall","src":"19923:56:39"},"variables":[{"name":"mask","nativeSrc":"19915:4:39","nodeType":"YulTypedName","src":"19915:4:39","type":""}]},{"nativeSrc":"19988:25:39","nodeType":"YulAssignment","src":"19988:25:39","value":{"arguments":[{"name":"data","nativeSrc":"20002:4:39","nodeType":"YulIdentifier","src":"20002:4:39"},{"name":"mask","nativeSrc":"20008:4:39","nodeType":"YulIdentifier","src":"20008:4:39"}],"functionName":{"name":"and","nativeSrc":"19998:3:39","nodeType":"YulIdentifier","src":"19998:3:39"},"nativeSrc":"19998:15:39","nodeType":"YulFunctionCall","src":"19998:15:39"},"variableNames":[{"name":"result","nativeSrc":"19988:6:39","nodeType":"YulIdentifier","src":"19988:6:39"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"19850:169:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"19878:4:39","nodeType":"YulTypedName","src":"19878:4:39","type":""},{"name":"bytes","nativeSrc":"19884:5:39","nodeType":"YulTypedName","src":"19884:5:39","type":""}],"returnVariables":[{"name":"result","nativeSrc":"19894:6:39","nodeType":"YulTypedName","src":"19894:6:39","type":""}],"src":"19850:169:39"},{"body":{"nativeSrc":"20105:214:39","nodeType":"YulBlock","src":"20105:214:39","statements":[{"nativeSrc":"20238:37:39","nodeType":"YulAssignment","src":"20238:37:39","value":{"arguments":[{"name":"data","nativeSrc":"20265:4:39","nodeType":"YulIdentifier","src":"20265:4:39"},{"name":"len","nativeSrc":"20271:3:39","nodeType":"YulIdentifier","src":"20271:3:39"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"20246:18:39","nodeType":"YulIdentifier","src":"20246:18:39"},"nativeSrc":"20246:29:39","nodeType":"YulFunctionCall","src":"20246:29:39"},"variableNames":[{"name":"data","nativeSrc":"20238:4:39","nodeType":"YulIdentifier","src":"20238:4:39"}]},{"nativeSrc":"20284:29:39","nodeType":"YulAssignment","src":"20284:29:39","value":{"arguments":[{"name":"data","nativeSrc":"20295:4:39","nodeType":"YulIdentifier","src":"20295:4:39"},{"arguments":[{"kind":"number","nativeSrc":"20305:1:39","nodeType":"YulLiteral","src":"20305:1:39","type":"","value":"2"},{"name":"len","nativeSrc":"20308:3:39","nodeType":"YulIdentifier","src":"20308:3:39"}],"functionName":{"name":"mul","nativeSrc":"20301:3:39","nodeType":"YulIdentifier","src":"20301:3:39"},"nativeSrc":"20301:11:39","nodeType":"YulFunctionCall","src":"20301:11:39"}],"functionName":{"name":"or","nativeSrc":"20292:2:39","nodeType":"YulIdentifier","src":"20292:2:39"},"nativeSrc":"20292:21:39","nodeType":"YulFunctionCall","src":"20292:21:39"},"variableNames":[{"name":"used","nativeSrc":"20284:4:39","nodeType":"YulIdentifier","src":"20284:4:39"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20024:295:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20086:4:39","nodeType":"YulTypedName","src":"20086:4:39","type":""},{"name":"len","nativeSrc":"20092:3:39","nodeType":"YulTypedName","src":"20092:3:39","type":""}],"returnVariables":[{"name":"used","nativeSrc":"20100:4:39","nodeType":"YulTypedName","src":"20100:4:39","type":""}],"src":"20024:295:39"},{"body":{"nativeSrc":"20416:1303:39","nodeType":"YulBlock","src":"20416:1303:39","statements":[{"nativeSrc":"20427:51:39","nodeType":"YulVariableDeclaration","src":"20427:51:39","value":{"arguments":[{"name":"src","nativeSrc":"20474:3:39","nodeType":"YulIdentifier","src":"20474:3:39"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"20441:32:39","nodeType":"YulIdentifier","src":"20441:32:39"},"nativeSrc":"20441:37:39","nodeType":"YulFunctionCall","src":"20441:37:39"},"variables":[{"name":"newLen","nativeSrc":"20431:6:39","nodeType":"YulTypedName","src":"20431:6:39","type":""}]},{"body":{"nativeSrc":"20563:22:39","nodeType":"YulBlock","src":"20563:22:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"20565:16:39","nodeType":"YulIdentifier","src":"20565:16:39"},"nativeSrc":"20565:18:39","nodeType":"YulFunctionCall","src":"20565:18:39"},"nativeSrc":"20565:18:39","nodeType":"YulExpressionStatement","src":"20565:18:39"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"20535:6:39","nodeType":"YulIdentifier","src":"20535:6:39"},{"kind":"number","nativeSrc":"20543:18:39","nodeType":"YulLiteral","src":"20543:18:39","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20532:2:39","nodeType":"YulIdentifier","src":"20532:2:39"},"nativeSrc":"20532:30:39","nodeType":"YulFunctionCall","src":"20532:30:39"},"nativeSrc":"20529:56:39","nodeType":"YulIf","src":"20529:56:39"},{"nativeSrc":"20595:52:39","nodeType":"YulVariableDeclaration","src":"20595:52:39","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"20641:4:39","nodeType":"YulIdentifier","src":"20641:4:39"}],"functionName":{"name":"sload","nativeSrc":"20635:5:39","nodeType":"YulIdentifier","src":"20635:5:39"},"nativeSrc":"20635:11:39","nodeType":"YulFunctionCall","src":"20635:11:39"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"20609:25:39","nodeType":"YulIdentifier","src":"20609:25:39"},"nativeSrc":"20609:38:39","nodeType":"YulFunctionCall","src":"20609:38:39"},"variables":[{"name":"oldLen","nativeSrc":"20599:6:39","nodeType":"YulTypedName","src":"20599:6:39","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20740:4:39","nodeType":"YulIdentifier","src":"20740:4:39"},{"name":"oldLen","nativeSrc":"20746:6:39","nodeType":"YulIdentifier","src":"20746:6:39"},{"name":"newLen","nativeSrc":"20754:6:39","nodeType":"YulIdentifier","src":"20754:6:39"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"20694:45:39","nodeType":"YulIdentifier","src":"20694:45:39"},"nativeSrc":"20694:67:39","nodeType":"YulFunctionCall","src":"20694:67:39"},"nativeSrc":"20694:67:39","nodeType":"YulExpressionStatement","src":"20694:67:39"},{"nativeSrc":"20771:18:39","nodeType":"YulVariableDeclaration","src":"20771:18:39","value":{"kind":"number","nativeSrc":"20788:1:39","nodeType":"YulLiteral","src":"20788:1:39","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"20775:9:39","nodeType":"YulTypedName","src":"20775:9:39","type":""}]},{"nativeSrc":"20799:17:39","nodeType":"YulAssignment","src":"20799:17:39","value":{"kind":"number","nativeSrc":"20812:4:39","nodeType":"YulLiteral","src":"20812:4:39","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"20799:9:39","nodeType":"YulIdentifier","src":"20799:9:39"}]},{"cases":[{"body":{"nativeSrc":"20863:611:39","nodeType":"YulBlock","src":"20863:611:39","statements":[{"nativeSrc":"20877:37:39","nodeType":"YulVariableDeclaration","src":"20877:37:39","value":{"arguments":[{"name":"newLen","nativeSrc":"20896:6:39","nodeType":"YulIdentifier","src":"20896:6:39"},{"arguments":[{"kind":"number","nativeSrc":"20908:4:39","nodeType":"YulLiteral","src":"20908:4:39","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"20904:3:39","nodeType":"YulIdentifier","src":"20904:3:39"},"nativeSrc":"20904:9:39","nodeType":"YulFunctionCall","src":"20904:9:39"}],"functionName":{"name":"and","nativeSrc":"20892:3:39","nodeType":"YulIdentifier","src":"20892:3:39"},"nativeSrc":"20892:22:39","nodeType":"YulFunctionCall","src":"20892:22:39"},"variables":[{"name":"loopEnd","nativeSrc":"20881:7:39","nodeType":"YulTypedName","src":"20881:7:39","type":""}]},{"nativeSrc":"20928:51:39","nodeType":"YulVariableDeclaration","src":"20928:51:39","value":{"arguments":[{"name":"slot","nativeSrc":"20974:4:39","nodeType":"YulIdentifier","src":"20974:4:39"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"20942:31:39","nodeType":"YulIdentifier","src":"20942:31:39"},"nativeSrc":"20942:37:39","nodeType":"YulFunctionCall","src":"20942:37:39"},"variables":[{"name":"dstPtr","nativeSrc":"20932:6:39","nodeType":"YulTypedName","src":"20932:6:39","type":""}]},{"nativeSrc":"20992:10:39","nodeType":"YulVariableDeclaration","src":"20992:10:39","value":{"kind":"number","nativeSrc":"21001:1:39","nodeType":"YulLiteral","src":"21001:1:39","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"20996:1:39","nodeType":"YulTypedName","src":"20996:1:39","type":""}]},{"body":{"nativeSrc":"21060:163:39","nodeType":"YulBlock","src":"21060:163:39","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21085:6:39","nodeType":"YulIdentifier","src":"21085:6:39"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21103:3:39","nodeType":"YulIdentifier","src":"21103:3:39"},{"name":"srcOffset","nativeSrc":"21108:9:39","nodeType":"YulIdentifier","src":"21108:9:39"}],"functionName":{"name":"add","nativeSrc":"21099:3:39","nodeType":"YulIdentifier","src":"21099:3:39"},"nativeSrc":"21099:19:39","nodeType":"YulFunctionCall","src":"21099:19:39"}],"functionName":{"name":"mload","nativeSrc":"21093:5:39","nodeType":"YulIdentifier","src":"21093:5:39"},"nativeSrc":"21093:26:39","nodeType":"YulFunctionCall","src":"21093:26:39"}],"functionName":{"name":"sstore","nativeSrc":"21078:6:39","nodeType":"YulIdentifier","src":"21078:6:39"},"nativeSrc":"21078:42:39","nodeType":"YulFunctionCall","src":"21078:42:39"},"nativeSrc":"21078:42:39","nodeType":"YulExpressionStatement","src":"21078:42:39"},{"nativeSrc":"21137:24:39","nodeType":"YulAssignment","src":"21137:24:39","value":{"arguments":[{"name":"dstPtr","nativeSrc":"21151:6:39","nodeType":"YulIdentifier","src":"21151:6:39"},{"kind":"number","nativeSrc":"21159:1:39","nodeType":"YulLiteral","src":"21159:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21147:3:39","nodeType":"YulIdentifier","src":"21147:3:39"},"nativeSrc":"21147:14:39","nodeType":"YulFunctionCall","src":"21147:14:39"},"variableNames":[{"name":"dstPtr","nativeSrc":"21137:6:39","nodeType":"YulIdentifier","src":"21137:6:39"}]},{"nativeSrc":"21178:31:39","nodeType":"YulAssignment","src":"21178:31:39","value":{"arguments":[{"name":"srcOffset","nativeSrc":"21195:9:39","nodeType":"YulIdentifier","src":"21195:9:39"},{"kind":"number","nativeSrc":"21206:2:39","nodeType":"YulLiteral","src":"21206:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21191:3:39","nodeType":"YulIdentifier","src":"21191:3:39"},"nativeSrc":"21191:18:39","nodeType":"YulFunctionCall","src":"21191:18:39"},"variableNames":[{"name":"srcOffset","nativeSrc":"21178:9:39","nodeType":"YulIdentifier","src":"21178:9:39"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"21026:1:39","nodeType":"YulIdentifier","src":"21026:1:39"},{"name":"loopEnd","nativeSrc":"21029:7:39","nodeType":"YulIdentifier","src":"21029:7:39"}],"functionName":{"name":"lt","nativeSrc":"21023:2:39","nodeType":"YulIdentifier","src":"21023:2:39"},"nativeSrc":"21023:14:39","nodeType":"YulFunctionCall","src":"21023:14:39"},"nativeSrc":"21015:208:39","nodeType":"YulForLoop","post":{"nativeSrc":"21038:21:39","nodeType":"YulBlock","src":"21038:21:39","statements":[{"nativeSrc":"21040:17:39","nodeType":"YulAssignment","src":"21040:17:39","value":{"arguments":[{"name":"i","nativeSrc":"21049:1:39","nodeType":"YulIdentifier","src":"21049:1:39"},{"kind":"number","nativeSrc":"21052:4:39","nodeType":"YulLiteral","src":"21052:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21045:3:39","nodeType":"YulIdentifier","src":"21045:3:39"},"nativeSrc":"21045:12:39","nodeType":"YulFunctionCall","src":"21045:12:39"},"variableNames":[{"name":"i","nativeSrc":"21040:1:39","nodeType":"YulIdentifier","src":"21040:1:39"}]}]},"pre":{"nativeSrc":"21019:3:39","nodeType":"YulBlock","src":"21019:3:39","statements":[]},"src":"21015:208:39"},{"body":{"nativeSrc":"21259:156:39","nodeType":"YulBlock","src":"21259:156:39","statements":[{"nativeSrc":"21277:43:39","nodeType":"YulVariableDeclaration","src":"21277:43:39","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21304:3:39","nodeType":"YulIdentifier","src":"21304:3:39"},{"name":"srcOffset","nativeSrc":"21309:9:39","nodeType":"YulIdentifier","src":"21309:9:39"}],"functionName":{"name":"add","nativeSrc":"21300:3:39","nodeType":"YulIdentifier","src":"21300:3:39"},"nativeSrc":"21300:19:39","nodeType":"YulFunctionCall","src":"21300:19:39"}],"functionName":{"name":"mload","nativeSrc":"21294:5:39","nodeType":"YulIdentifier","src":"21294:5:39"},"nativeSrc":"21294:26:39","nodeType":"YulFunctionCall","src":"21294:26:39"},"variables":[{"name":"lastValue","nativeSrc":"21281:9:39","nodeType":"YulTypedName","src":"21281:9:39","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21344:6:39","nodeType":"YulIdentifier","src":"21344:6:39"},{"arguments":[{"name":"lastValue","nativeSrc":"21371:9:39","nodeType":"YulIdentifier","src":"21371:9:39"},{"arguments":[{"name":"newLen","nativeSrc":"21386:6:39","nodeType":"YulIdentifier","src":"21386:6:39"},{"kind":"number","nativeSrc":"21394:4:39","nodeType":"YulLiteral","src":"21394:4:39","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"21382:3:39","nodeType":"YulIdentifier","src":"21382:3:39"},"nativeSrc":"21382:17:39","nodeType":"YulFunctionCall","src":"21382:17:39"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"21352:18:39","nodeType":"YulIdentifier","src":"21352:18:39"},"nativeSrc":"21352:48:39","nodeType":"YulFunctionCall","src":"21352:48:39"}],"functionName":{"name":"sstore","nativeSrc":"21337:6:39","nodeType":"YulIdentifier","src":"21337:6:39"},"nativeSrc":"21337:64:39","nodeType":"YulFunctionCall","src":"21337:64:39"},"nativeSrc":"21337:64:39","nodeType":"YulExpressionStatement","src":"21337:64:39"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"21242:7:39","nodeType":"YulIdentifier","src":"21242:7:39"},{"name":"newLen","nativeSrc":"21251:6:39","nodeType":"YulIdentifier","src":"21251:6:39"}],"functionName":{"name":"lt","nativeSrc":"21239:2:39","nodeType":"YulIdentifier","src":"21239:2:39"},"nativeSrc":"21239:19:39","nodeType":"YulFunctionCall","src":"21239:19:39"},"nativeSrc":"21236:179:39","nodeType":"YulIf","src":"21236:179:39"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21435:4:39","nodeType":"YulIdentifier","src":"21435:4:39"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"21449:6:39","nodeType":"YulIdentifier","src":"21449:6:39"},{"kind":"number","nativeSrc":"21457:1:39","nodeType":"YulLiteral","src":"21457:1:39","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"21445:3:39","nodeType":"YulIdentifier","src":"21445:3:39"},"nativeSrc":"21445:14:39","nodeType":"YulFunctionCall","src":"21445:14:39"},{"kind":"number","nativeSrc":"21461:1:39","nodeType":"YulLiteral","src":"21461:1:39","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21441:3:39","nodeType":"YulIdentifier","src":"21441:3:39"},"nativeSrc":"21441:22:39","nodeType":"YulFunctionCall","src":"21441:22:39"}],"functionName":{"name":"sstore","nativeSrc":"21428:6:39","nodeType":"YulIdentifier","src":"21428:6:39"},"nativeSrc":"21428:36:39","nodeType":"YulFunctionCall","src":"21428:36:39"},"nativeSrc":"21428:36:39","nodeType":"YulExpressionStatement","src":"21428:36:39"}]},"nativeSrc":"20856:618:39","nodeType":"YulCase","src":"20856:618:39","value":{"kind":"number","nativeSrc":"20861:1:39","nodeType":"YulLiteral","src":"20861:1:39","type":"","value":"1"}},{"body":{"nativeSrc":"21491:222:39","nodeType":"YulBlock","src":"21491:222:39","statements":[{"nativeSrc":"21505:14:39","nodeType":"YulVariableDeclaration","src":"21505:14:39","value":{"kind":"number","nativeSrc":"21518:1:39","nodeType":"YulLiteral","src":"21518:1:39","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"21509:5:39","nodeType":"YulTypedName","src":"21509:5:39","type":""}]},{"body":{"nativeSrc":"21542:67:39","nodeType":"YulBlock","src":"21542:67:39","statements":[{"nativeSrc":"21560:35:39","nodeType":"YulAssignment","src":"21560:35:39","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21579:3:39","nodeType":"YulIdentifier","src":"21579:3:39"},{"name":"srcOffset","nativeSrc":"21584:9:39","nodeType":"YulIdentifier","src":"21584:9:39"}],"functionName":{"name":"add","nativeSrc":"21575:3:39","nodeType":"YulIdentifier","src":"21575:3:39"},"nativeSrc":"21575:19:39","nodeType":"YulFunctionCall","src":"21575:19:39"}],"functionName":{"name":"mload","nativeSrc":"21569:5:39","nodeType":"YulIdentifier","src":"21569:5:39"},"nativeSrc":"21569:26:39","nodeType":"YulFunctionCall","src":"21569:26:39"},"variableNames":[{"name":"value","nativeSrc":"21560:5:39","nodeType":"YulIdentifier","src":"21560:5:39"}]}]},"condition":{"name":"newLen","nativeSrc":"21535:6:39","nodeType":"YulIdentifier","src":"21535:6:39"},"nativeSrc":"21532:77:39","nodeType":"YulIf","src":"21532:77:39"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21629:4:39","nodeType":"YulIdentifier","src":"21629:4:39"},{"arguments":[{"name":"value","nativeSrc":"21688:5:39","nodeType":"YulIdentifier","src":"21688:5:39"},{"name":"newLen","nativeSrc":"21695:6:39","nodeType":"YulIdentifier","src":"21695:6:39"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"21635:52:39","nodeType":"YulIdentifier","src":"21635:52:39"},"nativeSrc":"21635:67:39","nodeType":"YulFunctionCall","src":"21635:67:39"}],"functionName":{"name":"sstore","nativeSrc":"21622:6:39","nodeType":"YulIdentifier","src":"21622:6:39"},"nativeSrc":"21622:81:39","nodeType":"YulFunctionCall","src":"21622:81:39"},"nativeSrc":"21622:81:39","nodeType":"YulExpressionStatement","src":"21622:81:39"}]},"nativeSrc":"21483:230:39","nodeType":"YulCase","src":"21483:230:39","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"20836:6:39","nodeType":"YulIdentifier","src":"20836:6:39"},{"kind":"number","nativeSrc":"20844:2:39","nodeType":"YulLiteral","src":"20844:2:39","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"20833:2:39","nodeType":"YulIdentifier","src":"20833:2:39"},"nativeSrc":"20833:14:39","nodeType":"YulFunctionCall","src":"20833:14:39"},"nativeSrc":"20826:887:39","nodeType":"YulSwitch","src":"20826:887:39"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"20324:1395:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"20405:4:39","nodeType":"YulTypedName","src":"20405:4:39","type":""},{"name":"src","nativeSrc":"20411:3:39","nodeType":"YulTypedName","src":"20411:3:39","type":""}],"src":"20324:1395:39"},{"body":{"nativeSrc":"21851:206:39","nodeType":"YulBlock","src":"21851:206:39","statements":[{"nativeSrc":"21861:26:39","nodeType":"YulAssignment","src":"21861:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"21873:9:39","nodeType":"YulIdentifier","src":"21873:9:39"},{"kind":"number","nativeSrc":"21884:2:39","nodeType":"YulLiteral","src":"21884:2:39","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21869:3:39","nodeType":"YulIdentifier","src":"21869:3:39"},"nativeSrc":"21869:18:39","nodeType":"YulFunctionCall","src":"21869:18:39"},"variableNames":[{"name":"tail","nativeSrc":"21861:4:39","nodeType":"YulIdentifier","src":"21861:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21941:6:39","nodeType":"YulIdentifier","src":"21941:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"21954:9:39","nodeType":"YulIdentifier","src":"21954:9:39"},{"kind":"number","nativeSrc":"21965:1:39","nodeType":"YulLiteral","src":"21965:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21950:3:39","nodeType":"YulIdentifier","src":"21950:3:39"},"nativeSrc":"21950:17:39","nodeType":"YulFunctionCall","src":"21950:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21897:43:39","nodeType":"YulIdentifier","src":"21897:43:39"},"nativeSrc":"21897:71:39","nodeType":"YulFunctionCall","src":"21897:71:39"},"nativeSrc":"21897:71:39","nodeType":"YulExpressionStatement","src":"21897:71:39"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22022:6:39","nodeType":"YulIdentifier","src":"22022:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"22035:9:39","nodeType":"YulIdentifier","src":"22035:9:39"},{"kind":"number","nativeSrc":"22046:2:39","nodeType":"YulLiteral","src":"22046:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22031:3:39","nodeType":"YulIdentifier","src":"22031:3:39"},"nativeSrc":"22031:18:39","nodeType":"YulFunctionCall","src":"22031:18:39"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21978:43:39","nodeType":"YulIdentifier","src":"21978:43:39"},"nativeSrc":"21978:72:39","nodeType":"YulFunctionCall","src":"21978:72:39"},"nativeSrc":"21978:72:39","nodeType":"YulExpressionStatement","src":"21978:72:39"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"21725:332:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21815:9:39","nodeType":"YulTypedName","src":"21815:9:39","type":""},{"name":"value1","nativeSrc":"21827:6:39","nodeType":"YulTypedName","src":"21827:6:39","type":""},{"name":"value0","nativeSrc":"21835:6:39","nodeType":"YulTypedName","src":"21835:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21846:4:39","nodeType":"YulTypedName","src":"21846:4:39","type":""}],"src":"21725:332:39"},{"body":{"nativeSrc":"22091:152:39","nodeType":"YulBlock","src":"22091:152:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22108:1:39","nodeType":"YulLiteral","src":"22108:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"22111:77:39","nodeType":"YulLiteral","src":"22111:77:39","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"22101:6:39","nodeType":"YulIdentifier","src":"22101:6:39"},"nativeSrc":"22101:88:39","nodeType":"YulFunctionCall","src":"22101:88:39"},"nativeSrc":"22101:88:39","nodeType":"YulExpressionStatement","src":"22101:88:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22205:1:39","nodeType":"YulLiteral","src":"22205:1:39","type":"","value":"4"},{"kind":"number","nativeSrc":"22208:4:39","nodeType":"YulLiteral","src":"22208:4:39","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"22198:6:39","nodeType":"YulIdentifier","src":"22198:6:39"},"nativeSrc":"22198:15:39","nodeType":"YulFunctionCall","src":"22198:15:39"},"nativeSrc":"22198:15:39","nodeType":"YulExpressionStatement","src":"22198:15:39"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"22229:1:39","nodeType":"YulLiteral","src":"22229:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"22232:4:39","nodeType":"YulLiteral","src":"22232:4:39","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"22222:6:39","nodeType":"YulIdentifier","src":"22222:6:39"},"nativeSrc":"22222:15:39","nodeType":"YulFunctionCall","src":"22222:15:39"},"nativeSrc":"22222:15:39","nodeType":"YulExpressionStatement","src":"22222:15:39"}]},"name":"panic_error_0x12","nativeSrc":"22063:180:39","nodeType":"YulFunctionDefinition","src":"22063:180:39"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2EC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x38E21CCE EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x258 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x6EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x21DA JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x2236 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0xAC8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x416 JUMPI POP PUSH2 0x415 DUP3 PUSH2 0xB4E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x488 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA DUP3 PUSH2 0xC30 JUMP JUMPDEST POP PUSH2 0x4C4 DUP3 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x4D8 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x553 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x567 DUP4 DUP4 PUSH2 0x562 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5DD JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x61E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E DUP3 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x701 PUSH1 0x0 PUSH2 0xFB0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x742 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x790 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x79E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x7D0 PUSH2 0xCF5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1076 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7E6 DUP5 DUP5 DUP5 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0x7F1 PUSH2 0xCF5 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x11E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x80B DUP3 PUSH2 0xC30 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x82C SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x858 SWAP1 PUSH2 0x22A5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x888 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x8B6 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x8CB JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x90E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x900 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E8 SWAP3 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x90E JUMP JUMPDEST PUSH2 0x909 DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B4 DUP3 PUSH1 0x8 SLOAD PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x9C0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x1434 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA2B SWAP1 PUSH2 0x2408 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD0 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4B DUP2 PUSH2 0xFB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC19 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC29 JUMPI POP PUSH2 0xC28 DUP3 PUSH2 0x1490 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC3C DUP4 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCAF JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD0A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1537 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD1B DUP5 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH2 0xD5C DUP2 DUP5 DUP7 PUSH2 0x16FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDEE JUMPI PUSH2 0xD9F PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE71 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF31 PUSH2 0xCF5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF4F PUSH2 0x709 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFAE JUMPI PUSH2 0xF72 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x138F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1244 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1280 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2506 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1304 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12FC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F3 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x138D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13B8 DUP3 PUSH2 0xC30 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13C3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x13E3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x140E JUMP JUMPDEST DUP1 PUSH2 0x13ED DUP5 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13FE SWAP3 SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1430 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x188E JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x26DF JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1484 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1570 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x0 PUSH2 0x1580 DUP5 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15EB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15FE JUMPI POP PUSH2 0x15FC DUP2 DUP5 PUSH2 0xA34 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1640 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16A2 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1707 DUP4 DUP4 DUP4 PUSH2 0x18B2 JUMP JUMPDEST PUSH2 0x17BB JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B2 SWAP3 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x17CF DUP5 PUSH2 0x1973 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1820 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1883 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1877 JUMPI PUSH2 0x1876 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x182E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1898 DUP4 DUP4 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x18AD PUSH2 0x18A3 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x11E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x196A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x192B JUMPI POP PUSH2 0x192A DUP5 DUP5 PUSH2 0xA34 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1969 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1951 DUP4 PUSH2 0xCB8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19D1 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19C7 JUMPI PUSH2 0x19C6 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A0E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A3D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A33 JUMPI PUSH2 0x1A32 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A66 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A8B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AAE JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AA4 JUMPI PUSH2 0x1AA3 PUSH2 0x27DA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1ABD JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B38 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B2F SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B46 DUP4 DUP4 PUSH1 0x0 PUSH2 0xD0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C08 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C25 DUP2 PUSH2 0x1BFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C41 JUMPI PUSH2 0x1C40 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP5 DUP3 DUP6 ADD PUSH2 0x1C16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6D DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CC8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1CFA DUP2 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D38 DUP2 DUP5 PUSH2 0x1CE5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D53 DUP2 PUSH2 0x1D40 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D70 DUP2 PUSH2 0x1D4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8C JUMPI PUSH2 0x1D8B PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D9A DUP5 DUP3 DUP6 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCE DUP3 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1DC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x1DC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E25 DUP2 PUSH2 0x1DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH2 0x1E41 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E50 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E61 DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E84 JUMPI PUSH2 0x1E83 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EA3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EB4 DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF4 DUP2 PUSH2 0x1D40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1C58 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3B DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F66 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F77 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FC3 DUP3 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FE2 JUMPI PUSH2 0x1FE1 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF5 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP PUSH2 0x2001 DUP3 DUP3 PUSH2 0x1FBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2021 JUMPI PUSH2 0x2020 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH2 0x202A DUP3 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH2 0x2054 DUP5 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1F86 JUMP JUMPDEST JUMPDEST PUSH2 0x2080 DUP5 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2046 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20DE DUP8 DUP3 DUP9 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20EF DUP8 DUP3 DUP9 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2100 DUP8 DUP3 DUP9 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2121 JUMPI PUSH2 0x2120 PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST PUSH2 0x212D DUP8 DUP3 DUP9 ADD PUSH2 0x2088 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2154 JUMPI PUSH2 0x2153 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH2 0x215D DUP3 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217D PUSH2 0x2178 DUP5 PUSH2 0x2139 JUMP JUMPDEST PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x1F86 JUMP JUMPDEST JUMPDEST PUSH2 0x21A4 DUP5 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21C1 JUMPI PUSH2 0x21C0 PUSH2 0x1F81 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x216A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F1 JUMPI PUSH2 0x21F0 PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21FF DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x1BCE JUMP JUMPDEST JUMPDEST PUSH2 0x222C DUP6 DUP3 DUP7 ADD PUSH2 0x21AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225B DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226C DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22D0 JUMPI PUSH2 0x22CF PUSH2 0x2276 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22EB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x22F8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0x2305 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2323 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x232D DUP2 DUP6 PUSH2 0x230D JUMP JUMPDEST SWAP4 POP PUSH2 0x233D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2355 DUP3 DUP6 PUSH2 0x2318 JUMP JUMPDEST SWAP2 POP PUSH2 0x2361 DUP3 DUP5 PUSH2 0x2318 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C7265616479206D696E746564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A3 PUSH1 0xE DUP4 PUSH2 0x1C99 JUMP JUMPDEST SWAP2 POP PUSH2 0x23AE DUP3 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23D2 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2413 DUP3 PUSH2 0x1D40 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2445 JUMPI PUSH2 0x2444 PUSH2 0x23D9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2477 DUP3 PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x2481 DUP2 DUP6 PUSH2 0x245B JUMP JUMPDEST SWAP4 POP PUSH2 0x2491 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x249A DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24BA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x24C7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x24D4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EEB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24E6 DUP2 DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2500 DUP2 PUSH2 0x1BFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251C JUMPI PUSH2 0x251B PUSH2 0x1BC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x252A DUP5 DUP3 DUP6 ADD PUSH2 0x24F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2595 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2558 JUMP JUMPDEST PUSH2 0x259F DUP7 DUP4 PUSH2 0x2558 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DC PUSH2 0x25D7 PUSH2 0x25D2 DUP5 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F6 DUP4 PUSH2 0x25C1 JUMP JUMPDEST PUSH2 0x260A PUSH2 0x2602 DUP3 PUSH2 0x25E3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2565 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x261F PUSH2 0x2612 JUMP JUMPDEST PUSH2 0x262A DUP2 DUP5 DUP5 PUSH2 0x25ED JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x264E JUMPI PUSH2 0x2643 PUSH1 0x0 DUP3 PUSH2 0x2617 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2630 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x2664 DUP2 PUSH2 0x2533 JUMP JUMPDEST PUSH2 0x266D DUP5 PUSH2 0x2548 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x267C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2690 PUSH2 0x2688 DUP6 PUSH2 0x2548 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x262F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2698 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26CF DUP4 DUP4 PUSH2 0x26A5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E8 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2701 JUMPI PUSH2 0x2700 PUSH2 0x1F8B JUMP JUMPDEST JUMPDEST PUSH2 0x270B DUP3 SLOAD PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x2716 DUP3 DUP3 DUP6 PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2749 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2737 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2741 DUP6 DUP3 PUSH2 0x26C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2757 DUP7 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x277F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x275A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x279C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2798 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x26A5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27C6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x27D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE CREATE 0xC8 RETURNDATACOPY CALLER 0xCB XOR 0xD7 SWAP5 0xC9 0x27 0xF6 0x2C DUP9 MSTORE8 0xEB STATICCALL JUMPDEST 0xEA 0xE5 PUSH28 0x907CFA3A04B1B7C8781C664736F6C63430008180033000000000000 ","sourceMap":"191:476:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:207:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;285:41:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4786:132:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:7;;;:::i;:::-;;253:26:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:593:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414:251:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3927:153:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:207:21;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;2364:89:18:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;285:41:37:-;;;;;;;;;;;;;;;;;;;;;;:::o;4786:132:18:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:7:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;253:26:37:-;;;;:::o;1638:85:7:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:18:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;1211:593:21:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;414:251:37:-;1531:13:7;:11;:13::i;:::-;497:9:37::1;:13;507:2;497:13;;;;;;;;;;;;;;;;;;;;;;;;;496:14;488:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;539:26;549:2;553:11;;539:9;:26::i;:::-;575:30;588:11;;601:3;575:12;:30::i;:::-;631:4;615:9;:13;625:2;615:13;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;645:11;;:13;;;;;;;;;:::i;:::-;;;;;;414:251:::0;;:::o;3927:153:18:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:7:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1560:300:18:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;16212:241::-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:25:-;709:7;735:10;728:17;;656:96;:::o;14492:120:18:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:7:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:18:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;993:924:23:-;1190:1;1173:2;:14;;;:18;1169:742;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:323;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:323;1839:6;1833:13;1824:6;1820:2;1816:15;1809:38;1207:694;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:742;993:924;;;;;:::o;3173:92:18:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;1932:167:21:-;2045:9;2023:10;:19;2034:7;2023:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2069:23;2084:7;2069:23;;;;;;:::i;:::-;;;;;;;;1932:167;;:::o;763:146:30:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;5732:115:18:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;1308:632:29:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1615:6;1611:2;1607:15;1599:6;1595:28;1588:35;;1650:247;1657:4;1650:247;;;1681:5;;;;;;;;1785:10;1780:2;1773:5;1769:14;1764:32;1759:3;1751:46;1841:2;1832:11;;;;;;:::i;:::-;;;;;1874:1;1865:5;:10;1650:247;1861:21;1650:247;1917:6;1910:13;;;;;1308:632;;;:::o;10977:207:18:-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;29154:916:32:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;9978:327:18:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;7:75:39:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:654::-;11174:6;11182;11231:2;11219:9;11210:7;11206:23;11202:32;11199:119;;;11237:79;;:::i;:::-;11199:119;11357:1;11382:53;11427:7;11418:6;11407:9;11403:22;11382:53;:::i;:::-;11372:63;;11328:117;11512:2;11501:9;11497:18;11484:32;11543:18;11535:6;11532:30;11529:117;;;11565:79;;:::i;:::-;11529:117;11670:63;11725:7;11716:6;11705:9;11701:22;11670:63;:::i;:::-;11660:73;;11455:288;11096:654;;;;;:::o;11756:474::-;11824:6;11832;11881:2;11869:9;11860:7;11856:23;11852:32;11849:119;;;11887:79;;:::i;:::-;11849:119;12007:1;12032:53;12077:7;12068:6;12057:9;12053:22;12032:53;:::i;:::-;12022:63;;11978:117;12134:2;12160:53;12205:7;12196:6;12185:9;12181:22;12160:53;:::i;:::-;12150:63;;12105:118;11756:474;;;;;:::o;12236:180::-;12284:77;12281:1;12274:88;12381:4;12378:1;12371:15;12405:4;12402:1;12395:15;12422:320;12466:6;12503:1;12497:4;12493:12;12483:22;;12550:1;12544:4;12540:12;12571:18;12561:81;;12627:4;12619:6;12615:17;12605:27;;12561:81;12689:2;12681:6;12678:14;12658:18;12655:38;12652:84;;12708:18;;:::i;:::-;12652:84;12473:269;12422:320;;;:::o;12748:442::-;12897:4;12935:2;12924:9;12920:18;12912:26;;12948:71;13016:1;13005:9;13001:17;12992:6;12948:71;:::i;:::-;13029:72;13097:2;13086:9;13082:18;13073:6;13029:72;:::i;:::-;13111;13179:2;13168:9;13164:18;13155:6;13111:72;:::i;:::-;12748:442;;;;;;:::o;13196:148::-;13298:11;13335:3;13320:18;;13196:148;;;;:::o;13350:390::-;13456:3;13484:39;13517:5;13484:39;:::i;:::-;13539:89;13621:6;13616:3;13539:89;:::i;:::-;13532:96;;13637:65;13695:6;13690:3;13683:4;13676:5;13672:16;13637:65;:::i;:::-;13727:6;13722:3;13718:16;13711:23;;13460:280;13350:390;;;;:::o;13746:435::-;13926:3;13948:95;14039:3;14030:6;13948:95;:::i;:::-;13941:102;;14060:95;14151:3;14142:6;14060:95;:::i;:::-;14053:102;;14172:3;14165:10;;13746:435;;;;;:::o;14187:164::-;14327:16;14323:1;14315:6;14311:14;14304:40;14187:164;:::o;14357:366::-;14499:3;14520:67;14584:2;14579:3;14520:67;:::i;:::-;14513:74;;14596:93;14685:3;14596:93;:::i;:::-;14714:2;14709:3;14705:12;14698:19;;14357:366;;;:::o;14729:419::-;14895:4;14933:2;14922:9;14918:18;14910:26;;14982:9;14976:4;14972:20;14968:1;14957:9;14953:17;14946:47;15010:131;15136:4;15010:131;:::i;:::-;15002:139;;14729:419;;;:::o;15154:180::-;15202:77;15199:1;15192:88;15299:4;15296:1;15289:15;15323:4;15320:1;15313:15;15340:233;15379:3;15402:24;15420:5;15402:24;:::i;:::-;15393:33;;15448:66;15441:5;15438:77;15435:103;;15518:18;;:::i;:::-;15435:103;15565:1;15558:5;15554:13;15547:20;;15340:233;;;:::o;15579:98::-;15630:6;15664:5;15658:12;15648:22;;15579:98;;;:::o;15683:168::-;15766:11;15800:6;15795:3;15788:19;15840:4;15835:3;15831:14;15816:29;;15683:168;;;;:::o;15857:373::-;15943:3;15971:38;16003:5;15971:38;:::i;:::-;16025:70;16088:6;16083:3;16025:70;:::i;:::-;16018:77;;16104:65;16162:6;16157:3;16150:4;16143:5;16139:16;16104:65;:::i;:::-;16194:29;16216:6;16194:29;:::i;:::-;16189:3;16185:39;16178:46;;15947:283;15857:373;;;;:::o;16236:640::-;16431:4;16469:3;16458:9;16454:19;16446:27;;16483:71;16551:1;16540:9;16536:17;16527:6;16483:71;:::i;:::-;16564:72;16632:2;16621:9;16617:18;16608:6;16564:72;:::i;:::-;16646;16714:2;16703:9;16699:18;16690:6;16646:72;:::i;:::-;16765:9;16759:4;16755:20;16750:2;16739:9;16735:18;16728:48;16793:76;16864:4;16855:6;16793:76;:::i;:::-;16785:84;;16236:640;;;;;;;:::o;16882:141::-;16938:5;16969:6;16963:13;16954:22;;16985:32;17011:5;16985:32;:::i;:::-;16882:141;;;;:::o;17029:349::-;17098:6;17147:2;17135:9;17126:7;17122:23;17118:32;17115:119;;;17153:79;;:::i;:::-;17115:119;17273:1;17298:63;17353:7;17344:6;17333:9;17329:22;17298:63;:::i;:::-;17288:73;;17244:127;17029:349;;;;:::o;17384:141::-;17433:4;17456:3;17448:11;;17479:3;17476:1;17469:14;17513:4;17510:1;17500:18;17492:26;;17384:141;;;:::o;17531:93::-;17568:6;17615:2;17610;17603:5;17599:14;17595:23;17585:33;;17531:93;;;:::o;17630:107::-;17674:8;17724:5;17718:4;17714:16;17693:37;;17630:107;;;;:::o;17743:393::-;17812:6;17862:1;17850:10;17846:18;17885:97;17915:66;17904:9;17885:97;:::i;:::-;18003:39;18033:8;18022:9;18003:39;:::i;:::-;17991:51;;18075:4;18071:9;18064:5;18060:21;18051:30;;18124:4;18114:8;18110:19;18103:5;18100:30;18090:40;;17819:317;;17743:393;;;;;:::o;18142:60::-;18170:3;18191:5;18184:12;;18142:60;;;:::o;18208:142::-;18258:9;18291:53;18309:34;18318:24;18336:5;18318:24;:::i;:::-;18309:34;:::i;:::-;18291:53;:::i;:::-;18278:66;;18208:142;;;:::o;18356:75::-;18399:3;18420:5;18413:12;;18356:75;;;:::o;18437:269::-;18547:39;18578:7;18547:39;:::i;:::-;18608:91;18657:41;18681:16;18657:41;:::i;:::-;18649:6;18642:4;18636:11;18608:91;:::i;:::-;18602:4;18595:105;18513:193;18437:269;;;:::o;18712:73::-;18757:3;18712:73;:::o;18791:189::-;18868:32;;:::i;:::-;18909:65;18967:6;18959;18953:4;18909:65;:::i;:::-;18844:136;18791:189;;:::o;18986:186::-;19046:120;19063:3;19056:5;19053:14;19046:120;;;19117:39;19154:1;19147:5;19117:39;:::i;:::-;19090:1;19083:5;19079:13;19070:22;;19046:120;;;18986:186;;:::o;19178:543::-;19279:2;19274:3;19271:11;19268:446;;;19313:38;19345:5;19313:38;:::i;:::-;19397:29;19415:10;19397:29;:::i;:::-;19387:8;19383:44;19580:2;19568:10;19565:18;19562:49;;;19601:8;19586:23;;19562:49;19624:80;19680:22;19698:3;19680:22;:::i;:::-;19670:8;19666:37;19653:11;19624:80;:::i;:::-;19283:431;;19268:446;19178:543;;;:::o;19727:117::-;19781:8;19831:5;19825:4;19821:16;19800:37;;19727:117;;;;:::o;19850:169::-;19894:6;19927:51;19975:1;19971:6;19963:5;19960:1;19956:13;19927:51;:::i;:::-;19923:56;20008:4;20002;19998:15;19988:25;;19901:118;19850:169;;;;:::o;20024:295::-;20100:4;20246:29;20271:3;20265:4;20246:29;:::i;:::-;20238:37;;20308:3;20305:1;20301:11;20295:4;20292:21;20284:29;;20024:295;;;;:::o;20324:1395::-;20441:37;20474:3;20441:37;:::i;:::-;20543:18;20535:6;20532:30;20529:56;;;20565:18;;:::i;:::-;20529:56;20609:38;20641:4;20635:11;20609:38;:::i;:::-;20694:67;20754:6;20746;20740:4;20694:67;:::i;:::-;20788:1;20812:4;20799:17;;20844:2;20836:6;20833:14;20861:1;20856:618;;;;21518:1;21535:6;21532:77;;;21584:9;21579:3;21575:19;21569:26;21560:35;;21532:77;21635:67;21695:6;21688:5;21635:67;:::i;:::-;21629:4;21622:81;21491:222;20826:887;;20856:618;20908:4;20904:9;20896:6;20892:22;20942:37;20974:4;20942:37;:::i;:::-;21001:1;21015:208;21029:7;21026:1;21023:14;21015:208;;;21108:9;21103:3;21099:19;21093:26;21085:6;21078:42;21159:1;21151:6;21147:14;21137:24;;21206:2;21195:9;21191:18;21178:31;;21052:4;21049:1;21045:12;21040:17;;21015:208;;;21251:6;21242:7;21239:19;21236:179;;;21309:9;21304:3;21300:19;21294:26;21352:48;21394:4;21386:6;21382:17;21371:9;21352:48;:::i;:::-;21344:6;21337:64;21259:156;21236:179;21461:1;21457;21449:6;21445:14;21441:22;21435:4;21428:36;20863:611;;;20826:887;;20416:1303;;;20324:1395;;:::o;21725:332::-;21846:4;21884:2;21873:9;21869:18;21861:26;;21897:71;21965:1;21954:9;21950:17;21941:6;21897:71;:::i;:::-;21978:72;22046:2;22035:9;22031:18;22022:6;21978:72;:::i;:::-;21725:332;;;;;:::o;22063:180::-;22111:77;22108:1;22101:88;22208:4;22205:1;22198:15;22232:4;22229:1;22222:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","hasMinted(address)":"38e21cce","isApprovedForAll(address,address)":"e985e9c5","mint(address,string)":"d0def521","name()":"06fdde03","nextTokenId()":"75794a3c","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LearningModuleNFT.sol\":\"LearningModuleNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x2b27b58570ff2456c7e65022a356c7e4f205bfabf95d0e870855a86587bb1356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51268bd4266abe09ec07cac04b84c63ed97d2f847fd821e681428b1df7991b1\",\"dweb:/ipfs/QmQBHj8tsrtiXBdegQZeqcxmBEQd2PMzPSKQ5jUELedEHb\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/LearningModuleNFT.sol\":{\"keccak256\":\"0xc9abcc74ab6c8570250149821bfffa7b4036a9ef13ff63ae54571ea41c5466e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18b9ca5057fd669d6dbe6ee9a97f4e96126ae873fc0241aee0abce56ed21f978\",\"dweb:/ipfs/QmRJLdSPDQ5BY1RoSohnrKDKJ191YTLSFJDEmwLgeX98Vo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2387,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2389,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2393,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2397,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2401,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2407,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3474,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":1607,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":9239,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"nextTokenId","offset":0,"slot":"8","type":"t_uint256"},{"astId":9243,"contract":"contracts/LearningModuleNFT.sol:LearningModuleNFT","label":"hasMinted","offset":0,"slot":"9","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/Marketplace.sol":{"Marketplace":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1649":{"entryPoint":null,"id":1649,"parameterSlots":1,"returnSlots":0},"@_9306":{"entryPoint":null,"id":9306,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_1745":{"entryPoint":153,"id":1745,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":349,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:590:39","nodeType":"YulBlock","src":"0:590:39","statements":[{"body":{"nativeSrc":"52:81:39","nodeType":"YulBlock","src":"52:81:39","statements":[{"nativeSrc":"62:65:39","nodeType":"YulAssignment","src":"62:65:39","value":{"arguments":[{"name":"value","nativeSrc":"77:5:39","nodeType":"YulIdentifier","src":"77:5:39"},{"kind":"number","nativeSrc":"84:42:39","nodeType":"YulLiteral","src":"84:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:39","nodeType":"YulIdentifier","src":"73:3:39"},"nativeSrc":"73:54:39","nodeType":"YulFunctionCall","src":"73:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:39","nodeType":"YulIdentifier","src":"62:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:39","nodeType":"YulTypedName","src":"34:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:39","nodeType":"YulTypedName","src":"44:7:39","type":""}],"src":"7:126:39"},{"body":{"nativeSrc":"184:51:39","nodeType":"YulBlock","src":"184:51:39","statements":[{"nativeSrc":"194:35:39","nodeType":"YulAssignment","src":"194:35:39","value":{"arguments":[{"name":"value","nativeSrc":"223:5:39","nodeType":"YulIdentifier","src":"223:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:39","nodeType":"YulIdentifier","src":"205:17:39"},"nativeSrc":"205:24:39","nodeType":"YulFunctionCall","src":"205:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:39","nodeType":"YulIdentifier","src":"194:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:39","nodeType":"YulTypedName","src":"166:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:39","nodeType":"YulTypedName","src":"176:7:39","type":""}],"src":"139:96:39"},{"body":{"nativeSrc":"306:53:39","nodeType":"YulBlock","src":"306:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:39","nodeType":"YulIdentifier","src":"323:3:39"},{"arguments":[{"name":"value","nativeSrc":"346:5:39","nodeType":"YulIdentifier","src":"346:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:39","nodeType":"YulIdentifier","src":"328:17:39"},"nativeSrc":"328:24:39","nodeType":"YulFunctionCall","src":"328:24:39"}],"functionName":{"name":"mstore","nativeSrc":"316:6:39","nodeType":"YulIdentifier","src":"316:6:39"},"nativeSrc":"316:37:39","nodeType":"YulFunctionCall","src":"316:37:39"},"nativeSrc":"316:37:39","nodeType":"YulExpressionStatement","src":"316:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:39","nodeType":"YulTypedName","src":"294:5:39","type":""},{"name":"pos","nativeSrc":"301:3:39","nodeType":"YulTypedName","src":"301:3:39","type":""}],"src":"241:118:39"},{"body":{"nativeSrc":"463:124:39","nodeType":"YulBlock","src":"463:124:39","statements":[{"nativeSrc":"473:26:39","nodeType":"YulAssignment","src":"473:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:39","nodeType":"YulIdentifier","src":"485:9:39"},{"kind":"number","nativeSrc":"496:2:39","nodeType":"YulLiteral","src":"496:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:39","nodeType":"YulIdentifier","src":"481:3:39"},"nativeSrc":"481:18:39","nodeType":"YulFunctionCall","src":"481:18:39"},"variableNames":[{"name":"tail","nativeSrc":"473:4:39","nodeType":"YulIdentifier","src":"473:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:39","nodeType":"YulIdentifier","src":"553:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:39","nodeType":"YulIdentifier","src":"566:9:39"},{"kind":"number","nativeSrc":"577:1:39","nodeType":"YulLiteral","src":"577:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:39","nodeType":"YulIdentifier","src":"562:3:39"},"nativeSrc":"562:17:39","nodeType":"YulFunctionCall","src":"562:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:39","nodeType":"YulIdentifier","src":"509:43:39"},"nativeSrc":"509:71:39","nodeType":"YulFunctionCall","src":"509:71:39"},"nativeSrc":"509:71:39","nodeType":"YulExpressionStatement","src":"509:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:39","nodeType":"YulTypedName","src":"435:9:39","type":""},{"name":"value0","nativeSrc":"447:6:39","nodeType":"YulTypedName","src":"447:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:39","nodeType":"YulTypedName","src":"458:4:39","type":""}],"src":"365:222:39"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610390806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b60405161006591906102e1565b60405180910390f35b6100886004803603810190610083919061032d565b6100c7565b005b61009261014d565b61009c60006101d4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101415760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013891906102e1565b60405180910390fd5b61014a816101d4565b50565b610155610298565b73ffffffffffffffffffffffffffffffffffffffff1661017361009e565b73ffffffffffffffffffffffffffffffffffffffff16146101d257610196610298565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016101c991906102e1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102cb826102a0565b9050919050565b6102db816102c0565b82525050565b60006020820190506102f660008301846102d2565b92915050565b600080fd5b61030a816102c0565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b600060208284031215610343576103426102fc565b5b600061035184828501610318565b9150509291505056fea2646970667358221220c1946de49b364f89729a1665a8cb1b198b92a01c1abb34ed9551aedc4e54bb9b64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x390 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x9C PUSH1 0x0 PUSH2 0x1D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x14D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x1D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x155 PUSH2 0x298 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173 PUSH2 0x9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D2 JUMPI PUSH2 0x196 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x327 DUP2 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x343 JUMPI PUSH2 0x342 PUSH2 0x2FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP5 DUP3 DUP6 ADD PUSH2 0x318 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP5 PUSH14 0xE49B364F89729A1665A8CB1B198B SWAP3 LOG0 SHR BYTE 0xBB CALLVALUE 0xED SWAP6 MLOAD 0xAE 0xDC 0x4E SLOAD 0xBB SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"112:131:38:-:0;;;150:36;;;;;;;;;;172:10;1297:1:7;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;112:131:38;;2912:187:7;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:39:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;112:131:38:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1683":{"entryPoint":333,"id":1683,"parameterSlots":0,"returnSlots":0},"@_msgSender_3949":{"entryPoint":664,"id":3949,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1745":{"entryPoint":468,"id":1745,"parameterSlots":1,"returnSlots":0},"@owner_1666":{"entryPoint":158,"id":1666,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1697":{"entryPoint":138,"id":1697,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1725":{"entryPoint":199,"id":1725,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":737,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":704,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":764,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":769,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1525:39","nodeType":"YulBlock","src":"0:1525:39","statements":[{"body":{"nativeSrc":"52:81:39","nodeType":"YulBlock","src":"52:81:39","statements":[{"nativeSrc":"62:65:39","nodeType":"YulAssignment","src":"62:65:39","value":{"arguments":[{"name":"value","nativeSrc":"77:5:39","nodeType":"YulIdentifier","src":"77:5:39"},{"kind":"number","nativeSrc":"84:42:39","nodeType":"YulLiteral","src":"84:42:39","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:39","nodeType":"YulIdentifier","src":"73:3:39"},"nativeSrc":"73:54:39","nodeType":"YulFunctionCall","src":"73:54:39"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:39","nodeType":"YulIdentifier","src":"62:7:39"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:39","nodeType":"YulTypedName","src":"34:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:39","nodeType":"YulTypedName","src":"44:7:39","type":""}],"src":"7:126:39"},{"body":{"nativeSrc":"184:51:39","nodeType":"YulBlock","src":"184:51:39","statements":[{"nativeSrc":"194:35:39","nodeType":"YulAssignment","src":"194:35:39","value":{"arguments":[{"name":"value","nativeSrc":"223:5:39","nodeType":"YulIdentifier","src":"223:5:39"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:39","nodeType":"YulIdentifier","src":"205:17:39"},"nativeSrc":"205:24:39","nodeType":"YulFunctionCall","src":"205:24:39"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:39","nodeType":"YulIdentifier","src":"194:7:39"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:39","nodeType":"YulTypedName","src":"166:5:39","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:39","nodeType":"YulTypedName","src":"176:7:39","type":""}],"src":"139:96:39"},{"body":{"nativeSrc":"306:53:39","nodeType":"YulBlock","src":"306:53:39","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:39","nodeType":"YulIdentifier","src":"323:3:39"},{"arguments":[{"name":"value","nativeSrc":"346:5:39","nodeType":"YulIdentifier","src":"346:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:39","nodeType":"YulIdentifier","src":"328:17:39"},"nativeSrc":"328:24:39","nodeType":"YulFunctionCall","src":"328:24:39"}],"functionName":{"name":"mstore","nativeSrc":"316:6:39","nodeType":"YulIdentifier","src":"316:6:39"},"nativeSrc":"316:37:39","nodeType":"YulFunctionCall","src":"316:37:39"},"nativeSrc":"316:37:39","nodeType":"YulExpressionStatement","src":"316:37:39"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:39","nodeType":"YulTypedName","src":"294:5:39","type":""},{"name":"pos","nativeSrc":"301:3:39","nodeType":"YulTypedName","src":"301:3:39","type":""}],"src":"241:118:39"},{"body":{"nativeSrc":"463:124:39","nodeType":"YulBlock","src":"463:124:39","statements":[{"nativeSrc":"473:26:39","nodeType":"YulAssignment","src":"473:26:39","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:39","nodeType":"YulIdentifier","src":"485:9:39"},{"kind":"number","nativeSrc":"496:2:39","nodeType":"YulLiteral","src":"496:2:39","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:39","nodeType":"YulIdentifier","src":"481:3:39"},"nativeSrc":"481:18:39","nodeType":"YulFunctionCall","src":"481:18:39"},"variableNames":[{"name":"tail","nativeSrc":"473:4:39","nodeType":"YulIdentifier","src":"473:4:39"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:39","nodeType":"YulIdentifier","src":"553:6:39"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:39","nodeType":"YulIdentifier","src":"566:9:39"},{"kind":"number","nativeSrc":"577:1:39","nodeType":"YulLiteral","src":"577:1:39","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:39","nodeType":"YulIdentifier","src":"562:3:39"},"nativeSrc":"562:17:39","nodeType":"YulFunctionCall","src":"562:17:39"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:39","nodeType":"YulIdentifier","src":"509:43:39"},"nativeSrc":"509:71:39","nodeType":"YulFunctionCall","src":"509:71:39"},"nativeSrc":"509:71:39","nodeType":"YulExpressionStatement","src":"509:71:39"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:39","nodeType":"YulTypedName","src":"435:9:39","type":""},{"name":"value0","nativeSrc":"447:6:39","nodeType":"YulTypedName","src":"447:6:39","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:39","nodeType":"YulTypedName","src":"458:4:39","type":""}],"src":"365:222:39"},{"body":{"nativeSrc":"633:35:39","nodeType":"YulBlock","src":"633:35:39","statements":[{"nativeSrc":"643:19:39","nodeType":"YulAssignment","src":"643:19:39","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:39","nodeType":"YulLiteral","src":"659:2:39","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:39","nodeType":"YulIdentifier","src":"653:5:39"},"nativeSrc":"653:9:39","nodeType":"YulFunctionCall","src":"653:9:39"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:39","nodeType":"YulIdentifier","src":"643:6:39"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:39","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:39","nodeType":"YulTypedName","src":"626:6:39","type":""}],"src":"593:75:39"},{"body":{"nativeSrc":"763:28:39","nodeType":"YulBlock","src":"763:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:39","nodeType":"YulLiteral","src":"780:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:39","nodeType":"YulLiteral","src":"783:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:39","nodeType":"YulIdentifier","src":"773:6:39"},"nativeSrc":"773:12:39","nodeType":"YulFunctionCall","src":"773:12:39"},"nativeSrc":"773:12:39","nodeType":"YulExpressionStatement","src":"773:12:39"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:39","nodeType":"YulFunctionDefinition","src":"674:117:39"},{"body":{"nativeSrc":"886:28:39","nodeType":"YulBlock","src":"886:28:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:39","nodeType":"YulLiteral","src":"903:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:39","nodeType":"YulLiteral","src":"906:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:39","nodeType":"YulIdentifier","src":"896:6:39"},"nativeSrc":"896:12:39","nodeType":"YulFunctionCall","src":"896:12:39"},"nativeSrc":"896:12:39","nodeType":"YulExpressionStatement","src":"896:12:39"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:39","nodeType":"YulFunctionDefinition","src":"797:117:39"},{"body":{"nativeSrc":"963:79:39","nodeType":"YulBlock","src":"963:79:39","statements":[{"body":{"nativeSrc":"1020:16:39","nodeType":"YulBlock","src":"1020:16:39","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1029:1:39","nodeType":"YulLiteral","src":"1029:1:39","type":"","value":"0"},{"kind":"number","nativeSrc":"1032:1:39","nodeType":"YulLiteral","src":"1032:1:39","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1022:6:39","nodeType":"YulIdentifier","src":"1022:6:39"},"nativeSrc":"1022:12:39","nodeType":"YulFunctionCall","src":"1022:12:39"},"nativeSrc":"1022:12:39","nodeType":"YulExpressionStatement","src":"1022:12:39"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"986:5:39","nodeType":"YulIdentifier","src":"986:5:39"},{"arguments":[{"name":"value","nativeSrc":"1011:5:39","nodeType":"YulIdentifier","src":"1011:5:39"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"993:17:39","nodeType":"YulIdentifier","src":"993:17:39"},"nativeSrc":"993:24:39","nodeType":"YulFunctionCall","src":"993:24:39"}],"functionName":{"name":"eq","nativeSrc":"983:2:39","nodeType":"YulIdentifier","src":"983:2:39"},"nativeSrc":"983:35:39","nodeType":"YulFunctionCall","src":"983:35:39"}],"functionName":{"name":"iszero","nativeSrc":"976:6:39","nodeType":"YulIdentifier","src":"976:6:39"},"nativeSrc":"976:43:39","nodeType":"YulFunctionCall","src":"976:43:39"},"nativeSrc":"973:63:39","nodeType":"YulIf","src":"973:63:39"}]},"name":"validator_revert_t_address","nativeSrc":"920:122:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"956:5:39","nodeType":"YulTypedName","src":"956:5:39","type":""}],"src":"920:122:39"},{"body":{"nativeSrc":"1100:87:39","nodeType":"YulBlock","src":"1100:87:39","statements":[{"nativeSrc":"1110:29:39","nodeType":"YulAssignment","src":"1110:29:39","value":{"arguments":[{"name":"offset","nativeSrc":"1132:6:39","nodeType":"YulIdentifier","src":"1132:6:39"}],"functionName":{"name":"calldataload","nativeSrc":"1119:12:39","nodeType":"YulIdentifier","src":"1119:12:39"},"nativeSrc":"1119:20:39","nodeType":"YulFunctionCall","src":"1119:20:39"},"variableNames":[{"name":"value","nativeSrc":"1110:5:39","nodeType":"YulIdentifier","src":"1110:5:39"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1175:5:39","nodeType":"YulIdentifier","src":"1175:5:39"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1148:26:39","nodeType":"YulIdentifier","src":"1148:26:39"},"nativeSrc":"1148:33:39","nodeType":"YulFunctionCall","src":"1148:33:39"},"nativeSrc":"1148:33:39","nodeType":"YulExpressionStatement","src":"1148:33:39"}]},"name":"abi_decode_t_address","nativeSrc":"1048:139:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1078:6:39","nodeType":"YulTypedName","src":"1078:6:39","type":""},{"name":"end","nativeSrc":"1086:3:39","nodeType":"YulTypedName","src":"1086:3:39","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1094:5:39","nodeType":"YulTypedName","src":"1094:5:39","type":""}],"src":"1048:139:39"},{"body":{"nativeSrc":"1259:263:39","nodeType":"YulBlock","src":"1259:263:39","statements":[{"body":{"nativeSrc":"1305:83:39","nodeType":"YulBlock","src":"1305:83:39","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1307:77:39","nodeType":"YulIdentifier","src":"1307:77:39"},"nativeSrc":"1307:79:39","nodeType":"YulFunctionCall","src":"1307:79:39"},"nativeSrc":"1307:79:39","nodeType":"YulExpressionStatement","src":"1307:79:39"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1280:7:39","nodeType":"YulIdentifier","src":"1280:7:39"},{"name":"headStart","nativeSrc":"1289:9:39","nodeType":"YulIdentifier","src":"1289:9:39"}],"functionName":{"name":"sub","nativeSrc":"1276:3:39","nodeType":"YulIdentifier","src":"1276:3:39"},"nativeSrc":"1276:23:39","nodeType":"YulFunctionCall","src":"1276:23:39"},{"kind":"number","nativeSrc":"1301:2:39","nodeType":"YulLiteral","src":"1301:2:39","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1272:3:39","nodeType":"YulIdentifier","src":"1272:3:39"},"nativeSrc":"1272:32:39","nodeType":"YulFunctionCall","src":"1272:32:39"},"nativeSrc":"1269:119:39","nodeType":"YulIf","src":"1269:119:39"},{"nativeSrc":"1398:117:39","nodeType":"YulBlock","src":"1398:117:39","statements":[{"nativeSrc":"1413:15:39","nodeType":"YulVariableDeclaration","src":"1413:15:39","value":{"kind":"number","nativeSrc":"1427:1:39","nodeType":"YulLiteral","src":"1427:1:39","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1417:6:39","nodeType":"YulTypedName","src":"1417:6:39","type":""}]},{"nativeSrc":"1442:63:39","nodeType":"YulAssignment","src":"1442:63:39","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1477:9:39","nodeType":"YulIdentifier","src":"1477:9:39"},{"name":"offset","nativeSrc":"1488:6:39","nodeType":"YulIdentifier","src":"1488:6:39"}],"functionName":{"name":"add","nativeSrc":"1473:3:39","nodeType":"YulIdentifier","src":"1473:3:39"},"nativeSrc":"1473:22:39","nodeType":"YulFunctionCall","src":"1473:22:39"},{"name":"dataEnd","nativeSrc":"1497:7:39","nodeType":"YulIdentifier","src":"1497:7:39"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1452:20:39","nodeType":"YulIdentifier","src":"1452:20:39"},"nativeSrc":"1452:53:39","nodeType":"YulFunctionCall","src":"1452:53:39"},"variableNames":[{"name":"value0","nativeSrc":"1442:6:39","nodeType":"YulIdentifier","src":"1442:6:39"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1193:329:39","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1229:9:39","nodeType":"YulTypedName","src":"1229:9:39","type":""},{"name":"dataEnd","nativeSrc":"1240:7:39","nodeType":"YulTypedName","src":"1240:7:39","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1252:6:39","nodeType":"YulTypedName","src":"1252:6:39","type":""}],"src":"1193:329:39"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":39,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b60405161006591906102e1565b60405180910390f35b6100886004803603810190610083919061032d565b6100c7565b005b61009261014d565b61009c60006101d4565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101415760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161013891906102e1565b60405180910390fd5b61014a816101d4565b50565b610155610298565b73ffffffffffffffffffffffffffffffffffffffff1661017361009e565b73ffffffffffffffffffffffffffffffffffffffff16146101d257610196610298565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016101c991906102e1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102cb826102a0565b9050919050565b6102db816102c0565b82525050565b60006020820190506102f660008301846102d2565b92915050565b600080fd5b61030a816102c0565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b600060208284031215610343576103426102fc565b5b600061035184828501610318565b9150509291505056fea2646970667358221220c1946de49b364f89729a1665a8cb1b198b92a01c1abb34ed9551aedc4e54bb9b64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x9C PUSH1 0x0 PUSH2 0x1D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF PUSH2 0x14D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x1D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x155 PUSH2 0x298 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x173 PUSH2 0x9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D2 JUMPI PUSH2 0x196 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x327 DUP2 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x343 JUMPI PUSH2 0x342 PUSH2 0x2FC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP5 DUP3 DUP6 ADD PUSH2 0x318 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP5 PUSH14 0xE49B364F89729A1665A8CB1B198B SWAP3 LOG0 SHR BYTE 0xBB CALLVALUE 0xED SWAP6 MLOAD 0xAE 0xDC 0x4E SLOAD 0xBB SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"112:131:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:7;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:25:-;709:7;735:10;728:17;;656:96;:::o;7:126:39:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0xc6e222f76a5354d78c7217bbed972bcb2718bdd0a2b0da5a09487f0744a3f8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd53aa67dece01aba042756c13fbf76ee9e9c777218ff7e08596bfb9afe1896c\",\"dweb:/ipfs/QmdbaBqfes2L59FAkDjVY12gt2rvaPYJi9jXR9d6zrgL5r\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1607,"contract":"contracts/Marketplace.sol:Marketplace","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}}}}}